[
{
  "name":"[B"
},
{
  "name":"[C"
},
{
  "name":"[D"
},
{
  "name":"[F"
},
{
  "name":"[I"
},
{
  "name":"[J"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Lio.micrometer.core.instrument.distribution.TimeWindowFixedBoundaryHistogram$FixedBoundaryHistogram;"
},
{
  "name":"[Ljava.io.Serializable;"
},
{
  "name":"[Ljava.lang.CharSequence;"
},
{
  "name":"[Ljava.lang.Class;"
},
{
  "name":"[Ljava.lang.Comparable;"
},
{
  "name":"[Ljava.lang.Object;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljava.lang.constant.Constable;"
},
{
  "name":"[Ljava.lang.constant.ConstantDesc;"
},
{
  "name":"[Ljava.lang.invoke.TypeDescriptor$OfField;"
},
{
  "name":"[Ljava.lang.invoke.TypeDescriptor;"
},
{
  "name":"[Ljava.lang.reflect.AnnotatedElement;"
},
{
  "name":"[Ljava.lang.reflect.GenericDeclaration;"
},
{
  "name":"[Ljava.lang.reflect.Type;"
},
{
  "name":"[Ljavax.management.openmbean.CompositeData;"
},
{
  "name":"[Lorg.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure;"
},
{
  "name":"[Lorg.springframework.boot.context.config.ConfigDataLocation;"
},
{
  "name":"[Lorg.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider;"
},
{
  "name":"[Lorg.springframework.core.annotation.AnnotationAttributes;"
},
{
  "name":"[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
},
{
  "name":"[S"
},
{
  "name":"[Z"
},
{
  "name":"boolean",
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.CurrentSpanCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"annotate","parameterTypes":["java.lang.String"] }, 
    {"name":"name","parameterTypes":["java.lang.String"] }, 
    {"name":"tag","parameterTypes":["java.lang.String","java.lang.String"] }
  ]
},
{
  "name":"brave.SpanCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"brave.Tracer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.Tracing",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"clock","parameterTypes":["brave.propagation.TraceContext"] }, 
    {"name":"current","parameterTypes":[] }, 
    {"name":"currentTracer","parameterTypes":[] }, 
    {"name":"newBuilder","parameterTypes":[] }
  ]
},
{
  "name":"brave.Tracing$Default",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"currentTraceContext","parameterTypes":[] }, 
    {"name":"errorParser","parameterTypes":[] }, 
    {"name":"isNoop","parameterTypes":[] }, 
    {"name":"propagation","parameterTypes":[] }, 
    {"name":"propagationFactory","parameterTypes":[] }, 
    {"name":"sampler","parameterTypes":[] }, 
    {"name":"setNoop","parameterTypes":["boolean"] }, 
    {"name":"tracer","parameterTypes":[] }
  ]
},
{
  "name":"brave.baggage.BaggagePropagation$FactoryBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.baggage.BaggagePropagationCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"brave.baggage.CorrelationScopeCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"brave.baggage.CorrelationScopeDecorator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.baggage.CorrelationScopeDecorator$Builder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"add","parameterTypes":["brave.baggage.CorrelationScopeConfig"] }, 
    {"name":"build","parameterTypes":[] }, 
    {"name":"clear","parameterTypes":[] }, 
    {"name":"configs","parameterTypes":[] }
  ]
},
{
  "name":"brave.baggage.CorrelationScopeDecorator$Multiple",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"decorateScope","parameterTypes":["brave.propagation.TraceContext","brave.propagation.CurrentTraceContext$Scope"] }]
},
{
  "name":"brave.context.slf4j.MDCScopeDecorator$Builder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.handler.SpanHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"begin","parameterTypes":["brave.propagation.TraceContext","brave.handler.MutableSpan","brave.propagation.TraceContext"] }, 
    {"name":"handlesAbandoned","parameterTypes":[] }
  ]
},
{
  "name":"brave.internal.Nullable",
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.propagation.CurrentTraceContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"executor","parameterTypes":["java.util.concurrent.Executor"] }, 
    {"name":"executorService","parameterTypes":["java.util.concurrent.ExecutorService"] }, 
    {"name":"maybeScope","parameterTypes":["brave.propagation.TraceContext"] }, 
    {"name":"wrap","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"wrap","parameterTypes":["java.util.concurrent.Callable"] }
  ]
},
{
  "name":"brave.propagation.CurrentTraceContext$ScopeDecorator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"brave.propagation.Propagation",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"brave.propagation.Propagation$Factory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"decorate","parameterTypes":["brave.propagation.TraceContext"] }, 
    {"name":"get","parameterTypes":[] }, 
    {"name":"requires128BitTraceId","parameterTypes":[] }, 
    {"name":"supportsJoin","parameterTypes":[] }
  ]
},
{
  "name":"brave.propagation.ThreadLocalCurrentTraceContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"get","parameterTypes":[] }, 
    {"name":"newScope","parameterTypes":["brave.propagation.TraceContext"] }
  ]
},
{
  "name":"brave.sampler.CountingSampler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"create","parameterTypes":["float"] }, 
    {"name":"isSampled","parameterTypes":["long"] }
  ]
},
{
  "name":"brave.sampler.Sampler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"ch.qos.logback.classic.LoggerContext"
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MDCConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"co.elastic.clients.elasticsearch.ElasticsearchClient"
},
{
  "name":"co.elastic.clients.transport.ElasticsearchTransport"
},
{
  "name":"com.aayushatharva.brotli4j.Brotli4jLoader"
},
{
  "name":"com.couchbase.client.java.Bucket"
},
{
  "name":"com.couchbase.client.java.Cluster"
},
{
  "name":"com.datastax.oss.driver.api.core.CqlSession"
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator"
},
{
  "name":"com.fasterxml.jackson.core.ObjectCodec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getJsonFactory","parameterTypes":[] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }
  ]
},
{
  "name":"com.fasterxml.jackson.core.TreeCodec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.core.Versioned",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.Module",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getDependencies","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"createArrayNode","parameterTypes":[] }, 
    {"name":"createObjectNode","parameterTypes":[] }, 
    {"name":"getFactory","parameterTypes":[] }, 
    {"name":"missingNode","parameterTypes":[] }, 
    {"name":"nullNode","parameterTypes":[] }, 
    {"name":"readTree","parameterTypes":["com.fasterxml.jackson.core.JsonParser"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, 
    {"name":"treeAsTokens","parameterTypes":["com.fasterxml.jackson.core.TreeNode"] }, 
    {"name":"treeToValue","parameterTypes":["com.fasterxml.jackson.core.TreeNode","java.lang.Class"] }, 
    {"name":"version","parameterTypes":[] }, 
    {"name":"writeTree","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","com.fasterxml.jackson.core.TreeNode"] }, 
    {"name":"writeValue","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","java.lang.Object"] }
  ]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addAbstractTypeMapping","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"addDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonDeserializer"] }, 
    {"name":"addKeyDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.KeyDeserializer"] }, 
    {"name":"addKeySerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addSerializer","parameterTypes":["com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addSerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addValueInstantiator","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.deser.ValueInstantiator"] }, 
    {"name":"getModuleName","parameterTypes":[] }, 
    {"name":"getTypeId","parameterTypes":[] }, 
    {"name":"registerSubtypes","parameterTypes":["java.util.Collection"] }, 
    {"name":"registerSubtypes","parameterTypes":["com.fasterxml.jackson.databind.jsontype.NamedType[]"] }, 
    {"name":"registerSubtypes","parameterTypes":["java.lang.Class[]"] }, 
    {"name":"setAbstractTypes","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"] }, 
    {"name":"setDeserializerModifier","parameterTypes":["com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"] }, 
    {"name":"setDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleDeserializers"] }, 
    {"name":"setKeyDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"] }, 
    {"name":"setKeySerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, 
    {"name":"setMixInAnnotation","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"setSerializerModifier","parameterTypes":["com.fasterxml.jackson.databind.ser.BeanSerializerModifier"] }, 
    {"name":"setSerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, 
    {"name":"setValueInstantiators","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleValueInstantiators"] }, 
    {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, 
    {"name":"version","parameterTypes":[] }
  ]
},
{
  "name":"com.fasterxml.jackson.dataformat.cbor$CBORFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.cbor.CBORFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.smile$SmileFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.smile.SmileFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.xml$XmlMapper"
},
{
  "name":"com.fasterxml.jackson.dataformat.xml.XmlMapper"
},
{
  "name":"com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.Cache"
},
{
  "name":"com.github.benmanes.caffeine.cache.Caffeine"
},
{
  "name":"com.google.gson.Gson",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.gson.GsonBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.protobuf$Message"
},
{
  "name":"com.google.protobuf.Message"
},
{
  "name":"com.hazelcast.core.Hazelcast"
},
{
  "name":"com.hazelcast.core.HazelcastInstance"
},
{
  "name":"com.hazelcast.spring.cache.HazelcastCache"
},
{
  "name":"com.hotpot.GatewayApplication",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"main","parameterTypes":["java.lang.String[]"] }
  ]
},
{
  "name":"com.hotpot.GatewayApplication$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }
  ]
},
{
  "name":"com.hotpot.common.config.ObservationConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"actuatorServerContextPredicate","parameterTypes":[] }
  ]
},
{
  "name":"com.hotpot.common.config.ObservationConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"actuatorServerContextPredicate","parameterTypes":[] }
  ]
},
{
  "name":"com.hotpot.common.config.ObservationConfig$$SpringCGLIB$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.hotpot.common.config.ObservationConfig$$SpringCGLIB$$2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.hotpot.gateway.config.GatewaySecurityConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"securityFilterChain","parameterTypes":["org.springframework.security.config.web.server.ServerHttpSecurity"] }
  ]
},
{
  "name":"com.hotpot.gateway.config.GatewaySecurityConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"securityFilterChain","parameterTypes":["org.springframework.security.config.web.server.ServerHttpSecurity"] }
  ]
},
{
  "name":"com.hotpot.gateway.config.GatewaySecurityConfig$$SpringCGLIB$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.hotpot.gateway.config.GatewaySecurityConfig$$SpringCGLIB$$2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.ibm.lang.management.OperatingSystemMXBean"
},
{
  "name":"com.mongodb.MongoClientSettings"
},
{
  "name":"com.mongodb.client.MongoClient"
},
{
  "name":"com.mongodb.reactivestreams.client.MongoClient"
},
{
  "name":"com.rabbitmq.client.Channel"
},
{
  "name":"com.rabbitmq.client.ConnectionFactory"
},
{
  "name":"com.rometools.rome.feed$WireFeed"
},
{
  "name":"com.rometools.rome.feed.WireFeed"
},
{
  "name":"com.samskivert.mustache$Template"
},
{
  "name":"com.samskivert.mustache.Mustache"
},
{
  "name":"com.samskivert.mustache.Template"
},
{
  "name":"com.sendgrid.SendGrid"
},
{
  "name":"com.stoyanr.evictor.ConcurrentMapWithTimedEviction"
},
{
  "name":"com.sun.crypto.provider.PBKDF2Core$HmacSHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.management.GarbageCollectionNotificationInfo"
},
{
  "name":"com.sun.management.GarbageCollectorMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.GcInfo",
  "queryAllPublicMethods":true,
  "fields":[
    {"name":"builder"}, 
    {"name":"extAttributes"}
  ],
  "methods":[{"name":"getMemoryUsageBeforeGc","parameterTypes":[] }]
},
{
  "name":"com.sun.management.HotSpotDiagnosticMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.OperatingSystemMXBean",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getCpuLoad","parameterTypes":[] }, 
    {"name":"getProcessCpuLoad","parameterTypes":[] }
  ]
},
{
  "name":"com.sun.management.ThreadMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.UnixOperatingSystemMXBean"
},
{
  "name":"com.sun.management.VMOption",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.internal.GarbageCollectorExtImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotDiagnostic",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotThreadImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.OperatingSystemImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.unboundid.ldap.listener.InMemoryDirectoryServer"
},
{
  "name":"com.wavefront.sdk.common.WavefrontSender"
},
{
  "name":"com.wavefront.sdk.common.application.ApplicationTags"
},
{
  "name":"com.zaxxer.hikari.HikariDataSource"
},
{
  "name":"feign.Client"
},
{
  "name":"freemarker.template$Configuration"
},
{
  "name":"freemarker.template.Configuration"
},
{
  "name":"graphql.GraphQL"
},
{
  "name":"groovy.lang$MetaClass"
},
{
  "name":"groovy.lang.MetaClass"
},
{
  "name":"groovy.text$TemplateEngine"
},
{
  "name":"groovy.text.TemplateEngine"
},
{
  "name":"groovy.text.markup.MarkupTemplateEngine"
},
{
  "name":"io.grpc.Channel"
},
{
  "name":"io.lettuce.core.RedisClient"
},
{
  "name":"io.lettuce.core.metrics.MicrometerCommandLatencyRecorder"
},
{
  "name":"io.micrometer.appoptics.AppOpticsMeterRegistry"
},
{
  "name":"io.micrometer.atlas.AtlasMeterRegistry"
},
{
  "name":"io.micrometer.common.lang.NonNull",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.common.lang.NonNullApi",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.common.lang.NonNullFields",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.common.lang.Nullable",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.core.annotation.Timed"
},
{
  "name":"io.micrometer.core.instrument.Clock",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.Clock$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"monotonicTime","parameterTypes":[] }, 
    {"name":"wallTime","parameterTypes":[] }
  ]
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"clear","parameterTypes":[] }, 
    {"name":"close","parameterTypes":[] }, 
    {"name":"config","parameterTypes":[] }, 
    {"name":"counter","parameterTypes":["java.lang.String","java.lang.Iterable"] }, 
    {"name":"counter","parameterTypes":["java.lang.String","java.lang.String[]"] }, 
    {"name":"find","parameterTypes":["java.lang.String"] }, 
    {"name":"forEachMeter","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Number"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Object","java.util.function.ToDoubleFunction"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Number"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Object","java.util.function.ToDoubleFunction"] }, 
    {"name":"gaugeCollectionSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Collection"] }, 
    {"name":"gaugeMapSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Map"] }, 
    {"name":"get","parameterTypes":["java.lang.String"] }, 
    {"name":"getMeters","parameterTypes":[] }, 
    {"name":"isClosed","parameterTypes":[] }, 
    {"name":"more","parameterTypes":[] }, 
    {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter"] }, 
    {"name":"removeByPreFilterId","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"summary","parameterTypes":["java.lang.String","java.lang.Iterable"] }, 
    {"name":"summary","parameterTypes":["java.lang.String","java.lang.String[]"] }, 
    {"name":"timer","parameterTypes":["java.lang.String","java.lang.Iterable"] }, 
    {"name":"timer","parameterTypes":["java.lang.String","java.lang.String[]"] }
  ]
},
{
  "name":"io.micrometer.core.instrument.binder.MeterBinder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.jersey.server.MetricsApplicationEventListener"
},
{
  "name":"io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, 
    {"name":"close","parameterTypes":[] }
  ]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, 
    {"name":"close","parameterTypes":[] }
  ]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.logging.Log4j2Metrics"
},
{
  "name":"io.micrometer.core.instrument.binder.logging.LogbackMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, 
    {"name":"close","parameterTypes":[] }
  ]
},
{
  "name":"io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.ProcessorMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.UptimeMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"
},
{
  "name":"io.micrometer.core.instrument.composite.CompositeMeterRegistry"
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"map","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }]
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter$9",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] }
  ]
},
{
  "name":"io.micrometer.core.instrument.config.MeterRegistryConfig",
  "methods":[{"name":"requireValid","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.observation.MeterObservationHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.datadog.DatadogMeterRegistry"
},
{
  "name":"io.micrometer.dynatrace.DynatraceMeterRegistry"
},
{
  "name":"io.micrometer.elastic.ElasticMeterRegistry"
},
{
  "name":"io.micrometer.ganglia.GangliaMeterRegistry"
},
{
  "name":"io.micrometer.graphite.GraphiteMeterRegistry"
},
{
  "name":"io.micrometer.humio.HumioMeterRegistry"
},
{
  "name":"io.micrometer.influx.InfluxMeterRegistry"
},
{
  "name":"io.micrometer.jmx.JmxMeterRegistry"
},
{
  "name":"io.micrometer.kairos.KairosMeterRegistry"
},
{
  "name":"io.micrometer.newrelic.NewRelicMeterRegistry"
},
{
  "name":"io.micrometer.observation.Observation"
},
{
  "name":"io.micrometer.observation.ObservationHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }
  ]
},
{
  "name":"io.micrometer.observation.ObservationPredicate",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.observation.ObservationRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.observation.SimpleObservationRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getCurrentObservation","parameterTypes":[] }, 
    {"name":"getCurrentObservationScope","parameterTypes":[] }, 
    {"name":"isNoop","parameterTypes":[] }, 
    {"name":"observationConfig","parameterTypes":[] }, 
    {"name":"setCurrentObservationScope","parameterTypes":["io.micrometer.observation.Observation$Scope"] }
  ]
},
{
  "name":"io.micrometer.prometheus.PrometheusConfig",
  "queryAllPublicMethods":true,
  "methods":[{"name":"validate","parameterTypes":[] }]
},
{
  "name":"io.micrometer.prometheus.PrometheusMeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.registry.otlp.OtlpMeterRegistry"
},
{
  "name":"io.micrometer.signalfx.SignalFxMeterRegistry"
},
{
  "name":"io.micrometer.stackdriver.StackdriverMeterRegistry"
},
{
  "name":"io.micrometer.statsd.StatsdMeterRegistry"
},
{
  "name":"io.micrometer.tracing.BaggageManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.tracing.SpanCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.tracing.Tracer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.tracing.brave.bridge.BravePropagator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"extract","parameterTypes":["java.lang.Object","io.micrometer.tracing.propagation.Propagator$Getter"] }, 
    {"name":"fields","parameterTypes":[] }, 
    {"name":"inject","parameterTypes":["io.micrometer.tracing.TraceContext","java.lang.Object","io.micrometer.tracing.propagation.Propagator$Setter"] }
  ]
},
{
  "name":"io.micrometer.tracing.brave.bridge.BraveSpanCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"event","parameterTypes":["java.lang.String"] }, 
    {"name":"name","parameterTypes":["java.lang.String"] }, 
    {"name":"tag","parameterTypes":["java.lang.String","java.lang.String"] }
  ]
},
{
  "name":"io.micrometer.tracing.brave.bridge.BraveTracer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"createBaggage","parameterTypes":["java.lang.String"] }, 
    {"name":"createBaggage","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"currentSpan","parameterTypes":[] }, 
    {"name":"currentSpanCustomizer","parameterTypes":[] }, 
    {"name":"currentTraceContext","parameterTypes":[] }, 
    {"name":"getAllBaggage","parameterTypes":[] }, 
    {"name":"getBaggage","parameterTypes":["io.micrometer.tracing.TraceContext","java.lang.String"] }, 
    {"name":"getBaggage","parameterTypes":["java.lang.String"] }, 
    {"name":"nextSpan","parameterTypes":[] }, 
    {"name":"nextSpan","parameterTypes":["io.micrometer.tracing.Span"] }, 
    {"name":"spanBuilder","parameterTypes":[] }, 
    {"name":"startScopedSpan","parameterTypes":["java.lang.String"] }, 
    {"name":"traceContextBuilder","parameterTypes":[] }, 
    {"name":"withSpan","parameterTypes":["io.micrometer.tracing.Span"] }
  ]
},
{
  "name":"io.micrometer.tracing.brave.bridge.CompositeSpanHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"end","parameterTypes":["brave.propagation.TraceContext","brave.handler.MutableSpan","brave.handler.SpanHandler$Cause"] }]
},
{
  "name":"io.micrometer.tracing.brave.bridge.W3CPropagation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"create","parameterTypes":["brave.propagation.Propagation$KeyFactory"] }, 
    {"name":"extractor","parameterTypes":["brave.propagation.Propagation$Getter"] }, 
    {"name":"injector","parameterTypes":["brave.propagation.Propagation$Setter"] }, 
    {"name":"keys","parameterTypes":[] }
  ]
},
{
  "name":"io.micrometer.tracing.handler.DefaultTracingObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getTracer","parameterTypes":[] }, 
    {"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }
  ]
},
{
  "name":"io.micrometer.tracing.handler.PropagatingReceiverTracingObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getTracer","parameterTypes":[] }, 
    {"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }
  ]
},
{
  "name":"io.micrometer.tracing.handler.PropagatingSenderTracingObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"createSenderSpan","parameterTypes":["io.micrometer.observation.transport.SenderContext"] }, 
    {"name":"customizeSenderSpan","parameterTypes":["io.micrometer.observation.transport.SenderContext","io.micrometer.tracing.Span"] }, 
    {"name":"getTracer","parameterTypes":[] }, 
    {"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onError","parameterTypes":["io.micrometer.observation.transport.SenderContext"] }, 
    {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStart","parameterTypes":["io.micrometer.observation.transport.SenderContext"] }, 
    {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStop","parameterTypes":["io.micrometer.observation.transport.SenderContext"] }, 
    {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }
  ]
},
{
  "name":"io.micrometer.tracing.handler.TracingAwareMeterObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onEvent","parameterTypes":["io.micrometer.observation.Observation$Event","io.micrometer.observation.Observation$Context"] }, 
    {"name":"onScopeClosed","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onScopeOpened","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }
  ]
},
{
  "name":"io.micrometer.tracing.handler.TracingObservationHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getParentSpan","parameterTypes":["io.micrometer.observation.Observation$ContextView"] }, 
    {"name":"getRequiredSpan","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"getSpanName","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"getTracingContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onEvent","parameterTypes":["io.micrometer.observation.Observation$Event","io.micrometer.observation.Observation$Context"] }, 
    {"name":"onScopeClosed","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onScopeOpened","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"tagSpan","parameterTypes":["io.micrometer.observation.Observation$Context","io.micrometer.tracing.Span"] }
  ]
},
{
  "name":"io.micrometer.tracing.otel.bridge.OtelTracer"
},
{
  "name":"io.micrometer.tracing.propagation.Propagator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt"}]
},
{
  "name":"io.netty.buffer.ByteBuf"
},
{
  "name":"io.netty.buffer.PooledByteBufAllocator"
},
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.channel.ChannelInitializer",
  "methods":[
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.channel.CombinedChannelDuplexHandler",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.channel.DefaultFileRegion"
},
{
  "name":"io.netty.channel.epoll.Epoll"
},
{
  "name":"io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
},
{
  "name":"io.netty.channel.kqueue.KQueue"
},
{
  "name":"io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe"
},
{
  "name":"io.netty.channel.nio.NioEventLoop"
},
{
  "name":"io.netty.channel.socket.nio.NioSocketChannel"
},
{
  "name":"io.netty.channel.unix.PeerCredentials"
},
{
  "name":"io.netty.handler.codec.MessageToMessageDecoder",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.MessageToMessageEncoder",
  "methods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.dns.DatagramDnsQueryEncoder"
},
{
  "name":"io.netty.handler.codec.http.HttpClientCodec"
},
{
  "name":"io.netty.handler.codec.http.HttpContentDecoder",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.handler.codec.http.HttpContentDecompressor"
},
{
  "name":"io.netty.incubator.channel.uring.IOUring"
},
{
  "name":"io.netty.resolver.dns.DnsNameResolver$1"
},
{
  "name":"io.netty.resolver.dns.DnsNameResolver$3"
},
{
  "name":"io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.util.AbstractReferenceCounted",
  "fields":[{"name":"refCnt"}]
},
{
  "name":"io.netty.util.NettyRuntime"
},
{
  "name":"io.netty.util.ReferenceCountUtil",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.netty.util.concurrent.DefaultPromise"
},
{
  "name":"io.netty.util.concurrent.FastThreadLocalRunnable"
},
{
  "name":"io.netty.util.concurrent.SingleThreadEventExecutor$4"
},
{
  "name":"io.netty.util.internal.ThreadExecutorMap$2"
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.netty5.buffer$Buffer"
},
{
  "name":"io.netty5.buffer.Buffer"
},
{
  "name":"io.opentelemetry.exporter.zipkin.ZipkinSpanExporter"
},
{
  "name":"io.prometheus.client.CollectorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.prometheus.client.exemplars.CounterExemplarSampler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.prometheus.client.exemplars.DefaultExemplarSampler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"sample","parameterTypes":["double","double","double","io.prometheus.client.exemplars.Exemplar"] }, 
    {"name":"sample","parameterTypes":["double","io.prometheus.client.exemplars.Exemplar"] }
  ]
},
{
  "name":"io.prometheus.client.exemplars.ExemplarSampler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.prometheus.client.exemplars.HistogramExemplarSampler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.prometheus.client.exemplars.tracer.common.SpanContextSupplier",
  "queryAllPublicMethods":true
},
{
  "name":"io.prometheus.client.exporter.PushGateway"
},
{
  "name":"io.r2dbc.pool.ConnectionPool"
},
{
  "name":"io.r2dbc.spi.ConnectionFactory"
},
{
  "name":"io.reactivex.rxjava3.core$Flowable"
},
{
  "name":"io.reactivex.rxjava3.core.Flowable"
},
{
  "name":"io.rsocket.RSocket"
},
{
  "name":"io.rsocket.core.RSocketServer"
},
{
  "name":"io.smallrye.mutiny$Multi"
},
{
  "name":"io.smallrye.mutiny.Multi"
},
{
  "name":"io.undertow.Undertow"
},
{
  "name":"io.undertow.websockets$WebSocketProtocolHandshakeHandler"
},
{
  "name":"io.undertow.websockets.WebSocketProtocolHandshakeHandler"
},
{
  "name":"io.vavr.control$Option"
},
{
  "name":"io.vavr.control.Option"
},
{
  "name":"jakarta.activation.MimeType"
},
{
  "name":"jakarta.annotation.ManagedBean"
},
{
  "name":"jakarta.annotation.PostConstruct",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.annotation.PreDestroy",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.ejb$EJB"
},
{
  "name":"jakarta.ejb.EJB"
},
{
  "name":"jakarta.inject$Inject"
},
{
  "name":"jakarta.inject$Named"
},
{
  "name":"jakarta.inject$Provider"
},
{
  "name":"jakarta.inject$Qualifier"
},
{
  "name":"jakarta.inject.Inject"
},
{
  "name":"jakarta.inject.Named"
},
{
  "name":"jakarta.inject.Provider"
},
{
  "name":"jakarta.inject.Qualifier"
},
{
  "name":"jakarta.jms.ConnectionFactory"
},
{
  "name":"jakarta.jms.Message"
},
{
  "name":"jakarta.json.bind$Jsonb"
},
{
  "name":"jakarta.json.bind.Jsonb"
},
{
  "name":"jakarta.persistence$Entity"
},
{
  "name":"jakarta.persistence$EntityManagerFactory"
},
{
  "name":"jakarta.persistence$Table"
},
{
  "name":"jakarta.persistence.Entity"
},
{
  "name":"jakarta.persistence.EntityManager"
},
{
  "name":"jakarta.persistence.EntityManagerFactory"
},
{
  "name":"jakarta.persistence.Persistence"
},
{
  "name":"jakarta.persistence.PersistenceContext"
},
{
  "name":"jakarta.persistence.Table"
},
{
  "name":"jakarta.servlet.GenericFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.servlet.MultipartConfigElement"
},
{
  "name":"jakarta.servlet.Servlet"
},
{
  "name":"jakarta.servlet.ServletRegistration"
},
{
  "name":"jakarta.servlet.ServletRequest"
},
{
  "name":"jakarta.transaction.Transaction"
},
{
  "name":"jakarta.transaction.TransactionManager"
},
{
  "name":"jakarta.validation.Constraint",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.validation.ConstraintValidator",
  "queryAllPublicMethods":true,
  "methods":[{"name":"initialize","parameterTypes":["java.lang.annotation.Annotation"] }]
},
{
  "name":"jakarta.validation.Valid",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.validation.Validator",
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.validation.ValidatorFactory",
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.validation.bootstrap.GenericBootstrap"
},
{
  "name":"jakarta.validation.constraints.Max",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"groups","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]
},
{
  "name":"jakarta.validation.constraints.NotEmpty",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"groups","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }
  ]
},
{
  "name":"jakarta.validation.constraints.NotNull",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"groups","parameterTypes":[] }, 
    {"name":"message","parameterTypes":[] }, 
    {"name":"payload","parameterTypes":[] }
  ]
},
{
  "name":"jakarta.validation.executable.ExecutableValidator"
},
{
  "name":"jakarta.websocket.server.ServerContainer"
},
{
  "name":"jakarta.xml.bind$Binder"
},
{
  "name":"jakarta.xml.bind.Binder"
},
{
  "name":"jakarta.xml.ws.WebServiceRef"
},
{
  "name":"java.io.Closeable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.io.FileDescriptor"
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.Flushable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.io.Serializable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.AutoCloseable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Boolean",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Byte",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.CharSequence",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.Character",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Class",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getModule","parameterTypes":[] }]
},
{
  "name":"java.lang.ClassLoader",
  "methods":[{"name":"defineClass","parameterTypes":["java.lang.String","byte[]","int","int","java.security.ProtectionDomain"] }]
},
{
  "name":"java.lang.Cloneable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.Comparable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.Deprecated",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Double",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Enum",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"compareTo","parameterTypes":["java.lang.Enum"] }, 
    {"name":"compareTo","parameterTypes":["java.lang.Object"] }, 
    {"name":"describeConstable","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getDeclaringClass","parameterTypes":[] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"name","parameterTypes":[] }, 
    {"name":"ordinal","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }, 
    {"name":"valueOf","parameterTypes":["java.lang.Class","java.lang.String"] }
  ]
},
{
  "name":"java.lang.Float",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Integer",
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Iterable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"forEach","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"spliterator","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.Long",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Module",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"isNamed","parameterTypes":[] }]
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.lang.ProcessHandle",
  "methods":[
    {"name":"current","parameterTypes":[] }, 
    {"name":"pid","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.Short",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.StackTraceElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.String",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.Thread"
},
{
  "name":"java.lang.Void",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.WrongThreadException"
},
{
  "name":"java.lang.annotation.Documented",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Inherited",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Repeatable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Retention",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Target",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.constant.Constable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.constant.ConstantDesc",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.invoke.TypeDescriptor$OfField",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.BufferPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ClassLoadingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.CompilationMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.LockInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ManagementPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.management.MemoryMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryManagerMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryUsage",
  "queryAllPublicMethods":true,
  "methods":[{"name":"from","parameterTypes":["javax.management.openmbean.CompositeData"] }]
},
{
  "name":"java.lang.management.MonitorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.PlatformLoggingMXBean",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getLoggerLevel","parameterTypes":["java.lang.String"] }, 
    {"name":"getLoggerNames","parameterTypes":[] }, 
    {"name":"getParentLoggerName","parameterTypes":["java.lang.String"] }, 
    {"name":"setLoggerLevel","parameterTypes":["java.lang.String","java.lang.String"] }
  ]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getInputArguments","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ThreadInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.AnnotatedElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.GenericArrayType",
  "methods":[{"name":"getGenericComponentType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.GenericDeclaration",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.ParameterizedType",
  "methods":[
    {"name":"getActualTypeArguments","parameterTypes":[] }, 
    {"name":"getRawType","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.Type",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.TypeVariable",
  "methods":[
    {"name":"getBounds","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.WildcardType",
  "methods":[
    {"name":"getLowerBounds","parameterTypes":[] }, 
    {"name":"getUpperBounds","parameterTypes":[] }
  ]
},
{
  "name":"java.math.BigDecimal"
},
{
  "name":"java.math.BigInteger"
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.SocketOption"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.StandardSocketOptions",
  "fields":[
    {"name":"IP_MULTICAST_IF"}, 
    {"name":"IP_MULTICAST_LOOP"}, 
    {"name":"IP_MULTICAST_TTL"}
  ]
},
{
  "name":"java.net.URI",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.net.UnixDomainSocketAddress",
  "methods":[{"name":"of","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.net.http.HttpClient"
},
{
  "name":"java.nio.Bits",
  "fields":[{"name":"UNALIGNED"}]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.nio.ByteBuffer",
  "methods":[{"name":"alignedSlice","parameterTypes":["int"] }]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
},
{
  "name":"java.nio.channels.FileChannel"
},
{
  "name":"java.nio.channels.NetworkChannel",
  "methods":[
    {"name":"getOption","parameterTypes":["java.net.SocketOption"] }, 
    {"name":"setOption","parameterTypes":["java.net.SocketOption","java.lang.Object"] }
  ]
},
{
  "name":"java.nio.channels.ServerSocketChannel",
  "methods":[{"name":"open","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.nio.channels.SocketChannel",
  "methods":[{"name":"open","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.nio.channels.spi.SelectorProvider",
  "methods":[{"name":"openSocketChannel","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.security.interfaces.RSAPrivateKey"
},
{
  "name":"java.security.interfaces.RSAPublicKey"
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.DriverManager"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.time.Clock",
  "methods":[{"name":"tickMillis","parameterTypes":["java.time.ZoneId"] }]
},
{
  "name":"java.time.LocalDateTime"
},
{
  "name":"java.time.ZoneId"
},
{
  "name":"java.util.AbstractCollection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.AbstractList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.ArrayList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.Collection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.Date"
},
{
  "name":"java.util.Enumeration"
},
{
  "name":"java.util.EventListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.HashMap",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.HashSet"
},
{
  "name":"java.util.LinkedHashMap",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.List",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.PropertyPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.util.RandomAccess",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.concurrent.Executor"
},
{
  "name":"java.util.concurrent.ThreadFactory",
  "queryAllPublicMethods":true
},
{
  "name":"java.util.function.BiPredicate",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.function.Function",
  "methods":[
    {"name":"andThen","parameterTypes":["java.util.function.Function"] }, 
    {"name":"compose","parameterTypes":["java.util.function.Function"] }
  ]
},
{
  "name":"java.util.logging.LogManager",
  "methods":[{"name":"getLoggingMXBean","parameterTypes":[] }]
},
{
  "name":"java.util.logging.LoggingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.util.logging.SimpleFormatter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javafx.beans.value.ObservableValue"
},
{
  "name":"javax.annotation$PostConstruct"
},
{
  "name":"javax.annotation.Nonnull",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.PostConstruct"
},
{
  "name":"javax.annotation.meta.TypeQualifier",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.meta.TypeQualifierDefault",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.cache.CacheManager"
},
{
  "name":"javax.cache.Caching"
},
{
  "name":"javax.inject$Inject"
},
{
  "name":"javax.inject.Inject"
},
{
  "name":"javax.management.MBeanOperationInfo",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSignature","parameterTypes":[] }]
},
{
  "name":"javax.management.MBeanServerBuilder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.management.openmbean.CompositeData"
},
{
  "name":"javax.management.openmbean.OpenMBeanOperationInfoSupport"
},
{
  "name":"javax.management.openmbean.TabularData"
},
{
  "name":"javax.money$MonetaryAmount"
},
{
  "name":"javax.money.MonetaryAmount"
},
{
  "name":"javax.naming.InitialContext"
},
{
  "name":"javax.naming.ldap.LdapContext"
},
{
  "name":"javax.persistence.EntityManagerFactory"
},
{
  "name":"javax.smartcardio.CardPermission"
},
{
  "name":"javax.sql.DataSource"
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"jdk.management.jfr.ConfigurationInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.EventTypeInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBeanImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"jdk.management.jfr.RecordingInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.SettingDescriptorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"kotlin$Metadata"
},
{
  "name":"kotlin.Metadata"
},
{
  "name":"kotlin.reflect.full$KClasses"
},
{
  "name":"kotlin.reflect.full.KClasses"
},
{
  "name":"kotlinx.coroutines.reactor$MonoKt"
},
{
  "name":"kotlinx.coroutines.reactor.MonoKt"
},
{
  "name":"kotlinx.serialization.cbor$Cbor"
},
{
  "name":"kotlinx.serialization.cbor.Cbor"
},
{
  "name":"kotlinx.serialization.json$Json"
},
{
  "name":"kotlinx.serialization.json.Json"
},
{
  "name":"kotlinx.serialization.protobuf$ProtoBuf"
},
{
  "name":"kotlinx.serialization.protobuf.ProtoBuf"
},
{
  "name":"liquibase.change.DatabaseChange"
},
{
  "name":"liquibase.integration.spring.SpringLiquibase"
},
{
  "name":"org.apache.catalina.Manager"
},
{
  "name":"org.apache.catalina.connector.RequestFacade",
  "allDeclaredFields":true
},
{
  "name":"org.apache.catalina.connector.ResponseFacade",
  "allDeclaredFields":true
},
{
  "name":"org.apache.catalina.loader.JdbcLeakPrevention",
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"clearJdbcDriverRegistrations","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.catalina.startup.Tomcat"
},
{
  "name":"org.apache.catalina.util.CharsetMapper",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.commons.pool2.ObjectPool"
},
{
  "name":"org.apache.commons.pool2.impl.DefaultEvictionPolicy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.commons.pool2.impl.DefaultPooledObjectInfo",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.commons.pool2.impl.GenericObjectPool"
},
{
  "name":"org.apache.commons.pool2.impl.GenericObjectPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.coyote.AbstractProtocol",
  "methods":[
    {"name":"getAddress","parameterTypes":[] }, 
    {"name":"getLocalPort","parameterTypes":[] }, 
    {"name":"setPort","parameterTypes":["int"] }, 
    {"name":"setProperty","parameterTypes":["java.lang.String","java.lang.String"] }
  ]
},
{
  "name":"org.apache.coyote.UpgradeProtocol"
},
{
  "name":"org.apache.coyote.http11.AbstractHttp11Protocol",
  "methods":[{"name":"isSSLEnabled","parameterTypes":[] }]
},
{
  "name":"org.apache.coyote.http11.Http11NioProtocol",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.curator.RetryPolicy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"allowRetry","parameterTypes":["java.lang.Throwable"] }]
},
{
  "name":"org.apache.curator.framework.CuratorFramework",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"postSafeNotify","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.apache.curator.framework.imps.CuratorFrameworkImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"blockUntilConnected","parameterTypes":[] }, 
    {"name":"blockUntilConnected","parameterTypes":["int","java.util.concurrent.TimeUnit"] }, 
    {"name":"checkExists","parameterTypes":[] }, 
    {"name":"clearWatcherReferences","parameterTypes":["org.apache.zookeeper.Watcher"] }, 
    {"name":"close","parameterTypes":[] }, 
    {"name":"create","parameterTypes":[] }, 
    {"name":"createContainers","parameterTypes":["java.lang.String"] }, 
    {"name":"delete","parameterTypes":[] }, 
    {"name":"getACL","parameterTypes":[] }, 
    {"name":"getChildren","parameterTypes":[] }, 
    {"name":"getConfig","parameterTypes":[] }, 
    {"name":"getConnectionStateErrorPolicy","parameterTypes":[] }, 
    {"name":"getConnectionStateListenable","parameterTypes":[] }, 
    {"name":"getCuratorListenable","parameterTypes":[] }, 
    {"name":"getCurrentConfig","parameterTypes":[] }, 
    {"name":"getData","parameterTypes":[] }, 
    {"name":"getNamespace","parameterTypes":[] }, 
    {"name":"getSchemaSet","parameterTypes":[] }, 
    {"name":"getState","parameterTypes":[] }, 
    {"name":"getUnhandledErrorListenable","parameterTypes":[] }, 
    {"name":"getZookeeperClient","parameterTypes":[] }, 
    {"name":"inTransaction","parameterTypes":[] }, 
    {"name":"isStarted","parameterTypes":[] }, 
    {"name":"newNamespaceAwareEnsurePath","parameterTypes":["java.lang.String"] }, 
    {"name":"newWatcherRemoveCuratorFramework","parameterTypes":[] }, 
    {"name":"nonNamespaceView","parameterTypes":[] }, 
    {"name":"reconfig","parameterTypes":[] }, 
    {"name":"runSafe","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"setACL","parameterTypes":[] }, 
    {"name":"setData","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"sync","parameterTypes":[] }, 
    {"name":"sync","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"transaction","parameterTypes":[] }, 
    {"name":"transactionOp","parameterTypes":[] }, 
    {"name":"usingNamespace","parameterTypes":["java.lang.String"] }, 
    {"name":"watchers","parameterTypes":[] }, 
    {"name":"watches","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.curator.framework.recipes.cache.TreeCacheListener",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.curator.retry.ExponentialBackoffRetry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"allowRetry","parameterTypes":["int","long","org.apache.curator.RetrySleeper"] }, 
    {"name":"getN","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.curator.retry.SleepingRetry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.curator.shaded.com.google.common.collect.ImmutableCollection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.curator.shaded.com.google.common.collect.ImmutableList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.curator.shaded.com.google.common.collect.RegularImmutableList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.apache.curator.x.discovery.ServiceDiscovery",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.curator.x.discovery.ServiceInstance",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.curator.x.discovery.ServiceType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.curator.x.discovery.UriSpec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getParts","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.curator.x.discovery.UriSpec$Part",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getValue","parameterTypes":[] }, 
    {"name":"isVariable","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.curator.x.discovery.details.InstanceSerializer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.curator.x.discovery.details.JsonInstanceSerializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"deserialize","parameterTypes":["byte[]"] }, 
    {"name":"serialize","parameterTypes":["org.apache.curator.x.discovery.ServiceInstance"] }
  ]
},
{
  "name":"org.apache.curator.x.discovery.details.OldServiceInstance",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getAddress","parameterTypes":[] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getPayload","parameterTypes":[] }, 
    {"name":"getPort","parameterTypes":[] }, 
    {"name":"getRegistrationTimeUTC","parameterTypes":[] }, 
    {"name":"getServiceType","parameterTypes":[] }, 
    {"name":"getSslPort","parameterTypes":[] }, 
    {"name":"getUriSpec","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.curator.x.discovery.details.ServiceDiscoveryImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"queryForInstance","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"queryForInstances","parameterTypes":["java.lang.String"] }, 
    {"name":"queryForNames","parameterTypes":[] }, 
    {"name":"registerService","parameterTypes":["org.apache.curator.x.discovery.ServiceInstance"] }, 
    {"name":"serviceCacheBuilder","parameterTypes":[] }, 
    {"name":"serviceProviderBuilder","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"unregisterService","parameterTypes":["org.apache.curator.x.discovery.ServiceInstance"] }, 
    {"name":"updateService","parameterTypes":["org.apache.curator.x.discovery.ServiceInstance"] }
  ]
},
{
  "name":"org.apache.el.ExpressionFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.hc.client5.http.impl.async$CloseableHttpAsyncClient"
},
{
  "name":"org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient"
},
{
  "name":"org.apache.hc.client5.http.impl.async.HttpAsyncClients"
},
{
  "name":"org.apache.hc.core5.http.nio.AsyncRequestProducer"
},
{
  "name":"org.apache.jasper.compiler$JspConfig"
},
{
  "name":"org.apache.jasper.compiler.JspConfig"
},
{
  "name":"org.apache.logging.log4j.core.LoggerContext"
},
{
  "name":"org.apache.logging.log4j.core.impl$Log4jContextFactory"
},
{
  "name":"org.apache.logging.log4j.core.impl.Log4jContextFactory"
},
{
  "name":"org.apache.logging.log4j.spi.ExtendedLogger"
},
{
  "name":"org.apache.logging.slf4j.SLF4JProvider"
},
{
  "name":"org.apache.tomcat.util.net.AbstractEndpoint",
  "methods":[{"name":"setBindOnInit","parameterTypes":["boolean"] }]
},
{
  "name":"org.apache.tomcat.util.net.NioEndpoint",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.tomcat.websocket.server.WsFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.tomcat.websocket.server.WsHttpUpgradeHandler"
},
{
  "name":"org.apache.tomcat.websocket.server.WsSci"
},
{
  "name":"org.apache.zookeeper.ClientCnxn$SendThread"
},
{
  "name":"org.apache.zookeeper.ClientCnxnSocketNIO",
  "methods":[{"name":"<init>","parameterTypes":["org.apache.zookeeper.client.ZKClientConfig"] }]
},
{
  "name":"org.aspectj.weaver.Advice"
},
{
  "name":"org.cache2k.Cache2kBuilder"
},
{
  "name":"org.cache2k.extra.micrometer.Cache2kCacheMetrics"
},
{
  "name":"org.cache2k.extra.spring.SpringCache2kCache"
},
{
  "name":"org.eclipse.collections.api.list$ImmutableList"
},
{
  "name":"org.eclipse.collections.api.list.ImmutableList"
},
{
  "name":"org.eclipse.core.runtime$FileLocator"
},
{
  "name":"org.eclipse.core.runtime.FileLocator"
},
{
  "name":"org.eclipse.jetty.client$HttpClient"
},
{
  "name":"org.eclipse.jetty.client.HttpClient"
},
{
  "name":"org.eclipse.jetty.reactive.client.ReactiveRequest"
},
{
  "name":"org.eclipse.jetty.server.Server"
},
{
  "name":"org.eclipse.jetty.servlet.ServletHolder"
},
{
  "name":"org.eclipse.jetty.util.Loader"
},
{
  "name":"org.eclipse.jetty.webapp.WebAppContext"
},
{
  "name":"org.eclipse.jetty.websocket.server$JettyWebSocketServerContainer"
},
{
  "name":"org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer"
},
{
  "name":"org.elasticsearch.client.RestClient"
},
{
  "name":"org.elasticsearch.client.RestClientBuilder"
},
{
  "name":"org.flywaydb.core.Flyway"
},
{
  "name":"org.glassfish.jersey.server.ResourceConfig"
},
{
  "name":"org.glassfish.jersey.server.spring.SpringComponentProvider"
},
{
  "name":"org.glassfish.jersey.servlet$ServletContainer"
},
{
  "name":"org.glassfish.jersey.servlet.ServletContainer"
},
{
  "name":"org.graalvm.nativeimage.ImageInfo",
  "methods":[{"name":"inImageCode","parameterTypes":[] }]
},
{
  "name":"org.h2.server.web.JakartaWebServlet"
},
{
  "name":"org.hibernate.annotations$Where"
},
{
  "name":"org.hibernate.annotations.Where"
},
{
  "name":"org.hibernate.validator.internal.constraintvalidators.bv.NotNullValidator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForCollection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
  "methods":[{"name":"externalClassLoader","parameterTypes":["java.lang.ClassLoader"] }]
},
{
  "name":"org.hibernate.validator.internal.engine.ConfigurationImpl"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger_zh"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger_zh_CN"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle",
  "fields":[{"name":"INSTANCE"}]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle_zh"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle_zh_CN"
},
{
  "name":"org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager"
},
{
  "name":"org.influxdb.InfluxDB"
},
{
  "name":"org.jboss.logging.Logger"
},
{
  "name":"org.jmolecules.spring$IdentifierToPrimitivesConverter"
},
{
  "name":"org.jmolecules.spring.IdentifierToPrimitivesConverter"
},
{
  "name":"org.joda.time.ReadableInstant"
},
{
  "name":"org.jooq.DSLContext"
},
{
  "name":"org.neo4j.driver.Driver"
},
{
  "name":"org.quartz.Scheduler"
},
{
  "name":"org.reactivestreams.Publisher"
},
{
  "name":"org.slf4j.Logger"
},
{
  "name":"org.slf4j.LoggerFactory"
},
{
  "name":"org.slf4j.bridge.SLF4JBridgeHandler"
},
{
  "name":"org.slf4j.spi.LocationAwareLogger",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.amqp.rabbit.core.RabbitTemplate"
},
{
  "name":"org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"determineBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"setBeforeExistingAdvisors","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.aop.framework.AopInfrastructureBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.ProxyConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"copyFrom","parameterTypes":["org.springframework.aop.framework.ProxyConfig"] }, 
    {"name":"isExposeProxy","parameterTypes":[] }, 
    {"name":"isFrozen","parameterTypes":[] }, 
    {"name":"isOpaque","parameterTypes":[] }, 
    {"name":"isOptimize","parameterTypes":[] }, 
    {"name":"isProxyTargetClass","parameterTypes":[] }, 
    {"name":"setExposeProxy","parameterTypes":["boolean"] }, 
    {"name":"setFrozen","parameterTypes":["boolean"] }, 
    {"name":"setOpaque","parameterTypes":["boolean"] }, 
    {"name":"setOptimize","parameterTypes":["boolean"] }, 
    {"name":"setProxyTargetClass","parameterTypes":["boolean"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.aop.framework.ProxyProcessorSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"setProxyClassLoader","parameterTypes":["java.lang.ClassLoader"] }
  ]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"determineBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"determineCandidateConstructors","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"getEarlyBeanReference","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"isFrozen","parameterTypes":[] }, 
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInstantiation","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"postProcessProperties","parameterTypes":["org.springframework.beans.PropertyValues","java.lang.Object","java.lang.String"] }, 
    {"name":"predictBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"setAdvisorAdapterRegistry","parameterTypes":["org.springframework.aop.framework.adapter.AdvisorAdapterRegistry"] }, 
    {"name":"setApplyCommonInterceptorsFirst","parameterTypes":["boolean"] }, 
    {"name":"setCustomTargetSourceCreators","parameterTypes":["org.springframework.aop.framework.autoproxy.TargetSourceCreator[]"] }, 
    {"name":"setFrozen","parameterTypes":["boolean"] }, 
    {"name":"setInterceptorNames","parameterTypes":["java.lang.String[]"] }
  ]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.aot.hint.annotation.Reflective",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aot.hint.annotation.RegisterReflectionForBinding",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.batch.core.launch.JobLauncher"
},
{
  "name":"org.springframework.beans.factory.Aware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanClassLoaderAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanFactoryAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanNameAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.DisposableBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.FactoryBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.InitializingBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.SmartInitializingSingleton",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Autowired",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.annotation.Qualifier",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.annotation.Value",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.aot.BeanRegistrationAotProcessor",
  "queryAllPublicMethods":true,
  "methods":[{"name":"isBeanExcludedFromAotProcessing","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.config.AbstractFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getObject","parameterTypes":[] }, 
    {"name":"isSingleton","parameterTypes":[] }, 
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, 
    {"name":"setSingleton","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.beans.factory.config.BeanFactoryPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"postProcessAfterInstantiation","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInstantiation","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"postProcessProperties","parameterTypes":["org.springframework.beans.PropertyValues","java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"determineCandidateConstructors","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"getEarlyBeanReference","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"predictBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.NullBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
  "allPublicFields":true
},
{
  "name":"org.springframework.boot.ClearCachesApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.SpringApplication",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.SpringBootConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.audit.AuditEventRepository"
},
{
  "name":"org.springframework.boot.actuate.audit.AuditEventsEndpoint"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"beansEndpoint","parameterTypes":["org.springframework.context.ConfigurableApplicationContext"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"cachesEndpoint","parameterTypes":["java.util.Map"] }, 
    {"name":"cachesEndpointWebExtension","parameterTypes":["org.springframework.boot.actuate.cache.CachesEndpoint"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"conditionsReportEndpoint","parameterTypes":["org.springframework.context.ConfigurableApplicationContext"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"configurationPropertiesReportEndpoint","parameterTypes":["org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"configurationPropertiesReportEndpointWebExtension","parameterTypes":["org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint","org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.data.redis.RedisHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"redisHealthContributor","parameterTypes":["java.util.Map"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.data.redis.RedisReactiveHealthContributorAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"endpointCachingOperationInvokerAdvisor","parameterTypes":["org.springframework.core.env.Environment"] }, 
    {"name":"endpointOperationParameterMapper","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"endpointObjectMapper","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"] }, 
    {"name":"controllerEndpointDiscoverer","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"controllerExposeExcludePropertyEndpointFilter","parameterTypes":[] }, 
    {"name":"endpointMediaTypes","parameterTypes":[] }, 
    {"name":"pathMappedEndpoints","parameterTypes":["java.util.Collection"] }, 
    {"name":"webEndpointDiscoverer","parameterTypes":["org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper","org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"webEndpointPathMapper","parameterTypes":[] }, 
    {"name":"webExposeExcludePropertyEndpointFilter","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getExposure","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getInclude","parameterTypes":[] }, 
    {"name":"setInclude","parameterTypes":["java.util.Set"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"controllerEndpointHandlerMapping","parameterTypes":["org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier","org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties","org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"] }, 
    {"name":"serverCodecConfigurerEndpointObjectMapperBeanPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"webEndpointReactiveHandlerMapping","parameterTypes":["org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier","org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier","org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes","org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties","org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties","org.springframework.core.env.Environment"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration$ServerCodecConfigurerEndpointObjectMapperBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"environmentEndpoint","parameterTypes":["org.springframework.core.env.Environment","org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"environmentEndpointWebExtension","parameterTypes":["org.springframework.boot.actuate.env.EnvironmentEndpoint","org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AbstractCompositeHealthContributorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredReactiveHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.CompositeHealthContributorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"pingHealthContributor","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"healthContributorRegistry","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.actuate.health.HealthEndpointGroups","java.util.Map","java.util.Map"] }, 
    {"name":"healthEndpoint","parameterTypes":["org.springframework.boot.actuate.health.HealthContributorRegistry","org.springframework.boot.actuate.health.HealthEndpointGroups","org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"] }, 
    {"name":"healthEndpointGroups","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"] }, 
    {"name":"healthEndpointGroupsBeanPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"healthHttpCodeStatusMapper","parameterTypes":["org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"] }, 
    {"name":"healthStatusAggregator","parameterTypes":["org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getShowDetails","parameterTypes":[] }, 
    {"name":"setShowDetails","parameterTypes":["org.springframework.boot.actuate.endpoint.Show"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"reactiveHealthEndpointWebExtension","parameterTypes":["org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry","org.springframework.boot.actuate.health.HealthEndpointGroups","org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration$WebFluxAdditionalHealthEndpointPathsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"healthEndpointWebFluxHandlerMapping","parameterTypes":["org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier","org.springframework.boot.actuate.health.HealthEndpointGroups"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getRoles","parameterTypes":[] }, 
    {"name":"getShowComponents","parameterTypes":[] }, 
    {"name":"getStatus","parameterTypes":[] }, 
    {"name":"setRoles","parameterTypes":["java.util.Set"] }, 
    {"name":"setShowComponents","parameterTypes":["org.springframework.boot.actuate.endpoint.Show"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"reactiveHealthContributorRegistry","parameterTypes":["java.util.Map","java.util.Map","org.springframework.boot.actuate.health.HealthEndpointGroups"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorFallback"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"infoEndpoint","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration$LogFileCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loggersEndpoint","parameterTypes":["org.springframework.boot.logging.LoggingSystem","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration$OnEnabledLoggingSystemCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"heapDumpWebEndpoint","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"dumpEndpoint","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"classLoaderMetrics","parameterTypes":[] }, 
    {"name":"jvmCompilationMetrics","parameterTypes":[] }, 
    {"name":"jvmGcMetrics","parameterTypes":[] }, 
    {"name":"jvmHeapPressureMetrics","parameterTypes":[] }, 
    {"name":"jvmInfoMetrics","parameterTypes":[] }, 
    {"name":"jvmMemoryMetrics","parameterTypes":[] }, 
    {"name":"jvmThreadMetrics","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"logbackMetrics","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"meterRegistryPostProcessor","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"micrometerClock","parameterTypes":[] }, 
    {"name":"propertiesMeterFilter","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"metricsEndpoint","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getDistribution","parameterTypes":[] }, 
    {"name":"getTags","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getPercentilesHistogram","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] }, 
    {"name":"map","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"diskSpaceMetrics","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }, 
    {"name":"fileDescriptorMetrics","parameterTypes":[] }, 
    {"name":"processorMetrics","parameterTypes":[] }, 
    {"name":"uptimeMetrics","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }, 
    {"name":"metricsRepositoryMethodInvocationListener","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider"] }, 
    {"name":"metricsRepositoryMethodInvocationListenerBeanPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"repositoryTagsProvider","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"collectorRegistry","parameterTypes":[] }, 
    {"name":"exemplarSampler","parameterTypes":["io.prometheus.client.exemplars.tracer.common.SpanContextSupplier"] }, 
    {"name":"prometheusConfig","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties"] }, 
    {"name":"prometheusMeterRegistry","parameterTypes":["io.micrometer.prometheus.PrometheusConfig","io.prometheus.client.CollectorRegistry","io.micrometer.core.instrument.Clock","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration$PrometheusScrapeEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"prometheusEndpoint","parameterTypes":["io.prometheus.client.CollectorRegistry"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusPropertiesConfigAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"descriptions","parameterTypes":[] }, 
    {"name":"histogramFlavor","parameterTypes":[] }, 
    {"name":"prefix","parameterTypes":[] }, 
    {"name":"step","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"startupTimeMetrics","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"bindTaskExecutorsToRegistry","parameterTypes":["java.util.Map","io.micrometer.core.instrument.MeterRegistry"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"tomcatMetricsBinder","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"observationRegistry","parameterTypes":[] }, 
    {"name":"observationRegistryPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$TracingAndMetricsObservationHandlerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"tracingAwareMeterObservationHandler","parameterTypes":["io.micrometer.core.instrument.MeterRegistry","io.micrometer.tracing.Tracer"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MetricsWithTracingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"metricsAndTracingObservationHandlerGrouping","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"metricsHttpClientUriTagFilter","parameterTypes":["org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties","org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"observationWebClientCustomizer","parameterTypes":["io.micrometer.observation.ObservationRegistry","org.springframework.beans.factory.ObjectProvider","org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.reactive.WebFluxObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties","org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"] }, 
    {"name":"webfluxObservationFilter","parameterTypes":["io.micrometer.observation.ObservationRegistry","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.reactive.WebFluxObservationAutoConfiguration$MeterFilterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"metricsHttpServerUriTagFilter","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties","org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"scheduledTasksEndpoint","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.session.SessionsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration$ApplicationStartupCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"diskSpaceHealthIndicator","parameterTypes":["org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.BraveAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"braveCurrentTraceContext","parameterTypes":["java.util.List","java.util.List"] }, 
    {"name":"bravePropagator","parameterTypes":["brave.Tracing"] }, 
    {"name":"braveSampler","parameterTypes":["org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties"] }, 
    {"name":"braveSpanCustomizer","parameterTypes":["brave.SpanCustomizer"] }, 
    {"name":"braveTracer","parameterTypes":["brave.Tracing"] }, 
    {"name":"braveTracerBridge","parameterTypes":["brave.Tracer","brave.propagation.CurrentTraceContext"] }, 
    {"name":"braveTracing","parameterTypes":["org.springframework.core.env.Environment","java.util.List","java.util.List","brave.propagation.CurrentTraceContext","brave.propagation.Propagation$Factory","brave.sampler.Sampler"] }, 
    {"name":"compositeSpanHandler","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"currentSpanCustomizer","parameterTypes":["brave.Tracing"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.BraveAutoConfiguration$BraveBaggageConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties"] }, 
    {"name":"correlationFieldsCorrelationScopeCustomizer","parameterTypes":[] }, 
    {"name":"correlationScopeDecorator","parameterTypes":["brave.baggage.CorrelationScopeDecorator$Builder"] }, 
    {"name":"mdcCorrelationScopeDecoratorBuilder","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"propagationFactory","parameterTypes":["brave.baggage.BaggagePropagation$FactoryBuilder"] }, 
    {"name":"propagationFactoryBuilder","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"remoteFieldsBaggagePropagationCustomizer","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.ConditionalOnEnabledTracing",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultTracingObservationHandler","parameterTypes":["io.micrometer.tracing.Tracer"] }, 
    {"name":"propagatingReceiverTracingObservationHandler","parameterTypes":["io.micrometer.tracing.Tracer","io.micrometer.tracing.propagation.Propagator"] }, 
    {"name":"propagatingSenderTracingObservationHandler","parameterTypes":["io.micrometer.tracing.Tracer","io.micrometer.tracing.propagation.Propagator"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getSampling","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties$Sampling",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setProbability","parameterTypes":["float"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.prometheus.PrometheusExemplarsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"spanContextSupplier","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.prometheus.PrometheusExemplarsAutoConfiguration$LazyTracingSpanContextSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.HttpSender",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"check","parameterTypes":[] }, 
    {"name":"close","parameterTypes":[] }, 
    {"name":"encoding","parameterTypes":[] }, 
    {"name":"messageMaxBytes","parameterTypes":[] }, 
    {"name":"messageSizeInBytes","parameterTypes":["int"] }, 
    {"name":"messageSizeInBytes","parameterTypes":["java.util.List"] }, 
    {"name":"sendSpans","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"spanBytesEncoder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$BraveConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"zipkinSpanHandler","parameterTypes":["zipkin2.reporter.Reporter"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$OpenTelemetryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$ReporterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"spanReporter","parameterTypes":["zipkin2.reporter.Sender","zipkin2.codec.BytesEncoder"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$RestTemplateSenderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$SenderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$UrlConnectionSenderConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$WebClientSenderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"webClientSender","parameterTypes":["org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinProperties","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setEndpoint","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinWebClientSender",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinWebClientSender$WebClientHttpPostCall"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"mappingsEndpoint","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ReactiveWebConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"dispatcherHandlerMappingDescriptionProvider","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"reactiveWebChildContextFactory","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }, 
    {"name":"afterSingletonsInstantiated","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.beans.BeansEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.cache.CachesEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.cache.CachesEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.context.ShutdownEndpoint"
},
{
  "name":"org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.data.redis.RedisHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointFilter",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointsSupplier",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.DeleteOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Endpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"createOperationKey","parameterTypes":["org.springframework.boot.actuate.endpoint.Operation"] }, 
    {"name":"getEndpoints","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Selector",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.WriteOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMapper",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.RestControllerEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getEndpoints","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$LinksHandler",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$WriteOperationHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AdditionalHealthEndpointPathsWebFluxHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.ControllerEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$WebFluxLinksHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.AbstractHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"health","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.CompositeHealthContributor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.CompositeReactiveHealthContributor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ContributorRegistry",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.DefaultContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getContributor","parameterTypes":["java.lang.String"] }, 
    {"name":"iterator","parameterTypes":[] }, 
    {"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"unregisterContributor","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.health.DefaultReactiveHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getContributor","parameterTypes":["java.lang.String"] }, 
    {"name":"iterator","parameterTypes":[] }, 
    {"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"unregisterContributor","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.health.Health"
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributorRegistry",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroups",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"get","parameterTypes":["org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"] }, 
    {"name":"getAllWithAdditionalPath","parameterTypes":["org.springframework.boot.actuate.endpoint.web.WebServerNamespace"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getHealth","parameterTypes":["java.lang.Object","boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthIndicator",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getHealth","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.health.HttpCodeStatusMapper",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.NamedContributors",
  "methods":[{"name":"stream","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.PingHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthIndicator"
},
{
  "name":"org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.SimpleStatusAggregator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.StatusAggregator",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getAggregateStatus","parameterTypes":["org.springframework.boot.actuate.health.Status[]"] }]
},
{
  "name":"org.springframework.boot.actuate.info.InfoEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.logging.LogFileWebEndpoint"
},
{
  "name":"org.springframework.boot.actuate.logging.LoggersEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.management.HeapDumpWebEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.management.ThreadDumpEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.MetricsEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider"
},
{
  "name":"org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.export.prometheus.PrometheusScrapeEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.reactive.client.ObservationWebClientCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.session.SessionsEndpoint"
},
{
  "name":"org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository"
},
{
  "name":"org.springframework.boot.actuate.web.exchanges.HttpExchangesEndpoint"
},
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingDescriptionProvider",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingsEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.web.mappings.reactive.DispatcherHandlersMappingDescriptionProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackage",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureAfter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureBefore",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureOrder",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.BackgroundPreinitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.EnableAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.SpringBootApplication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"applicationAvailability","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.codec.CodecProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnBeanCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnClassCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnResourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.SearchStrategy"
},
{
  "name":"org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultLifecycleProcessor","parameterTypes":["org.springframework.boot.autoconfigure.context.LifecycleProperties"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"propertySourcesPlaceholderConfigurer","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"persistenceExceptionTranslationPostProcessor","parameterTypes":["org.springframework.core.env.Environment"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.data.redis.RedisProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"redisConnectionFactory","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"redisTemplate","parameterTypes":["org.springframework.data.redis.connection.RedisConnectionFactory"] }, 
    {"name":"stringRedisTemplate","parameterTypes":["org.springframework.data.redis.connection.RedisConnectionFactory"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"gson","parameterTypes":["com.google.gson.GsonBuilder"] }, 
    {"name":"gsonBuilder","parameterTypes":["java.util.List"] }, 
    {"name":"standardGsonBuilderCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.gson.GsonProperties"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultCodecCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.codec.CodecProperties"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"jacksonCodecCustomizer","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.info.ProjectInfoProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"jsonComponentModule","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"standardJacksonObjectMapperBuilderCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.jackson.JacksonProperties","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"jsonMixinModule","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.jackson.JsonMixinModuleEntries"] }, 
    {"name":"jsonMixinModuleEntries","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"jacksonObjectMapperBuilder","parameterTypes":["org.springframework.context.ApplicationContext","java.util.List"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"jacksonObjectMapper","parameterTypes":["org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"parameterNamesModule","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.netty.NettyProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.rsocket.RSocketMessagingAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityDataConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.ClientsConfiguredCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getProvider","parameterTypes":[] }, 
    {"name":"getRegistration","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties$Provider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setIssuerUri","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties$Registration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getScope","parameterTypes":[] }, 
    {"name":"setAuthorizationGrantType","parameterTypes":["java.lang.String"] }, 
    {"name":"setClientId","parameterTypes":["java.lang.String"] }, 
    {"name":"setClientName","parameterTypes":["java.lang.String"] }, 
    {"name":"setClientSecret","parameterTypes":["java.lang.String"] }, 
    {"name":"setProvider","parameterTypes":["java.lang.String"] }, 
    {"name":"setRedirectUri","parameterTypes":["java.lang.String"] }, 
    {"name":"setScope","parameterTypes":["java.util.Set"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration$NonServletApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientConfigurations$ReactiveClientRegistrationRepositoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"clientRegistrationRepository","parameterTypes":["org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientConfigurations$ReactiveOAuth2ClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authorizedClientRepository","parameterTypes":["org.springframework.security.oauth2.client.ReactiveOAuth2AuthorizedClientService"] }, 
    {"name":"authorizedClientService","parameterTypes":["org.springframework.security.oauth2.client.registration.ReactiveClientRegistrationRepository"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientConfigurations$ReactiveOAuth2ClientConfiguration$SecurityWebFilterChainConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerConfiguration$JwtConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerConfiguration$OpaqueTokenConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"reactiveUserDetailsService","parameterTypes":["org.springframework.boot.autoconfigure.security.SecurityProperties","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$ReactiveUserDetailsServiceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.session.MongoReactiveSessionConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.session.RedisReactiveSessionConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.session.SessionAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ReactiveSessionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.session.SessionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"applicationTaskExecutor","parameterTypes":["org.springframework.boot.task.TaskExecutorBuilder"] }, 
    {"name":"taskExecutorBuilder","parameterTypes":["org.springframework.boot.autoconfigure.task.TaskExecutionProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"taskSchedulerBuilder","parameterTypes":["org.springframework.boot.autoconfigure.task.TaskSchedulingProperties","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.PlatformTransactionManagerCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"platformTransactionManagerCustomizers","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultValidator","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"methodValidationPostProcessor","parameterTypes":["org.springframework.core.env.Environment","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getReactive","parameterTypes":[] }, 
    {"name":"setPort","parameterTypes":["java.lang.Integer"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Reactive",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getSession","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Reactive$Session",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getCookie","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints"
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"nettyWebServerFactoryCustomizer","parameterTypes":["org.springframework.core.env.Environment","org.springframework.boot.autoconfigure.web.ServerProperties"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"tomcatWebServerFactoryCustomizer","parameterTypes":["org.springframework.core.env.Environment","org.springframework.boot.autoconfigure.web.ServerProperties"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.format.WebConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"httpHandler","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultPartHttpMessageReaderCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"reactiveWebServerFactoryCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }, 
    {"name":"tomcatReactiveWebServerFactoryCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedJetty"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"tomcatReactiveWebServerFactory","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.TomcatReactiveWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties","org.springframework.boot.autoconfigure.web.WebProperties","org.springframework.boot.autoconfigure.web.ServerProperties","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"localeContextResolver","parameterTypes":[] }, 
    {"name":"webFluxConversionService","parameterTypes":[] }, 
    {"name":"webFluxValidator","parameterTypes":[] }, 
    {"name":"webSessionManager","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.WebProperties","org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties","org.springframework.beans.factory.ListableBeanFactory","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, 
    {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.reactive.config.ResourceHandlerRegistry"] }, 
    {"name":"configureArgumentResolvers","parameterTypes":["org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"] }, 
    {"name":"configureHttpMessageCodecs","parameterTypes":["org.springframework.http.codec.ServerCodecConfigurer"] }, 
    {"name":"configureViewResolvers","parameterTypes":["org.springframework.web.reactive.config.ViewResolverRegistry"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"welcomePageRouterFunctionMapping","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties","org.springframework.boot.autoconfigure.web.WebProperties"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties","org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"] }, 
    {"name":"webSessionIdResolver","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"handle","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.Throwable"] }, 
    {"name":"setMessageReaders","parameterTypes":["java.util.List"] }, 
    {"name":"setMessageWriters","parameterTypes":["java.util.List"] }, 
    {"name":"setViewResolvers","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }, 
    {"name":"errorAttributes","parameterTypes":[] }, 
    {"name":"errorWebExceptionHandler","parameterTypes":["org.springframework.boot.web.reactive.error.ErrorAttributes","org.springframework.boot.autoconfigure.web.WebProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.http.codec.ServerCodecConfigurer","org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$HttpClient5"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$JdkClient"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$JettyClient"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$ReactorNetty",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"reactorClientResourceFactory","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"exchangeStrategiesCustomizer","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.reactive.TomcatWebSocketReactiveWebServerCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.reactive.WebSocketReactiveAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.reactive.WebSocketReactiveAutoConfiguration$TomcatWebSocketConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"websocketReactiveWebServerCustomizer","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailability",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getLivenessState","parameterTypes":[] }, 
    {"name":"getReadinessState","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailabilityBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.builder.ParentContextCloserApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.cloud.CloudPlatform"
},
{
  "name":"org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.ContextIdApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.FileEncodingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.TypeExcludeFilter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.AnsiOutputApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.ConfigurableBootstrapContext"] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataProperties",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.context.properties.bind.Binder","org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.event.EventPublishingRunListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.SpringApplication","java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.context.logging.LoggingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.BoundConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationProperties",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationProperties",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.NestedConfigurationProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.bind.Name",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.bind.Nested",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.convert.DurationUnit",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.PropertiesPropertySourceLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.YamlPropertySourceLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.info.BuildProperties"
},
{
  "name":"org.springframework.boot.info.GitProperties"
},
{
  "name":"org.springframework.boot.jackson.JsonComponentModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModuleEntries",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider"
},
{
  "name":"org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.loader.LaunchedURLClassLoader",
  "methods":[{"name":"clearCache","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.LoggingSystem"
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.logback.ColorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.TaskExecutorBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.task.TaskSchedulerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"byAnnotation","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.boot.web.client.RestTemplateBuilder"
},
{
  "name":"org.springframework.boot.web.codec.CodecCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getErrorAttributes","parameterTypes":["org.springframework.web.reactive.function.server.ServerRequest","org.springframework.boot.web.error.ErrorAttributeOptions"] }]
},
{
  "name":"org.springframework.boot.web.reactive.error.ErrorAttributes",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.function.client.WebClientCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
},
{
  "name":"org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPage[]"] }, 
    {"name":"getAddress","parameterTypes":[] }, 
    {"name":"getCompression","parameterTypes":[] }, 
    {"name":"getErrorPages","parameterTypes":[] }, 
    {"name":"getHttp2","parameterTypes":[] }, 
    {"name":"getOrCreateSslStoreProvider","parameterTypes":[] }, 
    {"name":"getPort","parameterTypes":[] }, 
    {"name":"getServerHeader","parameterTypes":[] }, 
    {"name":"getShutdown","parameterTypes":[] }, 
    {"name":"getSsl","parameterTypes":[] }, 
    {"name":"getSslStoreProvider","parameterTypes":[] }, 
    {"name":"setAddress","parameterTypes":["java.net.InetAddress"] }, 
    {"name":"setCompression","parameterTypes":["org.springframework.boot.web.server.Compression"] }, 
    {"name":"setErrorPages","parameterTypes":["java.util.Set"] }, 
    {"name":"setHttp2","parameterTypes":["org.springframework.boot.web.server.Http2"] }, 
    {"name":"setPort","parameterTypes":["int"] }, 
    {"name":"setServerHeader","parameterTypes":["java.lang.String"] }, 
    {"name":"setShutdown","parameterTypes":["org.springframework.boot.web.server.Shutdown"] }, 
    {"name":"setSsl","parameterTypes":["org.springframework.boot.web.server.Ssl"] }, 
    {"name":"setSslStoreProvider","parameterTypes":["org.springframework.boot.web.server.SslStoreProvider"] }
  ]
},
{
  "name":"org.springframework.boot.web.server.ConfigurableWebServerFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.Cookie",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cache.Cache"
},
{
  "name":"org.springframework.cache.CacheManager"
},
{
  "name":"org.springframework.cache.caffeine.CaffeineCache"
},
{
  "name":"org.springframework.cache.caffeine.CaffeineCacheManager"
},
{
  "name":"org.springframework.cache.interceptor.CacheAspectSupport"
},
{
  "name":"org.springframework.cache.jcache.JCacheCache"
},
{
  "name":"org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"afterSingletonsInstantiated","parameterTypes":[] }, 
    {"name":"configurationPropertiesBeans","parameterTypes":[] }, 
    {"name":"configurationPropertiesRebinder","parameterTypes":["org.springframework.cloud.context.properties.ConfigurationPropertiesBeans"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"environmentManager","parameterTypes":["org.springframework.core.env.ConfigurableEnvironment"] }
  ]
},
{
  "name":"org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.autoconfigure.RefreshAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"configDataContextRefresher","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.springframework.cloud.context.scope.refresh.RefreshScope","org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties"] }, 
    {"name":"loggingRebinder","parameterTypes":[] }, 
    {"name":"refreshEventListener","parameterTypes":["org.springframework.cloud.context.refresh.ContextRefresher"] }, 
    {"name":"refreshScope","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"postProcessBeanDefinitionRegistry","parameterTypes":["org.springframework.beans.factory.support.BeanDefinitionRegistry"] }, 
    {"name":"postProcessBeanFactory","parameterTypes":["org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }, 
    {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }
  ]
},
{
  "name":"org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"refreshScopeHealthIndicator","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder"] }
  ]
},
{
  "name":"org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"refreshEndpoint","parameterTypes":["org.springframework.cloud.context.refresh.ContextRefresher"] }
  ]
},
{
  "name":"org.springframework.cloud.autoconfigure.RestartEndpointWithIntegrationConfiguration"
},
{
  "name":"org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.BootstrapApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.BootstrapConfigFileApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.LoggingSystemShutdownListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.RefreshBootstrapRegistryInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.KeyProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.RsaProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.marker$Marker"
},
{
  "name":"org.springframework.cloud.bootstrap.marker.Marker"
},
{
  "name":"org.springframework.cloud.circuitbreaker.resilience4j.ReactiveResilience4JAutoConfiguration"
},
{
  "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"featuresEndpoint","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"commonsFeatures","parameterTypes":[] }, 
    {"name":"discoveryClientHealthIndicator","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties"] }, 
    {"name":"discoveryCompositeHealthContributor","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.cloud.client.ConditionalOnBlockingDiscoveryEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.ConditionalOnDiscoveryEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.ConditionalOnDiscoveryHealthIndicatorEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.ConditionalOnReactiveDiscoveryEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration$ReactiveDiscoveryLoadBalancerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"reactiveCommonsFeatures","parameterTypes":[] }, 
    {"name":"reactiveDiscoveryClients","parameterTypes":["java.util.Collection"] }
  ]
},
{
  "name":"org.springframework.cloud.client.ServiceInstance",
  "methods":[
    {"name":"getInstanceId","parameterTypes":[] }, 
    {"name":"getScheme","parameterTypes":[] }, 
    {"name":"getServiceId","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.client.actuator.FeaturesEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.cloud.client.actuator.HasFeatures",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.DiscoveryClient",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"probe","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.client.discovery.ReactiveDiscoveryClient",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"probe","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"compositeDiscoveryClient","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"reactiveCompositeDiscoveryClient","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.cloud.client.discovery.event.HeartbeatMonitor"
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryHealthIndicator",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryClientHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryCompositeHealthContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryHealthIndicator",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"setInet","parameterTypes":["org.springframework.cloud.commons.util.InetUtils"] }, 
    {"name":"setServer","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }, 
    {"name":"simpleDiscoveryClient","parameterTypes":["org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties"] }, 
    {"name":"simpleDiscoveryProperties","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"simpleReactiveDiscoveryClient","parameterTypes":["org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties"] }, 
    {"name":"simpleReactiveDiscoveryProperties","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration$HealthConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"simpleReactiveDiscoveryClientHealthIndicator","parameterTypes":["org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties","org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClient"] }
  ]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalanced",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loadBalancedRestTemplateInitializerDeprecated","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"loadBalancerRequestFactory","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerClient"] }
  ]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loadBalancerInterceptor","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerClient","org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory"] }, 
    {"name":"restTemplateCustomizer","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor"] }
  ]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerClient",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loadBalancerClientsDefaultsMappingsProvider","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getHealthCheck","parameterTypes":[] }, 
    {"name":"getHint","parameterTypes":[] }, 
    {"name":"getHintHeaderName","parameterTypes":[] }, 
    {"name":"getRetry","parameterTypes":[] }, 
    {"name":"getStickySession","parameterTypes":[] }, 
    {"name":"getXForwarded","parameterTypes":[] }, 
    {"name":"setHealthCheck","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"] }, 
    {"name":"setHint","parameterTypes":["java.util.Map"] }, 
    {"name":"setHintHeaderName","parameterTypes":["java.lang.String"] }, 
    {"name":"setRetry","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"] }, 
    {"name":"setStickySession","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$StickySession"] }, 
    {"name":"setxForwarded","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$XForwarded"] }
  ]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerRequestTransformer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.RestTemplateCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancedExchangeFilterFunction",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loadBalancerWebClientBuilderBeanPostProcessor","parameterTypes":["org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction","org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"reactorDeferringLoadBalancerExchangeFilterFunction","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerClientRequestTransformer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerWebClientBuilderBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loadBalancerExchangeFilterFunction","parameterTypes":["org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerExchangeFilterFunction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addRegistrationLifecycle","parameterTypes":["org.springframework.cloud.client.serviceregistry.RegistrationLifecycle"] }, 
    {"name":"addRegistrationManagementLifecycle","parameterTypes":["org.springframework.cloud.client.serviceregistry.RegistrationManagementLifecycle"] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getPhase","parameterTypes":[] }, 
    {"name":"isAutoStartup","parameterTypes":[] }, 
    {"name":"isRunning","parameterTypes":[] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.boot.web.context.WebServerInitializedEvent"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistration",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"afterPropertiesSet","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistry",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration"] }, 
    {"name":"serviceRegistryEndpoint","parameterTypes":["org.springframework.cloud.client.serviceregistry.ServiceRegistry"] }
  ]
},
{
  "name":"org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultsBindHandlerAdvisor","parameterTypes":["org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider[]"] }
  ]
},
{
  "name":"org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.commons.util.InetUtils",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.commons.util.InetUtilsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.commons.util.UtilAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"inetUtils","parameterTypes":["org.springframework.cloud.commons.util.InetUtilsProperties"] }, 
    {"name":"inetUtilsProperties","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.config.client$ConfigServerInstanceProvider"
},
{
  "name":"org.springframework.cloud.config.client.ConfigServerInstanceProvider"
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifier",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"compositeCompatibilityVerifier","parameterTypes":["java.util.List"] }, 
    {"name":"sleuthPresentVerifier","parameterTypes":[] }, 
    {"name":"springBootVersionVerifier","parameterTypes":["org.springframework.cloud.configuration.CompatibilityVerifierProperties"] }
  ]
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifierProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.configuration.CompositeCompatibilityVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.configuration.SleuthPresentVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.configuration.SpringBootVersionVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.context.environment.EnvironmentManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }]
},
{
  "name":"org.springframework.cloud.context.named.NamedContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"buildContext","parameterTypes":["java.lang.String"] }, 
    {"name":"createContext","parameterTypes":["java.lang.String"] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getConfigurations","parameterTypes":[] }, 
    {"name":"getContextNames","parameterTypes":[] }, 
    {"name":"getInstance","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"getInstance","parameterTypes":["java.lang.String","java.lang.Class","java.lang.Class[]"] }, 
    {"name":"getInstance","parameterTypes":["java.lang.String","org.springframework.core.ResolvableType"] }, 
    {"name":"getInstances","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"getLazyProvider","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"getParent","parameterTypes":[] }, 
    {"name":"getProvider","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"registerBeans","parameterTypes":["java.lang.String","org.springframework.context.support.GenericApplicationContext"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setConfigurations","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.cloud.context.named.NamedContextFactory$Specification",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.cloud.context.refresh.ConfigDataContextRefresher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.context.refresh.ContextRefresher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"refresh","parameterTypes":[] }, 
    {"name":"refreshEnvironment","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.context.restart.RestartEndpoint"
},
{
  "name":"org.springframework.cloud.context.restart.RestartListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.context.scope.refresh.RefreshScope"
},
{
  "name":"org.springframework.cloud.endpoint.RefreshEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.endpoint.event.RefreshEventListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.actuate.GatewayControllerEndpoint"
},
{
  "name":"org.springframework.cloud.gateway.config.AbstractSslConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"configureSsl","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.cloud.gateway.config.ConfigurableHintsRegistrationProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"adaptCachedBodyGlobalFilter","parameterTypes":[] }, 
    {"name":"addRequestHeaderGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"addRequestHeadersIfNotPresentGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"addRequestParameterGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"addResponseHeaderGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"afterRoutePredicateFactory","parameterTypes":[] }, 
    {"name":"beforeRoutePredicateFactory","parameterTypes":[] }, 
    {"name":"betweenRoutePredicateFactory","parameterTypes":[] }, 
    {"name":"cacheRequestBodyGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"cachedCompositeRouteLocator","parameterTypes":["java.util.List"] }, 
    {"name":"cloudFoundryRouteServiceRoutePredicateFactory","parameterTypes":[] }, 
    {"name":"configurableHintsRegistrationProcessor","parameterTypes":[] }, 
    {"name":"cookieRoutePredicateFactory","parameterTypes":[] }, 
    {"name":"corsGatewayFilterApplicationListener","parameterTypes":["org.springframework.cloud.gateway.config.GlobalCorsProperties","org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping","org.springframework.cloud.gateway.route.RouteDefinitionLocator"] }, 
    {"name":"dedupeResponseHeaderGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"filteringWebHandler","parameterTypes":["java.util.List"] }, 
    {"name":"forwardPathFilter","parameterTypes":[] }, 
    {"name":"forwardRoutingFilter","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"forwardedHeadersFilter","parameterTypes":[] }, 
    {"name":"gRPCRequestHeadersFilter","parameterTypes":[] }, 
    {"name":"gRPCResponseHeadersFilter","parameterTypes":[] }, 
    {"name":"gatewayConfigurationService","parameterTypes":["org.springframework.beans.factory.BeanFactory","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"gatewayProperties","parameterTypes":[] }, 
    {"name":"globalCorsProperties","parameterTypes":[] }, 
    {"name":"gzipMessageBodyResolver","parameterTypes":[] }, 
    {"name":"headerRoutePredicateFactory","parameterTypes":[] }, 
    {"name":"hostRoutePredicateFactory","parameterTypes":[] }, 
    {"name":"inMemoryRouteDefinitionRepository","parameterTypes":[] }, 
    {"name":"keyValueConverter","parameterTypes":[] }, 
    {"name":"mapRequestHeaderGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"methodRoutePredicateFactory","parameterTypes":[] }, 
    {"name":"modifyRequestBodyGatewayFilterFactory","parameterTypes":["org.springframework.http.codec.ServerCodecConfigurer"] }, 
    {"name":"modifyResponseBodyGatewayFilterFactory","parameterTypes":["org.springframework.http.codec.ServerCodecConfigurer","java.util.Set","java.util.Set"] }, 
    {"name":"pathRoutePredicateFactory","parameterTypes":[] }, 
    {"name":"prefixPathGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"preserveHostHeaderGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"propertiesRouteDefinitionLocator","parameterTypes":["org.springframework.cloud.gateway.config.GatewayProperties"] }, 
    {"name":"queryRoutePredicateFactory","parameterTypes":[] }, 
    {"name":"readBodyPredicateFactory","parameterTypes":["org.springframework.http.codec.ServerCodecConfigurer"] }, 
    {"name":"redirectToGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"remoteAddrRoutePredicateFactory","parameterTypes":[] }, 
    {"name":"removeCachedBodyFilter","parameterTypes":[] }, 
    {"name":"removeHopByHopHeadersFilter","parameterTypes":[] }, 
    {"name":"removeJsonAttributesResponseBodyGatewayFilterFactory","parameterTypes":["org.springframework.http.codec.ServerCodecConfigurer","java.util.Set","java.util.Set"] }, 
    {"name":"removeRequestHeaderGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"removeRequestParameterGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"removeResponseHeaderGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"requestHeaderSizeGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"requestHeaderToRequestUriGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"requestSizeGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"retryGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"rewriteLocationResponseHeaderGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"rewritePathGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"rewriteResponseHeaderGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"routeDefinitionLocator","parameterTypes":["java.util.List"] }, 
    {"name":"routeDefinitionRouteLocator","parameterTypes":["org.springframework.cloud.gateway.config.GatewayProperties","java.util.List","java.util.List","org.springframework.cloud.gateway.route.RouteDefinitionLocator","org.springframework.cloud.gateway.support.ConfigurationService"] }, 
    {"name":"routeLocatorBuilder","parameterTypes":["org.springframework.context.ConfigurableApplicationContext"] }, 
    {"name":"routePredicateHandlerMapping","parameterTypes":["org.springframework.cloud.gateway.handler.FilteringWebHandler","org.springframework.cloud.gateway.route.RouteLocator","org.springframework.cloud.gateway.config.GlobalCorsProperties","org.springframework.core.env.Environment"] }, 
    {"name":"routeRefreshListener","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, 
    {"name":"routeToRequestUrlFilter","parameterTypes":[] }, 
    {"name":"saveSessionGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"secureHeadersGatewayFilterFactory","parameterTypes":["org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties"] }, 
    {"name":"secureHeadersProperties","parameterTypes":[] }, 
    {"name":"setPathGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"setRequestHeaderGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"setRequestHostHeaderGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"setResponseHeaderGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"setStatusGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"stringToZonedDateTimeConverter","parameterTypes":[] }, 
    {"name":"stripPrefixGatewayFilterFactory","parameterTypes":[] }, 
    {"name":"transferEncodingNormalizationHeadersFilter","parameterTypes":[] }, 
    {"name":"webSocketService","parameterTypes":["org.springframework.web.reactive.socket.server.RequestUpgradeStrategy"] }, 
    {"name":"websocketRoutingFilter","parameterTypes":["org.springframework.web.reactive.socket.client.WebSocketClient","org.springframework.web.reactive.socket.server.WebSocketService","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"weightCalculatorWebFilter","parameterTypes":["org.springframework.cloud.gateway.support.ConfigurationService","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"weightRoutePredicateFactory","parameterTypes":[] }, 
    {"name":"xForwardedHeadersFilter","parameterTypes":[] }, 
    {"name":"xForwardedRemoteAddrRoutePredicateFactory","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"gatewayHttpClientFactory","parameterTypes":["org.springframework.cloud.gateway.config.HttpClientProperties","org.springframework.boot.autoconfigure.web.ServerProperties","java.util.List","org.springframework.cloud.gateway.config.HttpClientSslConfigurer"] }, 
    {"name":"httpClientProperties","parameterTypes":[] }, 
    {"name":"httpClientSslConfigurer","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties","org.springframework.cloud.gateway.config.HttpClientProperties"] }, 
    {"name":"nettyWriteResponseFilter","parameterTypes":["org.springframework.cloud.gateway.config.GatewayProperties"] }, 
    {"name":"reactorNettyRequestUpgradeStrategy","parameterTypes":["org.springframework.cloud.gateway.config.HttpClientProperties"] }, 
    {"name":"reactorNettyWebSocketClient","parameterTypes":["org.springframework.cloud.gateway.config.HttpClientProperties","reactor.netty.http.client.HttpClient"] }, 
    {"name":"routingFilter","parameterTypes":["reactor.netty.http.client.HttpClient","org.springframework.beans.factory.ObjectProvider","org.springframework.cloud.gateway.config.HttpClientProperties"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration$2",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayAutoConfiguration$OnVerboseDisabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayAutoConfiguration$TokenRelayConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"tokenRelayGatewayFilterFactory","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayClassPathWarningAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayLoadBalancerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"gatewayHttpTagsProvider","parameterTypes":[] }, 
    {"name":"gatewayMetricFilter","parameterTypes":["io.micrometer.core.instrument.MeterRegistry","java.util.List","org.springframework.cloud.gateway.config.GatewayMetricsProperties"] }, 
    {"name":"gatewayRouteTagsProvider","parameterTypes":[] }, 
    {"name":"propertiesTagsProvider","parameterTypes":["org.springframework.cloud.gateway.config.GatewayMetricsProperties"] }, 
    {"name":"routeDefinitionMetrics","parameterTypes":["io.micrometer.core.instrument.MeterRegistry","org.springframework.cloud.gateway.route.RouteDefinitionLocator","org.springframework.cloud.gateway.config.GatewayMetricsProperties"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayMetricsAutoConfiguration$ObservabilityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"observationClosingWebExceptionHandler","parameterTypes":[] }, 
    {"name":"observedRequestHttpHeadersFilter","parameterTypes":["io.micrometer.observation.ObservationRegistry","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"observedResponseHttpHeadersFilter","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayMetricsAutoConfiguration$ObservabilityConfiguration$GatewayTracingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"gatewayPropagatingSenderTracingObservationHandler","parameterTypes":["io.micrometer.tracing.Tracer","io.micrometer.tracing.propagation.Propagator","org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayMetricsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getRoutes","parameterTypes":[] }, 
    {"name":"setRoutes","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayReactiveLoadBalancerClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"gatewayLoadBalancerClientFilter","parameterTypes":["org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory","org.springframework.cloud.gateway.config.GatewayLoadBalancerProperties"] }, 
    {"name":"loadBalancerServiceInstanceCookieFilter","parameterTypes":["org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayReactiveOAuth2AutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"gatewayReactiveOAuth2AuthorizedClientManager","parameterTypes":["org.springframework.security.oauth2.client.registration.ReactiveClientRegistrationRepository","org.springframework.security.oauth2.client.web.server.ServerOAuth2AuthorizedClientRepository"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.config.GlobalCorsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.config.HttpClientFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getObjectType","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.config.HttpClientProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getMaxHeaderSize","parameterTypes":[] }, 
    {"name":"getMaxInitialLineLength","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.config.HttpClientSslConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"configureSsl","parameterTypes":["java.lang.Object"] }, 
    {"name":"configureSsl","parameterTypes":["reactor.netty.http.client.HttpClient"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.config.MaxDataSizeValidator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"initialize","parameterTypes":["java.lang.annotation.Annotation"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.config.PropertiesRouteDefinitionLocator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.config.conditional.ConditionalOnEnabledFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.config.conditional.ConditionalOnEnabledGlobalFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.config.conditional.ConditionalOnEnabledPredicate",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.config.conditional.OnEnabledFilter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.config.conditional.OnEnabledGlobalFilter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.config.conditional.OnEnabledPredicate",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.discovery.DiscoveryClientRouteDefinitionLocator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.discovery.DiscoveryClientRouteDefinitionLocator$DelegatingServiceInstance",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setEnabled","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.cloud.gateway.discovery.GatewayDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"discoveryLocatorProperties","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.discovery.GatewayDiscoveryClientAutoConfiguration$ReactiveDiscoveryClientRouteDefinitionLocatorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"discoveryClientRouteDefinitionLocator","parameterTypes":["org.springframework.cloud.client.discovery.ReactiveDiscoveryClient","org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.FilterDefinition",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.ForwardPathFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.ForwardRoutingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.GatewayMetricsFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.GlobalFilter",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.NettyRoutingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.NettyWriteResponseFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.WebsocketRoutingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"supportsSourceType","parameterTypes":["java.lang.Class"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.filter.cors.CorsGatewayFilterApplicationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.AbstractChangeRequestUriGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"apply","parameterTypes":["java.lang.Object"] }, 
    {"name":"determineRequestUri","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.AbstractNameValueGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.AddRequestHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.AddRequestHeadersIfNotPresentGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getConfigClass","parameterTypes":[] }, 
    {"name":"newConfig","parameterTypes":[] }, 
    {"name":"shortcutFieldOrder","parameterTypes":[] }, 
    {"name":"shortcutType","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.AddRequestParameterGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.AddResponseHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.CacheRequestBodyGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.DedupeResponseHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.GatewayFilterFactory",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"apply","parameterTypes":["java.lang.Object"] }, 
    {"name":"apply","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"apply","parameterTypes":["java.lang.String","java.util.function.Consumer"] }, 
    {"name":"apply","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"name","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.MapRequestHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.PrefixPathGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.PreserveHostHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RedirectToGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RemoveJsonAttributesResponseBodyGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getConfigClass","parameterTypes":[] }, 
    {"name":"newConfig","parameterTypes":[] }, 
    {"name":"shortcutFieldOrder","parameterTypes":[] }, 
    {"name":"shortcutType","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RemoveRequestHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RemoveRequestParameterGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RemoveResponseHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RequestHeaderSizeGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RequestHeaderToRequestUriGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"apply","parameterTypes":["java.lang.Object"] }, 
    {"name":"shortcutFieldOrder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RequestSizeGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RetryGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RewriteLocationResponseHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RewritePathGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RewritePathGatewayFilterFactory$Config",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setRegexp","parameterTypes":["java.lang.String"] }, 
    {"name":"setReplacement","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RewriteResponseHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.SaveSessionGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.SecureHeadersGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.SetPathGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.SetRequestHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.SetRequestHostHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.SetResponseHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.SetStatusGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"shortcutFieldOrder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.StripPrefixGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.TokenRelayGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.rewrite.GzipMessageBodyResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.rewrite.MessageBodyDecoder",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.rewrite.MessageBodyEncoder",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.rewrite.ModifyRequestBodyGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.rewrite.ModifyResponseBodyGatewayFilterFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.headers.ForwardedHeadersFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.headers.GRPCRequestHeadersFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"supports","parameterTypes":["org.springframework.cloud.gateway.filter.headers.HttpHeadersFilter$Type"] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.headers.GRPCResponseHeadersFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"supports","parameterTypes":["org.springframework.cloud.gateway.filter.headers.HttpHeadersFilter$Type"] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.headers.HttpHeadersFilter",
  "queryAllPublicMethods":true,
  "methods":[{"name":"supports","parameterTypes":["org.springframework.cloud.gateway.filter.headers.HttpHeadersFilter$Type"] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.headers.RemoveHopByHopHeadersFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"supports","parameterTypes":["org.springframework.cloud.gateway.filter.headers.HttpHeadersFilter$Type"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.filter.headers.TransferEncodingNormalizationHeadersFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.headers.observation.GatewayPropagatingSenderTracingObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStart","parameterTypes":["io.micrometer.observation.transport.SenderContext"] }, 
    {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.filter.headers.observation.ObservationClosingWebExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.headers.observation.ObservedRequestHttpHeadersFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"supports","parameterTypes":["org.springframework.cloud.gateway.filter.headers.HttpHeadersFilter$Type"] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.headers.observation.ObservedResponseHttpHeadersFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"supports","parameterTypes":["org.springframework.cloud.gateway.filter.headers.HttpHeadersFilter$Type"] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.ratelimit.KeyResolver"
},
{
  "name":"org.springframework.cloud.gateway.filter.ratelimit.RateLimiter"
},
{
  "name":"org.springframework.cloud.gateway.handler.FilteringWebHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.AbstractRoutePredicateFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.AfterRoutePredicateFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.BeforeRoutePredicateFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.BetweenRoutePredicateFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.CloudFoundryRouteServiceRoutePredicateFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.CookieRoutePredicateFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.HeaderRoutePredicateFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.HostRoutePredicateFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"shortcutFieldOrder","parameterTypes":[] }, 
    {"name":"shortcutType","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.MethodRoutePredicateFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"shortcutFieldOrder","parameterTypes":[] }, 
    {"name":"shortcutType","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.PathRoutePredicateFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"shortcutFieldOrder","parameterTypes":[] }, 
    {"name":"shortcutType","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.PathRoutePredicateFactory$Config",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getPatterns","parameterTypes":[] }, 
    {"name":"setPatterns","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.PredicateDefinition",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.QueryRoutePredicateFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.ReadBodyRoutePredicateFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"applyAsync","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.RemoteAddrRoutePredicateFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"shortcutFieldOrder","parameterTypes":[] }, 
    {"name":"shortcutType","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.RoutePredicateFactory",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"apply","parameterTypes":["java.lang.Object"] }, 
    {"name":"apply","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"applyAsync","parameterTypes":["java.lang.Object"] }, 
    {"name":"applyAsync","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"beforeApply","parameterTypes":["java.lang.Object"] }, 
    {"name":"name","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.WeightRoutePredicateFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"beforeApply","parameterTypes":["java.lang.Object"] }, 
    {"name":"shortcutFieldOrder","parameterTypes":[] }, 
    {"name":"shortcutFieldPrefix","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.XForwardedRemoteAddrRoutePredicateFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"shortcutFieldOrder","parameterTypes":[] }, 
    {"name":"shortcutType","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.route.CachingRouteLocator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.CompositeRouteDefinitionLocator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.InMemoryRouteDefinitionRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.RouteDefinition",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getFilters","parameterTypes":[] }, 
    {"name":"getPredicates","parameterTypes":[] }, 
    {"name":"setFilters","parameterTypes":["java.util.List"] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }, 
    {"name":"setPredicates","parameterTypes":["java.util.List"] }, 
    {"name":"setUri","parameterTypes":["java.net.URI"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.route.RouteDefinitionLocator",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.RouteDefinitionMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.RouteDefinitionRepository",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.RouteLocator",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.RouteRefreshListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.support.AbstractConfigurable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getConfigClass","parameterTypes":[] }, 
    {"name":"newConfig","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.support.Configurable",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.gateway.support.ConfigurationService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.support.KeyValueConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.support.ShortcutConfigurable",
  "methods":[
    {"name":"shortcutFieldOrder","parameterTypes":[] }, 
    {"name":"shortcutFieldPrefix","parameterTypes":[] }, 
    {"name":"shortcutType","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.support.StringToZonedDateTimeConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.support.tagsprovider.GatewayHttpTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.support.tagsprovider.GatewayRouteTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.support.tagsprovider.GatewayTagsProvider",
  "queryAllPublicMethods":true,
  "methods":[{"name":"and","parameterTypes":["org.springframework.cloud.gateway.support.tagsprovider.GatewayTagsProvider"] }]
},
{
  "name":"org.springframework.cloud.gateway.support.tagsprovider.PropertiesTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.health.RefreshScopeHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClient",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"reactorServiceInstanceLoadBalancer","parameterTypes":["org.springframework.core.env.Environment","org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"] }
  ]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$AvoidPreviousInstanceEnabledCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$BlockingOnAvoidPreviousInstanceAndRetryEnabledCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$BlockingSupportConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$DefaultConfigurationCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$HealthCheckConfigurationCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$ReactiveOnAvoidPreviousInstanceAndRetryEnabledCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$ReactiveRetryConfiguration",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$ReactiveSupportConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"xForwarderHeadersTransformer","parameterTypes":["org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"] }
  ]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$RequestBasedStickySessionConfigurationCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$SameInstancePreferenceConfigurationCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$WeightedConfigurationCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$ZonePreferenceConfigurationCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfigurationRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.Class[]"] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClients",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.aot.LoadBalancerChildContextInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.cache.DefaultLoadBalancerCacheManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheManager",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"blockingLoadBalancerClient","parameterTypes":["org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"] }, 
    {"name":"loadBalancerServiceInstanceCookieTransformer","parameterTypes":["org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"] }, 
    {"name":"xForwarderHeadersTransformer","parameterTypes":["org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"] }
  ]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loadBalancerChildContextInitializer","parameterTypes":["org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory","org.springframework.context.ApplicationContext"] }, 
    {"name":"loadBalancerClientFactory","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"loadBalancerEagerContextInitializer","parameterTypes":["org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory","org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties"] }, 
    {"name":"zoneConfig","parameterTypes":["org.springframework.core.env.Environment"] }
  ]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultLoadBalancerCacheManager","parameterTypes":["org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties"] }
  ]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"caffeineWarnLogger","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$OnCaffeineCacheMissingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$OnLoadBalancerCachingEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.core.CachingServiceInstanceListSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.core.DelegatingServiceInstanceListSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getDelegate","parameterTypes":[] }, 
    {"name":"getServiceId","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.core.ReactorLoadBalancer",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"choose","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.core.ReactorServiceInstanceLoadBalancer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.core.ServiceInstanceListSupplier",
  "queryAllPublicMethods":true,
  "methods":[{"name":"get","parameterTypes":["org.springframework.cloud.client.loadbalancer.Request"] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.core.XForwardedHeadersTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getProperties","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.support.LoadBalancerEagerContextInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.logging.LoggingRebinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.sleuth$Tracer"
},
{
  "name":"org.springframework.cloud.sleuth.Tracer"
},
{
  "name":"org.springframework.cloud.util.ConditionalOnBootstrapDisabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.util.ConditionalOnBootstrapDisabled$OnBootstrapDisabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.util.ConditionalOnBootstrapEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.util.ConditionalOnBootstrapEnabled$OnBootstrapEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.ConditionalOnZookeeperEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.ZookeeperAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"curatorFramework","parameterTypes":["org.springframework.cloud.zookeeper.ZookeeperProperties","org.apache.curator.RetryPolicy","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"exponentialBackoffRetry","parameterTypes":["org.springframework.cloud.zookeeper.ZookeeperProperties"] }, 
    {"name":"zookeeperProperties","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.ZookeeperHealthAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"zookeeperHealthIndicator","parameterTypes":["org.apache.curator.framework.CuratorFramework"] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.ZookeeperHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.ZookeeperProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setConnectString","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ConditionalOnLoadBalancerForZookeeperEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ConditionalOnZookeeperDiscoveryEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.LoadBalancerZookeeperAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"zookeeperServiceWatch","parameterTypes":["org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryProperties"] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryAutoConfiguration$ZookeeperDiscoveryHealthConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"zookeeperDiscoveryHealthIndicator","parameterTypes":["org.apache.curator.framework.CuratorFramework","org.apache.curator.x.discovery.ServiceDiscovery","org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryProperties"] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"zookeeperDiscoveryClient","parameterTypes":["org.apache.curator.x.discovery.ServiceDiscovery","org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryProperties"] }, 
    {"name":"zookeeperDiscoveryClientMarker","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryClientConfiguration$Marker",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"setInstanceId","parameterTypes":["java.lang.String"] }, 
    {"name":"setPreferIpAddress","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperInstance",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"getMetadata","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }, 
    {"name":"setMetadata","parameterTypes":["java.util.Map"] }, 
    {"name":"setName","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperLifecycle"
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperLoadBalancerConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"zookeeperDiscoveryClientServiceInstanceListSupplier","parameterTypes":["org.springframework.cloud.client.discovery.DiscoveryClient","org.springframework.core.env.Environment","org.springframework.context.ApplicationContext","org.springframework.cloud.zookeeper.discovery.dependency.ZookeeperDependencies"] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperServiceInstance",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperServiceWatch",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"stop","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.configclient.ZookeeperConfigServerBootstrapper",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.dependency.ConditionalOnDependenciesPassed",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.dependency.DependenciesPassedCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.dependency.DependencyEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.dependency.ZookeeperDependencies",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"init","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.dependency.ZookeeperDependenciesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"zookeeperDependencies","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.reactive.ZookeeperReactiveDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.reactive.ZookeeperReactiveDiscoveryClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"zookeeperReactiveDiscoveryClient","parameterTypes":["org.apache.curator.x.discovery.ServiceDiscovery","org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryProperties"] }, 
    {"name":"zookeeperReactiveDiscoveryClientHealthIndicator","parameterTypes":["org.springframework.cloud.zookeeper.discovery.reactive.ZookeeperReactiveDiscoveryClient","org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties"] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.serviceregistry.ServiceInstanceRegistration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.serviceregistry.ZookeeperAutoServiceRegistration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.serviceregistry.ZookeeperAutoServiceRegistrationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"serviceInstanceRegistration","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryProperties"] }, 
    {"name":"zookeeperAutoServiceRegistration","parameterTypes":["org.springframework.cloud.zookeeper.serviceregistry.ZookeeperServiceRegistry","org.springframework.cloud.zookeeper.serviceregistry.ZookeeperRegistration","org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryProperties"] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.serviceregistry.ZookeeperRegistration",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.serviceregistry.ZookeeperServiceRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.serviceregistry.ZookeeperServiceRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"zookeeperDiscoveryProperties","parameterTypes":["org.springframework.cloud.commons.util.InetUtils"] }, 
    {"name":"zookeeperServiceRegistry","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.support.CuratorServiceDiscoveryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"curatorServiceDiscovery","parameterTypes":["org.springframework.cloud.zookeeper.support.ServiceDiscoveryCustomizer"] }, 
    {"name":"defaultServiceDiscoveryCustomizer","parameterTypes":["org.apache.curator.framework.CuratorFramework","org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryProperties","org.apache.curator.x.discovery.details.InstanceSerializer"] }, 
    {"name":"deprecatedInstanceSerializer","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.support.DefaultServiceDiscoveryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.support.ServiceDiscoveryCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationContextAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationEventPublisherAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationStartupAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.EmbeddedValueResolverAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.EnvironmentAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.Lifecycle",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.LifecycleProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ResourceLoaderAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.AnnotationScopeMetadataResolver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.AspectJAutoProxyRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.AutoProxyRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Bean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ComponentScan",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ComponentScan$Filter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Condition",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.Conditional",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Configuration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassPostProcessor",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setMetadataReaderFactory","parameterTypes":["org.springframework.core.type.classreading.MetadataReaderFactory"] }
  ]
},
{
  "name":"org.springframework.context.annotation.DependsOn",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.EnableAspectJAutoProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Import",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ImportRuntimeHints",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Lazy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Primary",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Role",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Scope",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.event.DefaultEventListenerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.event.EventListenerMethodProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.event.SmartApplicationListener",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getListenerId","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"supportsSourceType","parameterTypes":["java.lang.Class"] }
  ]
},
{
  "name":"org.springframework.context.support.ApplicationObjectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getApplicationContext","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.context.support.DefaultLifecycleProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
},
{
  "name":"org.springframework.core.Ordered",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.PriorityOrdered",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.ReactiveAdapterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.AliasFor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.Order",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.convert.converter.Converter",
  "queryAllPublicMethods":true,
  "methods":[{"name":"andThen","parameterTypes":["org.springframework.core.convert.converter.Converter"] }]
},
{
  "name":"org.springframework.core.convert.support.ConfigurableConversionService",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.convert.support.GenericConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addConverter","parameterTypes":["java.lang.Class","java.lang.Class","org.springframework.core.convert.converter.Converter"] }, 
    {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.Converter"] }, 
    {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.GenericConverter"] }, 
    {"name":"addConverterFactory","parameterTypes":["org.springframework.core.convert.converter.ConverterFactory"] }, 
    {"name":"canBypassConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"canConvert","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"canConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","java.lang.Class"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"removeConvertible","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.core.task.AsyncListenableTaskExecutor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.task.AsyncTaskExecutor",
  "methods":[
    {"name":"submitCompletable","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"submitCompletable","parameterTypes":["java.util.concurrent.Callable"] }
  ]
},
{
  "name":"org.springframework.core.type.classreading.MetadataReaderFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.data.cassandra.ReactiveSession"
},
{
  "name":"org.springframework.data.convert.CustomConversions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getCustomWriteTarget","parameterTypes":["java.lang.Class"] }, 
    {"name":"getCustomWriteTarget","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"getPropertyValueConversions","parameterTypes":[] }, 
    {"name":"getSimpleTypeHolder","parameterTypes":[] }, 
    {"name":"hasCustomReadTarget","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"hasCustomWriteTarget","parameterTypes":["java.lang.Class"] }, 
    {"name":"hasCustomWriteTarget","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"hasValueConverter","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, 
    {"name":"isSimpleType","parameterTypes":["java.lang.Class"] }, 
    {"name":"registerConvertersIn","parameterTypes":["org.springframework.core.convert.converter.ConverterRegistry"] }
  ]
},
{
  "name":"org.springframework.data.convert.EntityConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.convert.EntityReader",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.convert.EntityWriter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.convert.ReadingConverter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.convert.WritingConverter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient"
},
{
  "name":"org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
},
{
  "name":"org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
},
{
  "name":"org.springframework.data.jpa.repository.JpaRepository"
},
{
  "name":"org.springframework.data.keyvalue.core.AbstractKeyValueAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"count","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.String"] }, 
    {"name":"find","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.String"] }, 
    {"name":"find","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.String","java.lang.Class"] }
  ]
},
{
  "name":"org.springframework.data.keyvalue.core.KeyValueAdapter",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"entries","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"exists","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.data.keyvalue.core.KeyValueOperations",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.keyvalue.core.KeyValueTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"count","parameterTypes":["java.lang.Class"] }, 
    {"name":"count","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.Class"] }, 
    {"name":"delete","parameterTypes":["java.lang.Class"] }, 
    {"name":"delete","parameterTypes":["java.lang.Object"] }, 
    {"name":"delete","parameterTypes":["java.lang.Object","java.lang.Class"] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.keyvalue.core.KeyValueCallback"] }, 
    {"name":"exists","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.Class"] }, 
    {"name":"find","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.Class"] }, 
    {"name":"findAll","parameterTypes":["java.lang.Class"] }, 
    {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort","java.lang.Class"] }, 
    {"name":"findById","parameterTypes":["java.lang.Object","java.lang.Class"] }, 
    {"name":"findInRange","parameterTypes":["long","int","java.lang.Class"] }, 
    {"name":"findInRange","parameterTypes":["long","int","org.springframework.data.domain.Sort","java.lang.Class"] }, 
    {"name":"insert","parameterTypes":["java.lang.Object"] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, 
    {"name":"setEventTypesToPublish","parameterTypes":["java.util.Set"] }, 
    {"name":"setExceptionTranslator","parameterTypes":["org.springframework.dao.support.PersistenceExceptionTranslator"] }
  ]
},
{
  "name":"org.springframework.data.keyvalue.core.mapping.context.KeyValueMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"createPersistentProperty","parameterTypes":["org.springframework.data.mapping.model.Property","org.springframework.data.keyvalue.core.mapping.KeyValuePersistentEntity","org.springframework.data.mapping.model.SimpleTypeHolder"] }, 
    {"name":"createPersistentProperty","parameterTypes":["org.springframework.data.mapping.model.Property","org.springframework.data.mapping.model.MutablePersistentEntity","org.springframework.data.mapping.model.SimpleTypeHolder"] }
  ]
},
{
  "name":"org.springframework.data.keyvalue.repository.config.QueryCreatorType",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.ldap.repository.LdapRepository"
},
{
  "name":"org.springframework.data.mapping.context.AbstractMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"createPersistentProperty","parameterTypes":["org.springframework.data.mapping.model.Property","org.springframework.data.mapping.model.MutablePersistentEntity","org.springframework.data.mapping.model.SimpleTypeHolder"] }, 
    {"name":"findPersistentPropertyPaths","parameterTypes":["java.lang.Class","java.util.function.Predicate"] }, 
    {"name":"getManagedTypes","parameterTypes":[] }, 
    {"name":"getPersistentEntities","parameterTypes":[] }, 
    {"name":"getPersistentEntity","parameterTypes":["java.lang.Class"] }, 
    {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, 
    {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }, 
    {"name":"getPersistentPropertyPath","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"getPersistentPropertyPath","parameterTypes":["org.springframework.data.mapping.PropertyPath"] }, 
    {"name":"hasPersistentEntityFor","parameterTypes":["java.lang.Class"] }, 
    {"name":"initialize","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, 
    {"name":"setInitialEntitySet","parameterTypes":["java.util.Set"] }, 
    {"name":"setManagedTypes","parameterTypes":["org.springframework.data.domain.ManagedTypes"] }, 
    {"name":"setSimpleTypeHolder","parameterTypes":["org.springframework.data.mapping.model.SimpleTypeHolder"] }, 
    {"name":"setStrict","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.data.mapping.context.MappingContext",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, 
    {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }, 
    {"name":"getRequiredPersistentEntity","parameterTypes":["java.lang.Class"] }, 
    {"name":"getRequiredPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, 
    {"name":"getRequiredPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }
  ]
},
{
  "name":"org.springframework.data.mongodb.core.MongoTemplate"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveMongoOperations"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveMongoTemplate"
},
{
  "name":"org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
},
{
  "name":"org.springframework.data.redis.cache.RedisCache"
},
{
  "name":"org.springframework.data.redis.connection.ReactiveRedisConnectionFactory"
},
{
  "name":"org.springframework.data.redis.connection.RedisConnectionFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.connection.jedis.JedisConnection"
},
{
  "name":"org.springframework.data.redis.connection.jedis.JedisConnectionFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.ReactiveRedisTemplate"
},
{
  "name":"org.springframework.data.redis.core.RedisAccessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getConnectionFactory","parameterTypes":[] }, 
    {"name":"getRequiredConnectionFactory","parameterTypes":[] }, 
    {"name":"setConnectionFactory","parameterTypes":["org.springframework.data.redis.connection.RedisConnectionFactory"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.RedisKeyValueAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.data.redis.core.RedisOperations","org.springframework.data.redis.core.convert.RedisConverter"] }, 
    {"name":"delete","parameterTypes":["java.lang.Object","java.lang.String","java.lang.Class"] }, 
    {"name":"get","parameterTypes":["java.lang.Object","java.lang.String","java.lang.Class"] }, 
    {"name":"getAllOf","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"setEnableKeyspaceEvents","parameterTypes":["org.springframework.data.redis.core.RedisKeyValueAdapter$EnableKeyspaceEvents"] }, 
    {"name":"setKeyspaceNotificationsConfigParameter","parameterTypes":["java.lang.String"] }, 
    {"name":"setShadowCopy","parameterTypes":["org.springframework.data.redis.core.RedisKeyValueAdapter$ShadowCopy"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.RedisKeyValueAdapter$EnableKeyspaceEvents",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.RedisKeyValueAdapter$ShadowCopy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.RedisKeyValueTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.data.redis.core.RedisKeyValueAdapter","org.springframework.data.redis.core.mapping.RedisMappingContext"] }, 
    {"name":"getMappingContext","parameterTypes":[] }, 
    {"name":"insert","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"update","parameterTypes":["java.lang.Object"] }, 
    {"name":"update","parameterTypes":["java.lang.Object","java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.RedisOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"expire","parameterTypes":["java.lang.Object","java.time.Duration"] }, 
    {"name":"expireAt","parameterTypes":["java.lang.Object","java.time.Instant"] }, 
    {"name":"restore","parameterTypes":["java.lang.Object","byte[]","long","java.util.concurrent.TimeUnit"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.RedisTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"boundGeoOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundHashOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundListOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundSetOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundStreamOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundValueOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundZSetOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"convertAndSend","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"copy","parameterTypes":["java.lang.Object","java.lang.Object","boolean"] }, 
    {"name":"countExistingKeys","parameterTypes":["java.util.Collection"] }, 
    {"name":"delete","parameterTypes":["java.lang.Object"] }, 
    {"name":"delete","parameterTypes":["java.util.Collection"] }, 
    {"name":"discard","parameterTypes":[] }, 
    {"name":"dump","parameterTypes":["java.lang.Object"] }, 
    {"name":"exec","parameterTypes":[] }, 
    {"name":"exec","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.redis.core.RedisCallback"] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.redis.core.RedisCallback","boolean"] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.redis.core.RedisCallback","boolean","boolean"] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.redis.core.SessionCallback"] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","java.util.List","java.lang.Object[]"] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","org.springframework.data.redis.serializer.RedisSerializer","org.springframework.data.redis.serializer.RedisSerializer","java.util.List","java.lang.Object[]"] }, 
    {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.RedisCallback"] }, 
    {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.RedisCallback","org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.SessionCallback"] }, 
    {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.SessionCallback","org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"executeWithStickyConnection","parameterTypes":["org.springframework.data.redis.core.RedisCallback"] }, 
    {"name":"expire","parameterTypes":["java.lang.Object","long","java.util.concurrent.TimeUnit"] }, 
    {"name":"expireAt","parameterTypes":["java.lang.Object","java.util.Date"] }, 
    {"name":"getClientList","parameterTypes":[] }, 
    {"name":"getDefaultSerializer","parameterTypes":[] }, 
    {"name":"getExpire","parameterTypes":["java.lang.Object"] }, 
    {"name":"getExpire","parameterTypes":["java.lang.Object","java.util.concurrent.TimeUnit"] }, 
    {"name":"getHashKeySerializer","parameterTypes":[] }, 
    {"name":"getHashValueSerializer","parameterTypes":[] }, 
    {"name":"getKeySerializer","parameterTypes":[] }, 
    {"name":"getStringSerializer","parameterTypes":[] }, 
    {"name":"getValueSerializer","parameterTypes":[] }, 
    {"name":"hasKey","parameterTypes":["java.lang.Object"] }, 
    {"name":"isEnableDefaultSerializer","parameterTypes":[] }, 
    {"name":"isExposeConnection","parameterTypes":[] }, 
    {"name":"keys","parameterTypes":["java.lang.Object"] }, 
    {"name":"killClient","parameterTypes":["java.lang.String","int"] }, 
    {"name":"move","parameterTypes":["java.lang.Object","int"] }, 
    {"name":"multi","parameterTypes":[] }, 
    {"name":"opsForCluster","parameterTypes":[] }, 
    {"name":"opsForGeo","parameterTypes":[] }, 
    {"name":"opsForHash","parameterTypes":[] }, 
    {"name":"opsForHyperLogLog","parameterTypes":[] }, 
    {"name":"opsForList","parameterTypes":[] }, 
    {"name":"opsForSet","parameterTypes":[] }, 
    {"name":"opsForStream","parameterTypes":[] }, 
    {"name":"opsForStream","parameterTypes":["org.springframework.data.redis.hash.HashMapper"] }, 
    {"name":"opsForValue","parameterTypes":[] }, 
    {"name":"opsForZSet","parameterTypes":[] }, 
    {"name":"persist","parameterTypes":["java.lang.Object"] }, 
    {"name":"randomKey","parameterTypes":[] }, 
    {"name":"rename","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"renameIfAbsent","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"replicaOf","parameterTypes":["java.lang.String","int"] }, 
    {"name":"replicaOfNoOne","parameterTypes":[] }, 
    {"name":"restore","parameterTypes":["java.lang.Object","byte[]","long","java.util.concurrent.TimeUnit","boolean"] }, 
    {"name":"scan","parameterTypes":["org.springframework.data.redis.core.ScanOptions"] }, 
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, 
    {"name":"setDefaultSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"setEnableDefaultSerializer","parameterTypes":["boolean"] }, 
    {"name":"setEnableTransactionSupport","parameterTypes":["boolean"] }, 
    {"name":"setExposeConnection","parameterTypes":["boolean"] }, 
    {"name":"setHashKeySerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"setHashValueSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"setKeySerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"setScriptExecutor","parameterTypes":["org.springframework.data.redis.core.script.ScriptExecutor"] }, 
    {"name":"setStringSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"setValueSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery"] }, 
    {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","java.lang.Object"] }, 
    {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","org.springframework.data.redis.core.BulkMapper"] }, 
    {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","org.springframework.data.redis.core.BulkMapper","org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"type","parameterTypes":["java.lang.Object"] }, 
    {"name":"unlink","parameterTypes":["java.lang.Object"] }, 
    {"name":"unlink","parameterTypes":["java.util.Collection"] }, 
    {"name":"unwatch","parameterTypes":[] }, 
    {"name":"watch","parameterTypes":["java.lang.Object"] }, 
    {"name":"watch","parameterTypes":["java.util.Collection"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.StringRedisTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.convert.KeyspaceConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.redis.core.convert.MappingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.redis.core.index.ConfigurableIndexDefinitionProvider","org.springframework.data.redis.core.convert.KeyspaceConfiguration"] }]
},
{
  "name":"org.springframework.data.redis.core.convert.MappingRedisConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.data.redis.core.mapping.RedisMappingContext"] }, 
    {"name":"setCustomConversions","parameterTypes":["org.springframework.data.convert.CustomConversions"] }, 
    {"name":"setReferenceResolver","parameterTypes":["org.springframework.data.redis.core.convert.ReferenceResolver"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.convert.RedisConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.core.convert.RedisCustomConversions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.redis.core.convert.ReferenceResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.core.convert.ReferenceResolverImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.redis.core.RedisOperations"] }]
},
{
  "name":"org.springframework.data.redis.core.index.ConfigurableIndexDefinitionProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.core.index.IndexConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.redis.core.mapping.RedisMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.data.redis.core.convert.MappingConfiguration"] }, 
    {"name":"setFallbackKeySpaceResolver","parameterTypes":["org.springframework.data.keyvalue.core.mapping.KeySpaceResolver"] }
  ]
},
{
  "name":"org.springframework.data.redis.repository.configuration.EnableRedisRepositories",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean"
},
{
  "name":"org.springframework.data.repository.Repository"
},
{
  "name":"org.springframework.data.repository.config.RepositoryRegistrationAotProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setConfigMap","parameterTypes":["java.util.Map"] }
  ]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryMethodInvocationListener",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
},
{
  "name":"org.springframework.data.util.CustomCollections$EclipseCollections",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.CustomCollections$VavrCollections",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.CustomCollections.EclipseCollections"
},
{
  "name":"org.springframework.data.util.CustomCollections.VavrCollections"
},
{
  "name":"org.springframework.data.web.PageableHandlerMethodArgumentResolver"
},
{
  "name":"org.springframework.format.FormatterRegistry",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.format.support.DefaultFormattingConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addDefaultFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }]
},
{
  "name":"org.springframework.format.support.FormattingConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addFormatter","parameterTypes":["org.springframework.format.Formatter"] }, 
    {"name":"addFormatterForFieldAnnotation","parameterTypes":["org.springframework.format.AnnotationFormatterFactory"] }, 
    {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Formatter"] }, 
    {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Printer","org.springframework.format.Parser"] }, 
    {"name":"addParser","parameterTypes":["org.springframework.format.Parser"] }, 
    {"name":"addPrinter","parameterTypes":["org.springframework.format.Printer"] }, 
    {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }
  ]
},
{
  "name":"org.springframework.hateoas.EntityModel"
},
{
  "name":"org.springframework.hateoas.Link"
},
{
  "name":"org.springframework.http.ReactiveHttpInputMessage"
},
{
  "name":"org.springframework.http.client.ClientHttpRequestInterceptor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.client.reactive.ClientHttpConnector"
},
{
  "name":"org.springframework.http.client.reactive.ReactorResourceFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.http.codec.ClientCodecConfigurer"
},
{
  "name":"org.springframework.http.codec.CodecConfigurer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.codec.ServerCodecConfigurer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
},
{
  "name":"org.springframework.http.codec.support.BaseCodecConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.http.codec.support.DefaultClientCodecConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.codec.support.DefaultServerCodecConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"clone","parameterTypes":[] }, 
    {"name":"customCodecs","parameterTypes":[] }, 
    {"name":"defaultCodecs","parameterTypes":[] }, 
    {"name":"getReaders","parameterTypes":[] }, 
    {"name":"getWriters","parameterTypes":[] }, 
    {"name":"registerDefaults","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.http.converter.HttpMessageConverter"
},
{
  "name":"org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.http.server.reactive.HttpHandler",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.server.reactive.TomcatHttpHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.integration.config.EnableIntegration"
},
{
  "name":"org.springframework.integration.graph.IntegrationGraphServer"
},
{
  "name":"org.springframework.integration.monitor.IntegrationMBeanExporter"
},
{
  "name":"org.springframework.jdbc.core.JdbcTemplate"
},
{
  "name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
},
{
  "name":"org.springframework.jdbc.datasource.init.DatabasePopulator"
},
{
  "name":"org.springframework.jms.core.JmsTemplate"
},
{
  "name":"org.springframework.jmx.export.MBeanExporter"
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedAttribute",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedResource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.core.KafkaTemplate"
},
{
  "name":"org.springframework.kafka.core.ProducerFactory"
},
{
  "name":"org.springframework.ldap.core.ContextSource"
},
{
  "name":"org.springframework.ldap.core.LdapOperations"
},
{
  "name":"org.springframework.mail.javamail.JavaMailSenderImpl"
},
{
  "name":"org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler"
},
{
  "name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
},
{
  "name":"org.springframework.oxm.Marshaller"
},
{
  "name":"org.springframework.oxm.Unmarshaller"
},
{
  "name":"org.springframework.r2dbc.connection.R2dbcTransactionManager"
},
{
  "name":"org.springframework.r2dbc.connection.init.DatabasePopulator"
},
{
  "name":"org.springframework.retry.support.RetryTemplate"
},
{
  "name":"org.springframework.scheduling.SchedulingTaskExecutor",
  "queryAllPublicMethods":true,
  "methods":[{"name":"prefersShortLivedTasks","parameterTypes":[] }]
},
{
  "name":"org.springframework.scheduling.concurrent.CustomizableThreadFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newThread","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"initialize","parameterTypes":[] }, 
    {"name":"setAwaitTerminationMillis","parameterTypes":["long"] }, 
    {"name":"setAwaitTerminationSeconds","parameterTypes":["int"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setRejectedExecutionHandler","parameterTypes":["java.util.concurrent.RejectedExecutionHandler"] }, 
    {"name":"setThreadFactory","parameterTypes":["java.util.concurrent.ThreadFactory"] }, 
    {"name":"setThreadNamePrefix","parameterTypes":["java.lang.String"] }, 
    {"name":"setWaitForTasksToCompleteOnShutdown","parameterTypes":["boolean"] }, 
    {"name":"shutdown","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
},
{
  "name":"org.springframework.security.authentication.AuthenticationEventPublisher",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authentication.AuthenticationManager"
},
{
  "name":"org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.authentication.ReactiveAuthenticationManager"
},
{
  "name":"org.springframework.security.authentication.ReactiveAuthenticationManagerResolver"
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.config.annotation.ObjectPostProcessor"
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"
},
{
  "name":"org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.web.reactive.ReactiveOAuth2ClientImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.web.reactive.ReactiveOAuth2ClientImportSelector$OAuth2ClientWebFluxSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"configureArgumentResolvers","parameterTypes":["org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"] }, 
    {"name":"setAuthorizedClientManager","parameterTypes":["java.util.List"] }, 
    {"name":"setAuthorizedClientRepository","parameterTypes":["org.springframework.security.oauth2.client.web.server.ServerOAuth2AuthorizedClientRepository"] }, 
    {"name":"setAuthorizedClientService","parameterTypes":["java.util.List"] }, 
    {"name":"setClientRegistrationRepository","parameterTypes":["org.springframework.security.oauth2.client.registration.ReactiveClientRegistrationRepository"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationPrincipalArgumentResolver","parameterTypes":[] }, 
    {"name":"authenticationPrincipalArgumentResolverConfigurer","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"httpSecurity","parameterTypes":[] }, 
    {"name":"reactiveCurrentSecurityContextArgumentResolver","parameterTypes":[] }, 
    {"name":"setAdapterRegistry","parameterTypes":["org.springframework.core.ReactiveAdapterRegistry"] }, 
    {"name":"setObservationRegistry","parameterTypes":["io.micrometer.observation.ObservationRegistry"] }, 
    {"name":"setReactiveUserDetailsService","parameterTypes":["org.springframework.security.core.userdetails.ReactiveUserDetailsService"] }, 
    {"name":"setUserDetailsPasswordService","parameterTypes":["org.springframework.security.core.userdetails.ReactiveUserDetailsPasswordService"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"configureArgumentResolvers","parameterTypes":["org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"] }]
},
{
  "name":"org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration$ContextAwareServerHttpSecurity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"conversionServicePostProcessor","parameterTypes":[] }, 
    {"name":"requestDataValueProcessor","parameterTypes":[] }, 
    {"name":"setObservationRegistry","parameterTypes":["io.micrometer.observation.ObservationRegistry"] }, 
    {"name":"setSecurityWebFilterChains","parameterTypes":["java.util.List"] }, 
    {"name":"springSecurityWebFilterChainFilter","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.security.config.http.SessionCreationPolicy"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addFilterAfter","parameterTypes":["org.springframework.web.server.WebFilter","org.springframework.security.config.web.server.SecurityWebFiltersOrder"] }, 
    {"name":"addFilterAt","parameterTypes":["org.springframework.web.server.WebFilter","org.springframework.security.config.web.server.SecurityWebFiltersOrder"] }, 
    {"name":"addFilterBefore","parameterTypes":["org.springframework.web.server.WebFilter","org.springframework.security.config.web.server.SecurityWebFiltersOrder"] }, 
    {"name":"anonymous","parameterTypes":[] }, 
    {"name":"anonymous","parameterTypes":["org.springframework.security.config.Customizer"] }, 
    {"name":"authenticationManager","parameterTypes":["org.springframework.security.authentication.ReactiveAuthenticationManager"] }, 
    {"name":"authorizeExchange","parameterTypes":[] }, 
    {"name":"authorizeExchange","parameterTypes":["org.springframework.security.config.Customizer"] }, 
    {"name":"build","parameterTypes":[] }, 
    {"name":"cors","parameterTypes":[] }, 
    {"name":"cors","parameterTypes":["org.springframework.security.config.Customizer"] }, 
    {"name":"csrf","parameterTypes":[] }, 
    {"name":"csrf","parameterTypes":["org.springframework.security.config.Customizer"] }, 
    {"name":"exceptionHandling","parameterTypes":[] }, 
    {"name":"exceptionHandling","parameterTypes":["org.springframework.security.config.Customizer"] }, 
    {"name":"formLogin","parameterTypes":[] }, 
    {"name":"formLogin","parameterTypes":["org.springframework.security.config.Customizer"] }, 
    {"name":"headers","parameterTypes":[] }, 
    {"name":"headers","parameterTypes":["org.springframework.security.config.Customizer"] }, 
    {"name":"http","parameterTypes":[] }, 
    {"name":"httpBasic","parameterTypes":[] }, 
    {"name":"httpBasic","parameterTypes":["org.springframework.security.config.Customizer"] }, 
    {"name":"logout","parameterTypes":[] }, 
    {"name":"logout","parameterTypes":["org.springframework.security.config.Customizer"] }, 
    {"name":"oauth2Client","parameterTypes":[] }, 
    {"name":"oauth2Client","parameterTypes":["org.springframework.security.config.Customizer"] }, 
    {"name":"oauth2Login","parameterTypes":[] }, 
    {"name":"oauth2Login","parameterTypes":["org.springframework.security.config.Customizer"] }, 
    {"name":"oauth2ResourceServer","parameterTypes":[] }, 
    {"name":"oauth2ResourceServer","parameterTypes":["org.springframework.security.config.Customizer"] }, 
    {"name":"passwordManagement","parameterTypes":[] }, 
    {"name":"passwordManagement","parameterTypes":["org.springframework.security.config.Customizer"] }, 
    {"name":"redirectToHttps","parameterTypes":[] }, 
    {"name":"redirectToHttps","parameterTypes":["org.springframework.security.config.Customizer"] }, 
    {"name":"requestCache","parameterTypes":[] }, 
    {"name":"requestCache","parameterTypes":["org.springframework.security.config.Customizer"] }, 
    {"name":"securityContextRepository","parameterTypes":["org.springframework.security.web.server.context.ServerSecurityContextRepository"] }, 
    {"name":"securityMatcher","parameterTypes":["org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher"] }, 
    {"name":"x509","parameterTypes":[] }, 
    {"name":"x509","parameterTypes":["org.springframework.security.config.Customizer"] }
  ]
},
{
  "name":"org.springframework.security.core.context.ReactiveSecurityContextHolder"
},
{
  "name":"org.springframework.security.core.userdetails.MapReactiveUserDetailsService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.core.userdetails.ReactiveUserDetailsPasswordService",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.core.userdetails.ReactiveUserDetailsService",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.crypto.encrypt.TextEncryptor"
},
{
  "name":"org.springframework.security.data.repository.query.SecurityEvaluationContextExtension"
},
{
  "name":"org.springframework.security.oauth2.client.InMemoryReactiveOAuth2AuthorizedClientService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.OAuth2AuthorizedClient"
},
{
  "name":"org.springframework.security.oauth2.client.ReactiveOAuth2AuthorizedClientManager",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.ReactiveOAuth2AuthorizedClientService",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.registration.ClientRegistration"
},
{
  "name":"org.springframework.security.oauth2.client.registration.InMemoryReactiveClientRegistrationRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.registration.ReactiveClientRegistrationRepository",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.web.DefaultReactiveOAuth2AuthorizedClientManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.web.server.AuthenticatedPrincipalServerOAuth2AuthorizedClientRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.web.server.ServerOAuth2AuthorizedClientRepository",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.oauth2.jwt.JwtDecoder"
},
{
  "name":"org.springframework.security.oauth2.jwt.ReactiveJwtDecoder"
},
{
  "name":"org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
},
{
  "name":"org.springframework.security.oauth2.server.resource.introspection.ReactiveOpaqueTokenIntrospector"
},
{
  "name":"org.springframework.security.rsa.crypto.RsaSecretEncryptor"
},
{
  "name":"org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
},
{
  "name":"org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
},
{
  "name":"org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer"
},
{
  "name":"org.springframework.security.web.reactive.result.method.annotation.AuthenticationPrincipalArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.reactive.result.method.annotation.CurrentSecurityContextArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.reactive.result.view.CsrfRequestDataValueProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.server.MatcherSecurityWebFilterChain",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.server.SecurityWebFilterChain",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.server.WebFilterChainProxy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.util.matcher.RequestMatcher"
},
{
  "name":"org.springframework.session.FindByIndexNameSessionRepository"
},
{
  "name":"org.springframework.session.ReactiveSessionRepository"
},
{
  "name":"org.springframework.session.Session"
},
{
  "name":"org.springframework.session.data.mongo.ReactiveMongoSessionRepository"
},
{
  "name":"org.springframework.session.data.redis.ReactiveRedisSessionRepository"
},
{
  "name":"org.springframework.stereotype.Component",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Indexed",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.PlatformTransactionManager"
},
{
  "name":"org.springframework.transaction.ReactiveTransactionManager"
},
{
  "name":"org.springframework.transaction.TransactionManager"
},
{
  "name":"org.springframework.transaction.annotation.EnableTransactionManagement",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.util.CustomizableThreadCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"createThread","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"getThreadGroup","parameterTypes":[] }, 
    {"name":"getThreadNamePrefix","parameterTypes":[] }, 
    {"name":"getThreadPriority","parameterTypes":[] }, 
    {"name":"isDaemon","parameterTypes":[] }, 
    {"name":"setDaemon","parameterTypes":["boolean"] }, 
    {"name":"setThreadGroup","parameterTypes":["java.lang.ThreadGroup"] }, 
    {"name":"setThreadGroupName","parameterTypes":["java.lang.String"] }, 
    {"name":"setThreadPriority","parameterTypes":["int"] }
  ]
},
{
  "name":"org.springframework.validation.SmartValidator",
  "queryAllPublicMethods":true,
  "methods":[{"name":"validateValue","parameterTypes":["java.lang.Class","java.lang.String","java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }]
},
{
  "name":"org.springframework.validation.annotation.Validated",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"unwrap","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"setValidatedAnnotationType","parameterTypes":["java.lang.Class"] }, 
    {"name":"setValidator","parameterTypes":["jakarta.validation.Validator"] }, 
    {"name":"setValidatorFactory","parameterTypes":["jakarta.validation.ValidatorFactory"] }, 
    {"name":"setValidatorProvider","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.validation.beanvalidation.SpringValidatorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"forExecutables","parameterTypes":[] }, 
    {"name":"getConstraintsForClass","parameterTypes":["java.lang.Class"] }, 
    {"name":"supports","parameterTypes":["java.lang.Class"] }, 
    {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors"] }, 
    {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }, 
    {"name":"validate","parameterTypes":["java.lang.Object","java.lang.Class[]"] }, 
    {"name":"validateProperty","parameterTypes":["java.lang.Object","java.lang.String","java.lang.Class[]"] }, 
    {"name":"validateValue","parameterTypes":["java.lang.Class","java.lang.String","java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }, 
    {"name":"validateValue","parameterTypes":["java.lang.Class","java.lang.String","java.lang.Object","java.lang.Class[]"] }
  ]
},
{
  "name":"org.springframework.web.bind.annotation.ResponseBody",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.client.RestTemplate"
},
{
  "name":"org.springframework.web.context.support.GenericWebApplicationContext"
},
{
  "name":"org.springframework.web.cors.reactive.PreFlightRequestHandler",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.filter.CharacterEncodingFilter"
},
{
  "name":"org.springframework.web.filter.reactive.ServerHttpObservationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.multipart.support.StandardServletMultipartResolver"
},
{
  "name":"org.springframework.web.reactive.DispatchExceptionHandler",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.DispatcherHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.HandlerAdapter",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.HandlerMapping",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.HandlerResult"
},
{
  "name":"org.springframework.web.reactive.HandlerResultHandler",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.accept.RequestedContentTypeResolver",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"configurePathMatching","parameterTypes":["org.springframework.web.reactive.config.PathMatchConfigurer"] }, 
    {"name":"setConfigurers","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.web.reactive.config.EnableWebFlux",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.config.WebFluxConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getApplicationContext","parameterTypes":[] }, 
    {"name":"handlerFunctionAdapter","parameterTypes":[] }, 
    {"name":"requestMappingHandlerAdapter","parameterTypes":["org.springframework.core.ReactiveAdapterRegistry","org.springframework.http.codec.ServerCodecConfigurer","org.springframework.format.support.FormattingConversionService","org.springframework.validation.Validator"] }, 
    {"name":"requestMappingHandlerMapping","parameterTypes":["org.springframework.web.reactive.accept.RequestedContentTypeResolver"] }, 
    {"name":"resourceHandlerMapping","parameterTypes":["org.springframework.web.reactive.resource.ResourceUrlProvider"] }, 
    {"name":"resourceUrlProvider","parameterTypes":[] }, 
    {"name":"responseBodyResultHandler","parameterTypes":["org.springframework.core.ReactiveAdapterRegistry","org.springframework.http.codec.ServerCodecConfigurer","org.springframework.web.reactive.accept.RequestedContentTypeResolver"] }, 
    {"name":"responseEntityResultHandler","parameterTypes":["org.springframework.core.ReactiveAdapterRegistry","org.springframework.http.codec.ServerCodecConfigurer","org.springframework.web.reactive.accept.RequestedContentTypeResolver"] }, 
    {"name":"responseStatusExceptionHandler","parameterTypes":[] }, 
    {"name":"routerFunctionMapping","parameterTypes":["org.springframework.http.codec.ServerCodecConfigurer"] }, 
    {"name":"serverCodecConfigurer","parameterTypes":[] }, 
    {"name":"serverResponseResultHandler","parameterTypes":["org.springframework.http.codec.ServerCodecConfigurer"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"simpleHandlerAdapter","parameterTypes":[] }, 
    {"name":"viewResolutionResultHandler","parameterTypes":["org.springframework.core.ReactiveAdapterRegistry","org.springframework.web.reactive.accept.RequestedContentTypeResolver"] }, 
    {"name":"webFluxAdapterRegistry","parameterTypes":[] }, 
    {"name":"webFluxContentTypeResolver","parameterTypes":[] }, 
    {"name":"webFluxWebSocketHandlerAdapter","parameterTypes":[] }, 
    {"name":"webHandler","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.reactive.config.WebFluxConfigurer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"addCorsMappings","parameterTypes":["org.springframework.web.reactive.config.CorsRegistry"] }, 
    {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, 
    {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.reactive.config.ResourceHandlerRegistry"] }, 
    {"name":"configureContentTypeResolver","parameterTypes":["org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder"] }, 
    {"name":"configureHttpMessageCodecs","parameterTypes":["org.springframework.http.codec.ServerCodecConfigurer"] }, 
    {"name":"configurePathMatching","parameterTypes":["org.springframework.web.reactive.config.PathMatchConfigurer"] }, 
    {"name":"configureViewResolvers","parameterTypes":["org.springframework.web.reactive.config.ViewResolverRegistry"] }, 
    {"name":"getMessageCodesResolver","parameterTypes":[] }, 
    {"name":"getValidator","parameterTypes":[] }, 
    {"name":"getWebSocketService","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.reactive.function.client.ExchangeFilterFunction",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"andThen","parameterTypes":["org.springframework.web.reactive.function.client.ExchangeFilterFunction"] }, 
    {"name":"apply","parameterTypes":["org.springframework.web.reactive.function.client.ExchangeFunction"] }
  ]
},
{
  "name":"org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction"
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient"
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient$Builder"
},
{
  "name":"org.springframework.web.reactive.function.server.HandlerFunction",
  "methods":[{"name":"handle","parameterTypes":["org.springframework.web.reactive.function.server.ServerRequest"] }]
},
{
  "name":"org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.function.server.support.RouterFunctionMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.function.server.support.ServerResponseResultHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.handler.AbstractHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getCorsProcessor","parameterTypes":[] }, 
    {"name":"getHandler","parameterTypes":["org.springframework.web.server.ServerWebExchange"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getPathPatternParser","parameterTypes":[] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setCorsConfigurationSource","parameterTypes":["org.springframework.web.cors.reactive.CorsConfigurationSource"] }, 
    {"name":"setCorsConfigurations","parameterTypes":["java.util.Map"] }, 
    {"name":"setCorsProcessor","parameterTypes":["org.springframework.web.cors.reactive.CorsProcessor"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"setUseCaseSensitiveMatch","parameterTypes":["boolean"] }, 
    {"name":"setUseTrailingSlashMatch","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.reactive.handler.AbstractUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getHandlerInternal","parameterTypes":["org.springframework.web.server.ServerWebExchange"] }, 
    {"name":"getHandlerMap","parameterTypes":[] }, 
    {"name":"setHandlerPredicate","parameterTypes":["java.util.function.BiPredicate"] }, 
    {"name":"setLazyInitHandlers","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.reactive.handler.SimpleUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.handler.WebFluxResponseStatusExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.resource.ResourceUrlProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.result.HandlerResultHandlerSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getAdapterRegistry","parameterTypes":[] }, 
    {"name":"getContentTypeResolver","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"setOrder","parameterTypes":["int"] }
  ]
},
{
  "name":"org.springframework.web.reactive.result.SimpleHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getDirectPaths","parameterTypes":["java.lang.Object"] }, 
    {"name":"getHandlerMethods","parameterTypes":[] }, 
    {"name":"getMatchingMapping","parameterTypes":["java.lang.Object","org.springframework.web.server.ServerWebExchange"] }, 
    {"name":"handleMatch","parameterTypes":["java.lang.Object","org.springframework.web.method.HandlerMethod","org.springframework.web.server.ServerWebExchange"] }, 
    {"name":"initCorsConfiguration","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, 
    {"name":"registerHandlerMethod","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, 
    {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }, 
    {"name":"unregisterMapping","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$PreFlightAmbiguousMatchHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.result.method.HandlerMethodArgumentResolver",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.HandlerMethodArgumentResolverSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getAdapterRegistry","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getHandlerInternal","parameterTypes":["org.springframework.web.server.ServerWebExchange"] }]
},
{
  "name":"org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getMessageWriters","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getContentTypeResolver","parameterTypes":[] }, 
    {"name":"getPathPrefixes","parameterTypes":[] }, 
    {"name":"initCorsConfiguration","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, 
    {"name":"registerHandlerMethod","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, 
    {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }, 
    {"name":"registerMapping","parameterTypes":["org.springframework.web.reactive.result.method.RequestMappingInfo","java.lang.Object","java.lang.reflect.Method"] }, 
    {"name":"setContentTypeResolver","parameterTypes":["org.springframework.web.reactive.accept.RequestedContentTypeResolver"] }, 
    {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }, 
    {"name":"setPathPrefixes","parameterTypes":["java.util.Map"] }
  ]
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.ResponseEntityResultHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.result.view.RequestDataValueProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.result.view.ViewResolutionResultHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.client.ReactorNettyWebSocketClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.client.WebSocketClient",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.server.RequestUpgradeStrategy",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.server.WebSocketService",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.server.support.HandshakeWebSocketService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.server.support.WebSocketHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.server.upgrade.ReactorNettyRequestUpgradeStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.server.WebExceptionHandler",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.server.WebFilter",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.server.WebHandler",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.server.adapter.HttpWebHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.server.handler.ResponseStatusExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"handle","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.Throwable"] }, 
    {"name":"setWarnLogCategory","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.web.server.handler.WebHandlerDecorator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getDelegate","parameterTypes":[] }, 
    {"name":"handle","parameterTypes":["org.springframework.web.server.ServerWebExchange"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.server.i18n.LocaleContextResolver",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.server.session.CookieWebSessionIdResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.server.session.DefaultWebSessionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.server.session.WebSessionIdResolver",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.server.session.WebSessionManager",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet$DispatcherServlet"
},
{
  "name":"org.springframework.web.servlet.DispatcherServlet"
},
{
  "name":"org.springframework.web.servlet.config.annotation$EnableWebMvc"
},
{
  "name":"org.springframework.web.servlet.config.annotation.EnableWebMvc"
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurer"
},
{
  "name":"org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer"
},
{
  "name":"org.springframework.ws.client.core.WebServiceTemplate"
},
{
  "name":"org.springframework.ws.transport.http.MessageDispatcherServlet"
},
{
  "name":"org.synchronoss.cloud.nio.multipart$NioMultipartParser"
},
{
  "name":"org.synchronoss.cloud.nio.multipart.NioMultipartParser"
},
{
  "name":"org.thymeleaf.spring6$SpringTemplateEngine"
},
{
  "name":"org.thymeleaf.spring6.SpringTemplateEngine"
},
{
  "name":"org.webjars$WebJarAssetLocator"
},
{
  "name":"org.webjars.WebJarAssetLocator"
},
{
  "name":"org.xnio.SslClientAuthMode"
},
{
  "name":"org.yaml.snakeyaml.Yaml"
},
{
  "name":"reactor.core.publisher.BlockingSingleSubscriber"
},
{
  "name":"reactor.core.publisher.Flux"
},
{
  "name":"reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber"
},
{
  "name":"reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber"
},
{
  "name":"reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber"
},
{
  "name":"reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber"
},
{
  "name":"reactor.core.publisher.FluxPeek$PeekSubscriber"
},
{
  "name":"reactor.core.publisher.FluxPublish$PubSubInner"
},
{
  "name":"reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber"
},
{
  "name":"reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber"
},
{
  "name":"reactor.core.publisher.Mono"
},
{
  "name":"reactor.core.publisher.MonoCreate$DefaultMonoSink"
},
{
  "name":"reactor.core.publisher.MonoError"
},
{
  "name":"reactor.core.publisher.MonoErrorSupplied"
},
{
  "name":"reactor.core.publisher.MonoFlatMap$FlatMapInner"
},
{
  "name":"reactor.core.publisher.MonoFlatMap$FlatMapMain"
},
{
  "name":"reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain"
},
{
  "name":"reactor.core.publisher.MonoNext$NextSubscriber"
},
{
  "name":"reactor.core.publisher.Operators"
},
{
  "name":"reactor.core.publisher.Operators$DeferredSubscription"
},
{
  "name":"reactor.core.publisher.SerializedSubscriber"
},
{
  "name":"reactor.core.publisher.SinkManyEmitterProcessor"
},
{
  "name":"reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner"
},
{
  "name":"reactor.netty.channel.ChannelOperationsHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"reactor.netty.http.client.HttpClient",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"metrics","parameterTypes":["boolean","java.util.function.Supplier"] }, 
    {"name":"observe","parameterTypes":["reactor.netty.ConnectionObserver"] }, 
    {"name":"port","parameterTypes":["int"] }, 
    {"name":"remoteAddress","parameterTypes":["java.util.function.Supplier"] }, 
    {"name":"warmup","parameterTypes":[] }, 
    {"name":"wiretap","parameterTypes":["boolean"] }
  ]
},
{
  "name":"reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber"
},
{
  "name":"reactor.netty.http.server.HttpServer"
},
{
  "name":"reactor.netty.http.server.HttpServerResponse"
},
{
  "name":"reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower"
},
{
  "name":"reactor.netty.internal.shaded.reactor.pool.SimpleDequePool"
},
{
  "name":"reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire"
},
{
  "name":"reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer"
},
{
  "name":"reactor.netty.transport.ClientTransport",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"doAfterResolve","parameterTypes":["java.util.function.BiConsumer"] }, 
    {"name":"doOnConnect","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"doOnConnected","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"doOnDisconnected","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"doOnResolve","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"doOnResolveError","parameterTypes":["java.util.function.BiConsumer"] }, 
    {"name":"host","parameterTypes":["java.lang.String"] }, 
    {"name":"noProxy","parameterTypes":[] }, 
    {"name":"proxy","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"proxyWithSystemProperties","parameterTypes":[] }, 
    {"name":"resolver","parameterTypes":["io.netty.resolver.AddressResolverGroup"] }, 
    {"name":"resolver","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"runOn","parameterTypes":["reactor.netty.resources.LoopResources","boolean"] }
  ]
},
{
  "name":"reactor.netty.transport.Transport",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"attr","parameterTypes":["io.netty.util.AttributeKey","java.lang.Object"] }, 
    {"name":"bindAddress","parameterTypes":["java.util.function.Supplier"] }, 
    {"name":"channelGroup","parameterTypes":["io.netty.channel.group.ChannelGroup"] }, 
    {"name":"configuration","parameterTypes":[] }, 
    {"name":"doOnChannelInit","parameterTypes":["reactor.netty.ChannelPipelineConfigurer"] }, 
    {"name":"option","parameterTypes":["io.netty.channel.ChannelOption","java.lang.Object"] }, 
    {"name":"runOn","parameterTypes":["io.netty.channel.EventLoopGroup"] }, 
    {"name":"runOn","parameterTypes":["reactor.netty.resources.LoopResources"] }, 
    {"name":"wiretap","parameterTypes":["java.lang.String"] }, 
    {"name":"wiretap","parameterTypes":["java.lang.String","io.netty.handler.logging.LogLevel"] }, 
    {"name":"wiretap","parameterTypes":["java.lang.String","io.netty.handler.logging.LogLevel","reactor.netty.transport.logging.AdvancedByteBufFormat"] }, 
    {"name":"wiretap","parameterTypes":["java.lang.String","io.netty.handler.logging.LogLevel","reactor.netty.transport.logging.AdvancedByteBufFormat","java.nio.charset.Charset"] }
  ]
},
{
  "name":"reactor.netty.transport.TransportConfig$TransportChannelInitializer"
},
{
  "name":"reactor.netty.transport.TransportConnector"
},
{
  "name":"reactor.netty.transport.TransportConnector$MonoChannelPromise"
},
{
  "name":"reactor.netty5.http.client$HttpClient"
},
{
  "name":"reactor.netty5.http.client.HttpClient"
},
{
  "name":"reactor.netty5.http.server$HttpServerResponse"
},
{
  "name":"reactor.netty5.http.server.HttpServerResponse"
},
{
  "name":"reactor.tools.agent$ReactorDebugAgent"
},
{
  "name":"reactor.tools.agent.ReactorDebugAgent"
},
{
  "name":"reactor.util.retry.RetrySpec"
},
{
  "name":"redis.clients.jedis.Jedis"
},
{
  "name":"redis.clients.jedis.JedisPool",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ClassLoadingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.CompilationImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$1",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryManagerImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryPoolImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.RuntimeImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods":[
    {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, 
    {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, 
    {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, 
    {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }, 
    {"name":"storeFence","parameterTypes":[] }
  ]
},
{
  "name":"sun.misc.VM"
},
{
  "name":"sun.nio.ch.Net"
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[
    {"name":"publicSelectedKeys"}, 
    {"name":"selectedKeys"}
  ]
},
{
  "name":"sun.nio.ch.SocketChannelImpl"
},
{
  "name":"sun.security.provider.ConfigFile",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DRBG",
  "methods":[{"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA256withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"zipkin2.Call$Base"
},
{
  "name":"zipkin2.Component",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"zipkin2.codec.BytesEncoder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"zipkin2.codec.SpanBytesEncoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"valueOf","parameterTypes":["java.lang.String"] }, 
    {"name":"values","parameterTypes":[] }
  ]
},
{
  "name":"zipkin2.codec.SpanBytesEncoder$3",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"encode","parameterTypes":["java.lang.Object"] }, 
    {"name":"encodeList","parameterTypes":["java.util.List"] }, 
    {"name":"encodeList","parameterTypes":["java.util.List","byte[]","int"] }, 
    {"name":"encoding","parameterTypes":[] }, 
    {"name":"sizeInBytes","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"zipkin2.reporter.AsyncReporter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"builder","parameterTypes":["zipkin2.reporter.Sender"] }, 
    {"name":"create","parameterTypes":["zipkin2.reporter.Sender"] }
  ]
},
{
  "name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"check","parameterTypes":[] }, 
    {"name":"close","parameterTypes":[] }, 
    {"name":"flush","parameterTypes":[] }, 
    {"name":"report","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"zipkin2.reporter.AsyncReporter$Flusher"
},
{
  "name":"zipkin2.reporter.Reporter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"zipkin2.reporter.Sender",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"zipkin2.reporter.brave.ConvertingZipkinSpanHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"toBuilder","parameterTypes":[] }]
},
{
  "name":"zipkin2.reporter.brave.ZipkinSpanHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"create","parameterTypes":["zipkin2.reporter.Reporter"] }, 
    {"name":"end","parameterTypes":["brave.propagation.TraceContext","brave.handler.MutableSpan","brave.handler.SpanHandler$Cause"] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"newBuilder","parameterTypes":["zipkin2.reporter.Reporter"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"zipkin2.reporter.urlconnection.URLConnectionSender"
}
]
