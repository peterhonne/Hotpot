[
{
  "name":"[B"
},
{
  "name":"[C"
},
{
  "name":"[D"
},
{
  "name":"[F"
},
{
  "name":"[I"
},
{
  "name":"[J"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Lio.micrometer.core.instrument.distribution.TimeWindowFixedBoundaryHistogram$FixedBoundaryHistogram;"
},
{
  "name":"[Ljava.io.Serializable;"
},
{
  "name":"[Ljava.lang.CharSequence;"
},
{
  "name":"[Ljava.lang.Class;",
  "queryAllDeclaredMethods":true
},
{
  "name":"[Ljava.lang.Comparable;"
},
{
  "name":"[Ljava.lang.Object;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljava.lang.constant.Constable;"
},
{
  "name":"[Ljava.lang.constant.ConstantDesc;"
},
{
  "name":"[Ljava.lang.invoke.TypeDescriptor$OfField;"
},
{
  "name":"[Ljava.lang.invoke.TypeDescriptor;"
},
{
  "name":"[Ljava.lang.reflect.AnnotatedElement;"
},
{
  "name":"[Ljava.lang.reflect.GenericDeclaration;"
},
{
  "name":"[Ljava.lang.reflect.Type;"
},
{
  "name":"[Ljavax.management.openmbean.CompositeData;"
},
{
  "name":"[Lorg.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure;"
},
{
  "name":"[Lorg.springframework.boot.context.config.ConfigDataLocation;"
},
{
  "name":"[Lorg.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider;"
},
{
  "name":"[Lorg.springframework.core.annotation.AnnotationAttributes;"
},
{
  "name":"[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
},
{
  "name":"[Lorg.springframework.web.bind.annotation.RequestMethod;"
},
{
  "name":"[S"
},
{
  "name":"[Z"
},
{
  "name":"boolean",
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.CurrentSpanCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"annotate","parameterTypes":["java.lang.String"] }, 
    {"name":"name","parameterTypes":["java.lang.String"] }, 
    {"name":"tag","parameterTypes":["java.lang.String","java.lang.String"] }
  ]
},
{
  "name":"brave.SpanCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"brave.Tracer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.Tracing",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"clock","parameterTypes":["brave.propagation.TraceContext"] }, 
    {"name":"current","parameterTypes":[] }, 
    {"name":"currentTracer","parameterTypes":[] }, 
    {"name":"newBuilder","parameterTypes":[] }
  ]
},
{
  "name":"brave.Tracing$Default",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"currentTraceContext","parameterTypes":[] }, 
    {"name":"errorParser","parameterTypes":[] }, 
    {"name":"isNoop","parameterTypes":[] }, 
    {"name":"propagation","parameterTypes":[] }, 
    {"name":"propagationFactory","parameterTypes":[] }, 
    {"name":"sampler","parameterTypes":[] }, 
    {"name":"setNoop","parameterTypes":["boolean"] }, 
    {"name":"tracer","parameterTypes":[] }
  ]
},
{
  "name":"brave.baggage.BaggagePropagation$FactoryBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.baggage.BaggagePropagationCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"brave.baggage.CorrelationScopeCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"brave.baggage.CorrelationScopeDecorator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.baggage.CorrelationScopeDecorator$Builder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"add","parameterTypes":["brave.baggage.CorrelationScopeConfig"] }, 
    {"name":"build","parameterTypes":[] }, 
    {"name":"clear","parameterTypes":[] }, 
    {"name":"configs","parameterTypes":[] }
  ]
},
{
  "name":"brave.baggage.CorrelationScopeDecorator$Multiple",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"decorateScope","parameterTypes":["brave.propagation.TraceContext","brave.propagation.CurrentTraceContext$Scope"] }]
},
{
  "name":"brave.context.slf4j.MDCScopeDecorator$Builder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.handler.SpanHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"begin","parameterTypes":["brave.propagation.TraceContext","brave.handler.MutableSpan","brave.propagation.TraceContext"] }, 
    {"name":"handlesAbandoned","parameterTypes":[] }
  ]
},
{
  "name":"brave.internal.Nullable",
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.propagation.CurrentTraceContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"executor","parameterTypes":["java.util.concurrent.Executor"] }, 
    {"name":"executorService","parameterTypes":["java.util.concurrent.ExecutorService"] }, 
    {"name":"maybeScope","parameterTypes":["brave.propagation.TraceContext"] }, 
    {"name":"wrap","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"wrap","parameterTypes":["java.util.concurrent.Callable"] }
  ]
},
{
  "name":"brave.propagation.CurrentTraceContext$ScopeDecorator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"brave.propagation.Propagation",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"brave.propagation.Propagation$Factory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"decorate","parameterTypes":["brave.propagation.TraceContext"] }, 
    {"name":"get","parameterTypes":[] }, 
    {"name":"requires128BitTraceId","parameterTypes":[] }, 
    {"name":"supportsJoin","parameterTypes":[] }
  ]
},
{
  "name":"brave.propagation.ThreadLocalCurrentTraceContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"get","parameterTypes":[] }, 
    {"name":"newScope","parameterTypes":["brave.propagation.TraceContext"] }
  ]
},
{
  "name":"brave.sampler.CountingSampler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"create","parameterTypes":["float"] }, 
    {"name":"isSampled","parameterTypes":["long"] }
  ]
},
{
  "name":"brave.sampler.Sampler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"ch.qos.logback.classic.LoggerContext"
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MDCConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"co.elastic.clients.elasticsearch.ElasticsearchClient"
},
{
  "name":"co.elastic.clients.transport.ElasticsearchTransport"
},
{
  "name":"com.couchbase.client.java.Bucket"
},
{
  "name":"com.couchbase.client.java.Cluster"
},
{
  "name":"com.datastax.oss.driver.api.core.CqlSession"
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator"
},
{
  "name":"com.fasterxml.jackson.core.ObjectCodec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getJsonFactory","parameterTypes":[] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }
  ]
},
{
  "name":"com.fasterxml.jackson.core.TreeCodec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.core.Versioned",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.Module",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getDependencies","parameterTypes":[] }, 
    {"name":"getTypeId","parameterTypes":[] }
  ]
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"createArrayNode","parameterTypes":[] }, 
    {"name":"createObjectNode","parameterTypes":[] }, 
    {"name":"getFactory","parameterTypes":[] }, 
    {"name":"missingNode","parameterTypes":[] }, 
    {"name":"nullNode","parameterTypes":[] }, 
    {"name":"readTree","parameterTypes":["com.fasterxml.jackson.core.JsonParser"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, 
    {"name":"treeAsTokens","parameterTypes":["com.fasterxml.jackson.core.TreeNode"] }, 
    {"name":"treeToValue","parameterTypes":["com.fasterxml.jackson.core.TreeNode","java.lang.Class"] }, 
    {"name":"version","parameterTypes":[] }, 
    {"name":"writeTree","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","com.fasterxml.jackson.core.TreeNode"] }, 
    {"name":"writeValue","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","java.lang.Object"] }
  ]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addAbstractTypeMapping","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"addDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonDeserializer"] }, 
    {"name":"addKeyDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.KeyDeserializer"] }, 
    {"name":"addKeySerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addSerializer","parameterTypes":["com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addSerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addValueInstantiator","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.deser.ValueInstantiator"] }, 
    {"name":"getModuleName","parameterTypes":[] }, 
    {"name":"getTypeId","parameterTypes":[] }, 
    {"name":"registerSubtypes","parameterTypes":["java.util.Collection"] }, 
    {"name":"registerSubtypes","parameterTypes":["com.fasterxml.jackson.databind.jsontype.NamedType[]"] }, 
    {"name":"registerSubtypes","parameterTypes":["java.lang.Class[]"] }, 
    {"name":"setAbstractTypes","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"] }, 
    {"name":"setDeserializerModifier","parameterTypes":["com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"] }, 
    {"name":"setDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleDeserializers"] }, 
    {"name":"setKeyDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"] }, 
    {"name":"setKeySerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, 
    {"name":"setMixInAnnotation","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"setSerializerModifier","parameterTypes":["com.fasterxml.jackson.databind.ser.BeanSerializerModifier"] }, 
    {"name":"setSerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, 
    {"name":"setValueInstantiators","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleValueInstantiators"] }, 
    {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, 
    {"name":"version","parameterTypes":[] }
  ]
},
{
  "name":"com.fasterxml.jackson.dataformat.cbor$CBORFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.cbor.CBORFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.smile$SmileFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.smile.SmileFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.xml$XmlMapper"
},
{
  "name":"com.fasterxml.jackson.dataformat.xml.XmlMapper"
},
{
  "name":"com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.Cache"
},
{
  "name":"com.github.benmanes.caffeine.cache.Caffeine"
},
{
  "name":"com.google.common.base.Optional"
},
{
  "name":"com.google.gson.Gson",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.gson.GsonBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.core.Hazelcast"
},
{
  "name":"com.hazelcast.core.HazelcastInstance"
},
{
  "name":"com.hazelcast.spring.cache.HazelcastCache"
},
{
  "name":"com.hotpot.AuthApplication",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"main","parameterTypes":["java.lang.String[]"] }
  ]
},
{
  "name":"com.hotpot.AuthApplication$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }
  ]
},
{
  "name":"com.hotpot.auth.config.AuthorizationServerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authorizationServerSecurityFilterChain","parameterTypes":["org.springframework.security.config.annotation.web.builders.HttpSecurity"] }, 
    {"name":"authorizationServerSettings","parameterTypes":[] }, 
    {"name":"defaultSecurityFilterChain","parameterTypes":["org.springframework.security.config.annotation.web.builders.HttpSecurity"] }, 
    {"name":"oauth2UserService","parameterTypes":[] }, 
    {"name":"oidcUserService","parameterTypes":[] }, 
    {"name":"tokenCustomizer","parameterTypes":[] }
  ]
},
{
  "name":"com.hotpot.auth.config.AuthorizationServerConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"authorizationServerSecurityFilterChain","parameterTypes":["org.springframework.security.config.annotation.web.builders.HttpSecurity"] }, 
    {"name":"authorizationServerSettings","parameterTypes":[] }, 
    {"name":"defaultSecurityFilterChain","parameterTypes":["org.springframework.security.config.annotation.web.builders.HttpSecurity"] }, 
    {"name":"tokenCustomizer","parameterTypes":[] }
  ]
},
{
  "name":"com.hotpot.auth.config.AuthorizationServerConfig$$SpringCGLIB$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.hotpot.auth.config.AuthorizationServerConfig$$SpringCGLIB$$2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.hotpot.auth.config.FeignClientConfig",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"requestInterceptor","parameterTypes":[] }
  ]
},
{
  "name":"com.hotpot.auth.config.FeignClientConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"requestInterceptor","parameterTypes":[] }
  ]
},
{
  "name":"com.hotpot.auth.config.FeignClientConfig$$SpringCGLIB$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.hotpot.auth.config.FeignClientConfig$$SpringCGLIB$$2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.hotpot.auth.config.JWKSourceConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"jwkSource","parameterTypes":[] }, 
    {"name":"jwtDecoder","parameterTypes":["com.nimbusds.jose.jwk.source.JWKSource"] }
  ]
},
{
  "name":"com.hotpot.auth.config.JWKSourceConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"jwkSource","parameterTypes":[] }, 
    {"name":"jwtDecoder","parameterTypes":["com.nimbusds.jose.jwk.source.JWKSource"] }
  ]
},
{
  "name":"com.hotpot.auth.config.JWKSourceConfig$$SpringCGLIB$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.hotpot.auth.config.JWKSourceConfig$$SpringCGLIB$$2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.hotpot.auth.config.LoadBalanceAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"randomLoadBalancer","parameterTypes":["org.springframework.core.env.Environment","org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"] }
  ]
},
{
  "name":"com.hotpot.auth.config.RegisteredClientConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"registeredClientRepository","parameterTypes":[] }
  ]
},
{
  "name":"com.hotpot.auth.config.RegisteredClientConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"registeredClientRepository","parameterTypes":[] }
  ]
},
{
  "name":"com.hotpot.auth.config.RegisteredClientConfig$$SpringCGLIB$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.hotpot.auth.config.RegisteredClientConfig$$SpringCGLIB$$2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.hotpot.auth.feign.UserServiceApi",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.hotpot.auth.interceptor.FeignOauth2TokenInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"apply","parameterTypes":["feign.RequestTemplate"] }]
},
{
  "name":"com.hotpot.auth.service.AuthorityService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hotpot.auth.service.CustomOauth2UserService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loadUser","parameterTypes":["org.springframework.security.oauth2.client.userinfo.OAuth2UserRequest"] }
  ]
},
{
  "name":"com.hotpot.auth.service.CustomOidcUserService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loadUser","parameterTypes":["org.springframework.security.oauth2.client.userinfo.OAuth2UserRequest"] }
  ]
},
{
  "name":"com.hotpot.auth.service.UserDetailService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loadUserByUsername","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"com.hotpot.common.config.ObservationConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"actuatorServerContextPredicate","parameterTypes":[] }
  ]
},
{
  "name":"com.hotpot.common.config.ObservationConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, 
    {"name":"actuatorServerContextPredicate","parameterTypes":[] }
  ]
},
{
  "name":"com.hotpot.common.config.ObservationConfig$$SpringCGLIB$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.hotpot.common.config.ObservationConfig$$SpringCGLIB$$2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.hotpot.common.entity.BaseUser"
},
{
  "name":"com.hotpot.common.entity.SysUser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setAvatar","parameterTypes":["java.lang.String"] }, 
    {"name":"setDelFlag","parameterTypes":["java.lang.Boolean"] }, 
    {"name":"setEmail","parameterTypes":["java.lang.String"] }, 
    {"name":"setId","parameterTypes":["java.lang.Integer"] }, 
    {"name":"setLockFlag","parameterTypes":["java.lang.Boolean"] }, 
    {"name":"setName","parameterTypes":["java.lang.String"] }, 
    {"name":"setPassword","parameterTypes":["java.lang.String"] }, 
    {"name":"setPhone","parameterTypes":["java.lang.String"] }, 
    {"name":"setQqOpenid","parameterTypes":["java.lang.String"] }, 
    {"name":"setRole","parameterTypes":["java.util.List"] }, 
    {"name":"setSalt","parameterTypes":["java.lang.String"] }, 
    {"name":"setUsername","parameterTypes":["java.lang.String"] }, 
    {"name":"setWxOpenid","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"com.hotpot.common.entity.UserInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setAuthorities","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setRoles","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setSysUser","parameterTypes":["com.hotpot.common.entity.SysUser"] }
  ]
},
{
  "name":"com.ibm.lang.management.OperatingSystemMXBean"
},
{
  "name":"com.jayway.jsonpath$DocumentContext"
},
{
  "name":"com.jayway.jsonpath.DocumentContext"
},
{
  "name":"com.mongodb.MongoClientSettings"
},
{
  "name":"com.mongodb.client.MongoClient"
},
{
  "name":"com.mongodb.reactivestreams.client.MongoClient"
},
{
  "name":"com.mysql.cj.jdbc.AbandonedConnectionCleanupThread"
},
{
  "name":"com.mysql.cj.jdbc.Driver"
},
{
  "name":"com.nimbusds.jose.jwk.source.ImmutableJWKSet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"get","parameterTypes":["com.nimbusds.jose.jwk.JWKSelector","com.nimbusds.jose.proc.SecurityContext"] }]
},
{
  "name":"com.nimbusds.jose.jwk.source.JWKSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.querydsl.core.types$Predicate"
},
{
  "name":"com.querydsl.core.types.Predicate"
},
{
  "name":"com.rabbitmq.client.Channel"
},
{
  "name":"com.rabbitmq.client.ConnectionFactory"
},
{
  "name":"com.rometools.rome.feed$WireFeed"
},
{
  "name":"com.rometools.rome.feed.WireFeed"
},
{
  "name":"com.samskivert.mustache$Template"
},
{
  "name":"com.samskivert.mustache.Mustache"
},
{
  "name":"com.samskivert.mustache.Template"
},
{
  "name":"com.sendgrid.SendGrid"
},
{
  "name":"com.stoyanr.evictor.ConcurrentMapWithTimedEviction"
},
{
  "name":"com.sun.crypto.provider.PBKDF2Core$HmacSHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.management.GarbageCollectionNotificationInfo"
},
{
  "name":"com.sun.management.GarbageCollectorMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.GcInfo",
  "queryAllPublicMethods":true,
  "fields":[
    {"name":"builder"}, 
    {"name":"extAttributes"}
  ],
  "methods":[{"name":"getMemoryUsageBeforeGc","parameterTypes":[] }]
},
{
  "name":"com.sun.management.HotSpotDiagnosticMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.OperatingSystemMXBean",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getCpuLoad","parameterTypes":[] }, 
    {"name":"getProcessCpuLoad","parameterTypes":[] }
  ]
},
{
  "name":"com.sun.management.ThreadMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.UnixOperatingSystemMXBean"
},
{
  "name":"com.sun.management.VMOption",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.internal.GarbageCollectorExtImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotDiagnostic",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotThreadImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.OperatingSystemImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.unboundid.ldap.listener.InMemoryDirectoryServer"
},
{
  "name":"com.wavefront.sdk.common.WavefrontSender"
},
{
  "name":"com.wavefront.sdk.common.application.ApplicationTags"
},
{
  "name":"com.zaxxer.hikari.HikariDataSource"
},
{
  "name":"feign.BaseBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"dismiss404","parameterTypes":[] }, 
    {"name":"responseInterceptor","parameterTypes":["feign.ResponseInterceptor"] }
  ]
},
{
  "name":"feign.Capability",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"enrich","parameterTypes":["feign.AsyncContextSupplier"] }, 
    {"name":"enrich","parameterTypes":["feign.AsyncResponseHandler"] }, 
    {"name":"enrich","parameterTypes":["feign.Contract"] }, 
    {"name":"enrich","parameterTypes":["feign.InvocationHandlerFactory"] }, 
    {"name":"enrich","parameterTypes":["feign.Logger$Level"] }, 
    {"name":"enrich","parameterTypes":["feign.Logger"] }, 
    {"name":"enrich","parameterTypes":["feign.MethodInfoResolver"] }, 
    {"name":"enrich","parameterTypes":["feign.QueryMapEncoder"] }, 
    {"name":"enrich","parameterTypes":["feign.Request$Options"] }, 
    {"name":"enrich","parameterTypes":["feign.RequestInterceptor"] }, 
    {"name":"enrich","parameterTypes":["feign.ResponseInterceptor"] }, 
    {"name":"enrich","parameterTypes":["feign.Retryer"] }, 
    {"name":"enrich","parameterTypes":["feign.codec.Decoder"] }, 
    {"name":"enrich","parameterTypes":["feign.codec.Encoder"] }, 
    {"name":"enrich","parameterTypes":["feign.codec.ErrorDecoder"] }
  ]
},
{
  "name":"feign.Client",
  "queryAllPublicMethods":true
},
{
  "name":"feign.Contract",
  "queryAllPublicMethods":true
},
{
  "name":"feign.Contract$BaseContract",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"parseAndValidateMetadata","parameterTypes":["java.lang.Class"] }, 
    {"name":"parseAndValidateMetadata","parameterTypes":["java.lang.reflect.Method"] }
  ]
},
{
  "name":"feign.Feign"
},
{
  "name":"feign.Feign$Builder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addCapability","parameterTypes":["feign.Capability"] }, 
    {"name":"contract","parameterTypes":["feign.Contract"] }, 
    {"name":"decode404","parameterTypes":[] }, 
    {"name":"decoder","parameterTypes":["feign.codec.Decoder"] }, 
    {"name":"doNotCloseAfterDecode","parameterTypes":[] }, 
    {"name":"encoder","parameterTypes":["feign.codec.Encoder"] }, 
    {"name":"errorDecoder","parameterTypes":["feign.codec.ErrorDecoder"] }, 
    {"name":"exceptionPropagationPolicy","parameterTypes":["feign.ExceptionPropagationPolicy"] }, 
    {"name":"invocationHandlerFactory","parameterTypes":["feign.InvocationHandlerFactory"] }, 
    {"name":"logLevel","parameterTypes":["feign.Logger$Level"] }, 
    {"name":"logger","parameterTypes":["feign.Logger"] }, 
    {"name":"mapAndDecode","parameterTypes":["feign.ResponseMapper","feign.codec.Decoder"] }, 
    {"name":"options","parameterTypes":["feign.Request$Options"] }, 
    {"name":"queryMapEncoder","parameterTypes":["feign.QueryMapEncoder"] }, 
    {"name":"requestInterceptor","parameterTypes":["feign.RequestInterceptor"] }, 
    {"name":"requestInterceptors","parameterTypes":["java.lang.Iterable"] }, 
    {"name":"retryer","parameterTypes":["feign.Retryer"] }
  ]
},
{
  "name":"feign.QueryMapEncoder",
  "queryAllPublicMethods":true
},
{
  "name":"feign.RequestInterceptor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"feign.Retryer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"feign.Retryer$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"clone","parameterTypes":[] }, 
    {"name":"continueOrPropagate","parameterTypes":["feign.RetryableException"] }
  ]
},
{
  "name":"feign.codec.Decoder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"feign.codec.Encoder",
  "queryAllPublicMethods":true
},
{
  "name":"feign.hc5.ApacheHttp5Client"
},
{
  "name":"feign.micrometer.MicrometerCapability"
},
{
  "name":"feign.micrometer.MicrometerObservationCapability",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"enrich","parameterTypes":["feign.AsyncClient"] }, 
    {"name":"enrich","parameterTypes":["feign.Client"] }
  ]
},
{
  "name":"feign.okhttp.OkHttpClient"
},
{
  "name":"feign.optionals.OptionalDecoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"decode","parameterTypes":["feign.Response","java.lang.reflect.Type"] }]
},
{
  "name":"feign.querymap.BeanQueryMapEncoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"freemarker.template$Configuration"
},
{
  "name":"freemarker.template.Configuration"
},
{
  "name":"graphql.GraphQL"
},
{
  "name":"groovy.lang$MetaClass"
},
{
  "name":"groovy.lang.MetaClass"
},
{
  "name":"groovy.text$TemplateEngine"
},
{
  "name":"groovy.text.TemplateEngine"
},
{
  "name":"groovy.text.markup.MarkupTemplateEngine"
},
{
  "name":"io.lettuce.core.RedisClient"
},
{
  "name":"io.lettuce.core.metrics.MicrometerCommandLatencyRecorder"
},
{
  "name":"io.micrometer.appoptics.AppOpticsMeterRegistry"
},
{
  "name":"io.micrometer.atlas.AtlasMeterRegistry"
},
{
  "name":"io.micrometer.common.lang.NonNull",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.common.lang.NonNullApi",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.common.lang.NonNullFields",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.common.lang.Nullable",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.context.ContextSnapshot"
},
{
  "name":"io.micrometer.core.annotation.Timed"
},
{
  "name":"io.micrometer.core.instrument.Clock",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.Clock$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"monotonicTime","parameterTypes":[] }, 
    {"name":"wallTime","parameterTypes":[] }
  ]
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"clear","parameterTypes":[] }, 
    {"name":"close","parameterTypes":[] }, 
    {"name":"config","parameterTypes":[] }, 
    {"name":"counter","parameterTypes":["java.lang.String","java.lang.Iterable"] }, 
    {"name":"counter","parameterTypes":["java.lang.String","java.lang.String[]"] }, 
    {"name":"find","parameterTypes":["java.lang.String"] }, 
    {"name":"forEachMeter","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Number"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Object","java.util.function.ToDoubleFunction"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Number"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Object","java.util.function.ToDoubleFunction"] }, 
    {"name":"gaugeCollectionSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Collection"] }, 
    {"name":"gaugeMapSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Map"] }, 
    {"name":"get","parameterTypes":["java.lang.String"] }, 
    {"name":"getMeters","parameterTypes":[] }, 
    {"name":"isClosed","parameterTypes":[] }, 
    {"name":"more","parameterTypes":[] }, 
    {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter"] }, 
    {"name":"removeByPreFilterId","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"summary","parameterTypes":["java.lang.String","java.lang.Iterable"] }, 
    {"name":"summary","parameterTypes":["java.lang.String","java.lang.String[]"] }, 
    {"name":"timer","parameterTypes":["java.lang.String","java.lang.Iterable"] }, 
    {"name":"timer","parameterTypes":["java.lang.String","java.lang.String[]"] }
  ]
},
{
  "name":"io.micrometer.core.instrument.binder.MeterBinder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.jersey.server.MetricsApplicationEventListener"
},
{
  "name":"io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, 
    {"name":"close","parameterTypes":[] }
  ]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, 
    {"name":"close","parameterTypes":[] }
  ]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.logging.Log4j2Metrics"
},
{
  "name":"io.micrometer.core.instrument.binder.logging.LogbackMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, 
    {"name":"close","parameterTypes":[] }
  ]
},
{
  "name":"io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.ProcessorMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.UptimeMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"
},
{
  "name":"io.micrometer.core.instrument.composite.CompositeMeterRegistry"
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"map","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }]
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter$9",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] }
  ]
},
{
  "name":"io.micrometer.core.instrument.config.MeterRegistryConfig",
  "methods":[{"name":"requireValid","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.observation.MeterObservationHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.datadog.DatadogMeterRegistry"
},
{
  "name":"io.micrometer.dynatrace.DynatraceMeterRegistry"
},
{
  "name":"io.micrometer.elastic.ElasticMeterRegistry"
},
{
  "name":"io.micrometer.ganglia.GangliaMeterRegistry"
},
{
  "name":"io.micrometer.graphite.GraphiteMeterRegistry"
},
{
  "name":"io.micrometer.humio.HumioMeterRegistry"
},
{
  "name":"io.micrometer.influx.InfluxMeterRegistry"
},
{
  "name":"io.micrometer.jmx.JmxMeterRegistry"
},
{
  "name":"io.micrometer.kairos.KairosMeterRegistry"
},
{
  "name":"io.micrometer.newrelic.NewRelicMeterRegistry"
},
{
  "name":"io.micrometer.observation.Observation"
},
{
  "name":"io.micrometer.observation.ObservationHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }
  ]
},
{
  "name":"io.micrometer.observation.ObservationPredicate",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.observation.ObservationRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.observation.SimpleObservationRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getCurrentObservation","parameterTypes":[] }, 
    {"name":"getCurrentObservationScope","parameterTypes":[] }, 
    {"name":"isNoop","parameterTypes":[] }, 
    {"name":"observationConfig","parameterTypes":[] }, 
    {"name":"setCurrentObservationScope","parameterTypes":["io.micrometer.observation.Observation$Scope"] }
  ]
},
{
  "name":"io.micrometer.prometheus.PrometheusConfig",
  "queryAllPublicMethods":true,
  "methods":[{"name":"validate","parameterTypes":[] }]
},
{
  "name":"io.micrometer.prometheus.PrometheusMeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.registry.otlp.OtlpMeterRegistry"
},
{
  "name":"io.micrometer.signalfx.SignalFxMeterRegistry"
},
{
  "name":"io.micrometer.stackdriver.StackdriverMeterRegistry"
},
{
  "name":"io.micrometer.statsd.StatsdMeterRegistry"
},
{
  "name":"io.micrometer.tracing.BaggageManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.tracing.SpanCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.tracing.Tracer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.tracing.brave.bridge.BravePropagator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"extract","parameterTypes":["java.lang.Object","io.micrometer.tracing.propagation.Propagator$Getter"] }, 
    {"name":"fields","parameterTypes":[] }, 
    {"name":"inject","parameterTypes":["io.micrometer.tracing.TraceContext","java.lang.Object","io.micrometer.tracing.propagation.Propagator$Setter"] }
  ]
},
{
  "name":"io.micrometer.tracing.brave.bridge.BraveSpanCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"event","parameterTypes":["java.lang.String"] }, 
    {"name":"name","parameterTypes":["java.lang.String"] }, 
    {"name":"tag","parameterTypes":["java.lang.String","java.lang.String"] }
  ]
},
{
  "name":"io.micrometer.tracing.brave.bridge.BraveTracer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"createBaggage","parameterTypes":["java.lang.String"] }, 
    {"name":"createBaggage","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"currentSpan","parameterTypes":[] }, 
    {"name":"currentSpanCustomizer","parameterTypes":[] }, 
    {"name":"currentTraceContext","parameterTypes":[] }, 
    {"name":"getAllBaggage","parameterTypes":[] }, 
    {"name":"getBaggage","parameterTypes":["io.micrometer.tracing.TraceContext","java.lang.String"] }, 
    {"name":"getBaggage","parameterTypes":["java.lang.String"] }, 
    {"name":"nextSpan","parameterTypes":[] }, 
    {"name":"nextSpan","parameterTypes":["io.micrometer.tracing.Span"] }, 
    {"name":"spanBuilder","parameterTypes":[] }, 
    {"name":"startScopedSpan","parameterTypes":["java.lang.String"] }, 
    {"name":"traceContextBuilder","parameterTypes":[] }, 
    {"name":"withSpan","parameterTypes":["io.micrometer.tracing.Span"] }
  ]
},
{
  "name":"io.micrometer.tracing.brave.bridge.CompositeSpanHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"end","parameterTypes":["brave.propagation.TraceContext","brave.handler.MutableSpan","brave.handler.SpanHandler$Cause"] }]
},
{
  "name":"io.micrometer.tracing.brave.bridge.W3CPropagation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"create","parameterTypes":["brave.propagation.Propagation$KeyFactory"] }, 
    {"name":"extractor","parameterTypes":["brave.propagation.Propagation$Getter"] }, 
    {"name":"injector","parameterTypes":["brave.propagation.Propagation$Setter"] }, 
    {"name":"keys","parameterTypes":[] }
  ]
},
{
  "name":"io.micrometer.tracing.handler.DefaultTracingObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getTracer","parameterTypes":[] }, 
    {"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }
  ]
},
{
  "name":"io.micrometer.tracing.handler.PropagatingReceiverTracingObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getTracer","parameterTypes":[] }, 
    {"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }
  ]
},
{
  "name":"io.micrometer.tracing.handler.PropagatingSenderTracingObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getTracer","parameterTypes":[] }, 
    {"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }
  ]
},
{
  "name":"io.micrometer.tracing.handler.TracingAwareMeterObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onEvent","parameterTypes":["io.micrometer.observation.Observation$Event","io.micrometer.observation.Observation$Context"] }, 
    {"name":"onScopeClosed","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onScopeOpened","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }
  ]
},
{
  "name":"io.micrometer.tracing.handler.TracingObservationHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getParentSpan","parameterTypes":["io.micrometer.observation.Observation$ContextView"] }, 
    {"name":"getRequiredSpan","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"getSpanName","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"getTracingContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onEvent","parameterTypes":["io.micrometer.observation.Observation$Event","io.micrometer.observation.Observation$Context"] }, 
    {"name":"onScopeClosed","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"onScopeOpened","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }, 
    {"name":"tagSpan","parameterTypes":["io.micrometer.observation.Observation$Context","io.micrometer.tracing.Span"] }
  ]
},
{
  "name":"io.micrometer.tracing.otel.bridge.OtelTracer"
},
{
  "name":"io.micrometer.tracing.propagation.Propagator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.netty.buffer.PooledByteBufAllocator"
},
{
  "name":"io.netty.util.NettyRuntime"
},
{
  "name":"io.opentelemetry.exporter.zipkin.ZipkinSpanExporter"
},
{
  "name":"io.prometheus.client.CollectorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.prometheus.client.exemplars.CounterExemplarSampler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.prometheus.client.exemplars.DefaultExemplarSampler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"sample","parameterTypes":["double","double","double","io.prometheus.client.exemplars.Exemplar"] }, 
    {"name":"sample","parameterTypes":["double","io.prometheus.client.exemplars.Exemplar"] }
  ]
},
{
  "name":"io.prometheus.client.exemplars.ExemplarSampler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.prometheus.client.exemplars.HistogramExemplarSampler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.prometheus.client.exemplars.tracer.common.SpanContextSupplier",
  "queryAllPublicMethods":true
},
{
  "name":"io.prometheus.client.exporter.PushGateway"
},
{
  "name":"io.r2dbc.pool.ConnectionPool"
},
{
  "name":"io.r2dbc.spi.ConnectionFactory"
},
{
  "name":"io.reactivex.rxjava3.core$Flowable"
},
{
  "name":"io.reactivex.rxjava3.core.Flowable"
},
{
  "name":"io.rsocket.RSocket"
},
{
  "name":"io.rsocket.core.RSocketServer"
},
{
  "name":"io.smallrye.mutiny$Multi"
},
{
  "name":"io.smallrye.mutiny.Multi"
},
{
  "name":"io.undertow.Undertow"
},
{
  "name":"io.undertow.websockets.jsr.Bootstrap"
},
{
  "name":"io.vavr.control$Option"
},
{
  "name":"io.vavr.control.Option"
},
{
  "name":"jakarta.activation.MimeType"
},
{
  "name":"jakarta.annotation.ManagedBean"
},
{
  "name":"jakarta.annotation.PostConstruct",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.annotation.PreDestroy",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.ejb$EJB"
},
{
  "name":"jakarta.ejb.EJB"
},
{
  "name":"jakarta.faces.context$FacesContext"
},
{
  "name":"jakarta.faces.context.FacesContext"
},
{
  "name":"jakarta.inject$Inject"
},
{
  "name":"jakarta.inject$Named"
},
{
  "name":"jakarta.inject$Provider"
},
{
  "name":"jakarta.inject$Qualifier"
},
{
  "name":"jakarta.inject.Inject"
},
{
  "name":"jakarta.inject.Named"
},
{
  "name":"jakarta.inject.Provider"
},
{
  "name":"jakarta.inject.Qualifier"
},
{
  "name":"jakarta.jms.ConnectionFactory"
},
{
  "name":"jakarta.jms.Message"
},
{
  "name":"jakarta.json.bind$Jsonb"
},
{
  "name":"jakarta.json.bind.Jsonb"
},
{
  "name":"jakarta.persistence$Entity"
},
{
  "name":"jakarta.persistence$EntityManagerFactory"
},
{
  "name":"jakarta.persistence$Table"
},
{
  "name":"jakarta.persistence.Entity"
},
{
  "name":"jakarta.persistence.EntityManager"
},
{
  "name":"jakarta.persistence.EntityManagerFactory"
},
{
  "name":"jakarta.persistence.Persistence"
},
{
  "name":"jakarta.persistence.PersistenceContext"
},
{
  "name":"jakarta.persistence.Table"
},
{
  "name":"jakarta.servlet.Filter",
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.GenericFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.servlet.GenericServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getInitParameter","parameterTypes":["java.lang.String"] }, 
    {"name":"getInitParameterNames","parameterTypes":[] }, 
    {"name":"getServletConfig","parameterTypes":[] }, 
    {"name":"getServletContext","parameterTypes":[] }, 
    {"name":"getServletInfo","parameterTypes":[] }, 
    {"name":"log","parameterTypes":["java.lang.String"] }, 
    {"name":"log","parameterTypes":["java.lang.String","java.lang.Throwable"] }
  ]
},
{
  "name":"jakarta.servlet.MultipartConfigElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.servlet.Servlet",
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.ServletConfig",
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.ServletContext",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.ServletRegistration"
},
{
  "name":"jakarta.servlet.ServletRequest"
},
{
  "name":"jakarta.servlet.http.HttpServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"init","parameterTypes":["jakarta.servlet.ServletConfig"] }, 
    {"name":"service","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse"] }
  ]
},
{
  "name":"jakarta.servlet.http.PushBuilder"
},
{
  "name":"jakarta.servlet.jsp.jstl.core$Config"
},
{
  "name":"jakarta.servlet.jsp.jstl.core.Config"
},
{
  "name":"jakarta.transaction.Transaction"
},
{
  "name":"jakarta.transaction.TransactionManager"
},
{
  "name":"jakarta.validation.Validator",
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.validation.ValidatorFactory",
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.validation.bootstrap.GenericBootstrap"
},
{
  "name":"jakarta.validation.executable.ExecutableValidator"
},
{
  "name":"jakarta.websocket.server.ServerContainer"
},
{
  "name":"jakarta.xml.bind$Binder"
},
{
  "name":"jakarta.xml.bind.Binder"
},
{
  "name":"jakarta.xml.ws.WebServiceRef"
},
{
  "name":"java.io.Closeable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.Flushable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.io.Serializable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.AutoCloseable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Boolean",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Byte",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Character",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Class",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getModule","parameterTypes":[] }]
},
{
  "name":"java.lang.ClassLoader",
  "methods":[{"name":"defineClass","parameterTypes":["java.lang.String","byte[]","int","int","java.security.ProtectionDomain"] }]
},
{
  "name":"java.lang.Cloneable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Comparable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Deprecated",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Double",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Enum",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"compareTo","parameterTypes":["java.lang.Enum"] }, 
    {"name":"compareTo","parameterTypes":["java.lang.Object"] }, 
    {"name":"describeConstable","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getDeclaringClass","parameterTypes":[] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"name","parameterTypes":[] }, 
    {"name":"ordinal","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }, 
    {"name":"valueOf","parameterTypes":["java.lang.Class","java.lang.String"] }
  ]
},
{
  "name":"java.lang.Float",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Integer",
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Iterable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"forEach","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"spliterator","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.Long",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Module",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"isNamed","parameterTypes":[] }]
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.Short",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.StackTraceElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.String",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.String$CaseInsensitiveComparator"
},
{
  "name":"java.lang.Thread"
},
{
  "name":"java.lang.Void",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.WrongThreadException"
},
{
  "name":"java.lang.annotation.Documented",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Inherited",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Repeatable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Retention",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Target",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.constant.Constable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.invoke.TypeDescriptor$OfField",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.BufferPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ClassLoadingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.CompilationMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.LockInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ManagementPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.management.MemoryMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryManagerMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryUsage",
  "queryAllPublicMethods":true,
  "methods":[{"name":"from","parameterTypes":["javax.management.openmbean.CompositeData"] }]
},
{
  "name":"java.lang.management.MonitorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.PlatformLoggingMXBean",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getLoggerLevel","parameterTypes":["java.lang.String"] }, 
    {"name":"getLoggerNames","parameterTypes":[] }, 
    {"name":"getParentLoggerName","parameterTypes":["java.lang.String"] }, 
    {"name":"setLoggerLevel","parameterTypes":["java.lang.String","java.lang.String"] }
  ]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ThreadInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.AnnotatedElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.GenericArrayType",
  "methods":[{"name":"getGenericComponentType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.GenericDeclaration",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.ParameterizedType",
  "methods":[
    {"name":"getActualTypeArguments","parameterTypes":[] }, 
    {"name":"getRawType","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.Type",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.TypeVariable",
  "methods":[
    {"name":"getBounds","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.WildcardType",
  "methods":[
    {"name":"getLowerBounds","parameterTypes":[] }, 
    {"name":"getUpperBounds","parameterTypes":[] }
  ]
},
{
  "name":"java.math.BigDecimal"
},
{
  "name":"java.math.BigInteger"
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.Socket"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.URL"
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.net.UnixDomainSocketAddress",
  "methods":[{"name":"of","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.nio.channels.ServerSocketChannel",
  "methods":[{"name":"open","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.nio.channels.SocketChannel",
  "methods":[{"name":"open","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.security.interfaces.RSAPrivateKey"
},
{
  "name":"java.security.interfaces.RSAPublicKey"
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Driver"
},
{
  "name":"java.sql.DriverManager"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.time.Clock",
  "methods":[{"name":"tickMillis","parameterTypes":["java.time.ZoneId"] }]
},
{
  "name":"java.time.LocalDateTime"
},
{
  "name":"java.time.Ser"
},
{
  "name":"java.time.ZoneId"
},
{
  "name":"java.util.AbstractCollection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.ArrayList",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.Collection",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.Collections$EmptyList"
},
{
  "name":"java.util.Collections$UnmodifiableCollection"
},
{
  "name":"java.util.Collections$UnmodifiableList"
},
{
  "name":"java.util.Collections$UnmodifiableMap"
},
{
  "name":"java.util.Collections$UnmodifiableSet"
},
{
  "name":"java.util.Date"
},
{
  "name":"java.util.Enumeration"
},
{
  "name":"java.util.EventListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.HashMap",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.HashSet",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.LinkedHashMap",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.LinkedHashSet"
},
{
  "name":"java.util.List",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.Locale"
},
{
  "name":"java.util.PropertyPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.util.RandomAccess",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.TreeMap"
},
{
  "name":"java.util.TreeSet"
},
{
  "name":"java.util.concurrent.Executor"
},
{
  "name":"java.util.concurrent.ThreadFactory",
  "queryAllPublicMethods":true
},
{
  "name":"java.util.function.BiPredicate",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.logging.LogManager",
  "methods":[{"name":"getLoggingMXBean","parameterTypes":[] }]
},
{
  "name":"java.util.logging.LoggingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.util.logging.SimpleFormatter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javafx.beans.value.ObservableValue"
},
{
  "name":"javax.annotation$PostConstruct"
},
{
  "name":"javax.annotation.Nonnull",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.PostConstruct"
},
{
  "name":"javax.annotation.meta.TypeQualifier",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.meta.TypeQualifierDefault",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.cache.CacheManager"
},
{
  "name":"javax.cache.Caching"
},
{
  "name":"javax.inject$Inject"
},
{
  "name":"javax.inject.Inject"
},
{
  "name":"javax.json.bind$Jsonb"
},
{
  "name":"javax.json.bind.Jsonb"
},
{
  "name":"javax.management.MBeanOperationInfo",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSignature","parameterTypes":[] }]
},
{
  "name":"javax.management.MBeanServerBuilder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.management.openmbean.CompositeData"
},
{
  "name":"javax.management.openmbean.OpenMBeanOperationInfoSupport"
},
{
  "name":"javax.management.openmbean.TabularData"
},
{
  "name":"javax.money$MonetaryAmount"
},
{
  "name":"javax.money.MonetaryAmount"
},
{
  "name":"javax.naming.InitialContext"
},
{
  "name":"javax.naming.ldap.LdapContext"
},
{
  "name":"javax.persistence.EntityManagerFactory"
},
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]
},
{
  "name":"javax.smartcardio.CardPermission"
},
{
  "name":"javax.sql.DataSource"
},
{
  "name":"jdk.management.jfr.ConfigurationInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.EventTypeInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBeanImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"jdk.management.jfr.RecordingInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.SettingDescriptorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"kotlin$Metadata"
},
{
  "name":"kotlin.Metadata"
},
{
  "name":"kotlin.reflect.full$KClasses"
},
{
  "name":"kotlin.reflect.full.KClasses"
},
{
  "name":"kotlinx.coroutines.reactor$MonoKt"
},
{
  "name":"kotlinx.coroutines.reactor.MonoKt"
},
{
  "name":"kotlinx.serialization.cbor$Cbor"
},
{
  "name":"kotlinx.serialization.cbor.Cbor"
},
{
  "name":"kotlinx.serialization.json$Json"
},
{
  "name":"kotlinx.serialization.json.Json"
},
{
  "name":"kotlinx.serialization.protobuf$ProtoBuf"
},
{
  "name":"kotlinx.serialization.protobuf.ProtoBuf"
},
{
  "name":"liquibase.change.DatabaseChange"
},
{
  "name":"liquibase.integration.spring.SpringLiquibase"
},
{
  "name":"net.jcip.annotations.Immutable",
  "queryAllDeclaredMethods":true
},
{
  "name":"okhttp3$OkHttpClient"
},
{
  "name":"okhttp3.OkHttpClient"
},
{
  "name":"org.apache.catalina.Manager"
},
{
  "name":"org.apache.catalina.core.ApplicationContextFacade",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addFilter","parameterTypes":["java.lang.String","jakarta.servlet.Filter"] }, 
    {"name":"addFilter","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"addFilter","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"addJspFile","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"addListener","parameterTypes":["java.lang.Class"] }, 
    {"name":"addListener","parameterTypes":["java.lang.String"] }, 
    {"name":"addListener","parameterTypes":["java.util.EventListener"] }, 
    {"name":"addServlet","parameterTypes":["java.lang.String","jakarta.servlet.Servlet"] }, 
    {"name":"addServlet","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"addServlet","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"createFilter","parameterTypes":["java.lang.Class"] }, 
    {"name":"createListener","parameterTypes":["java.lang.Class"] }, 
    {"name":"createServlet","parameterTypes":["java.lang.Class"] }, 
    {"name":"declareRoles","parameterTypes":["java.lang.String[]"] }, 
    {"name":"getAttribute","parameterTypes":["java.lang.String"] }, 
    {"name":"getAttributeNames","parameterTypes":[] }, 
    {"name":"getClassLoader","parameterTypes":[] }, 
    {"name":"getContext","parameterTypes":["java.lang.String"] }, 
    {"name":"getContextPath","parameterTypes":[] }, 
    {"name":"getDefaultSessionTrackingModes","parameterTypes":[] }, 
    {"name":"getEffectiveMajorVersion","parameterTypes":[] }, 
    {"name":"getEffectiveMinorVersion","parameterTypes":[] }, 
    {"name":"getEffectiveSessionTrackingModes","parameterTypes":[] }, 
    {"name":"getFilterRegistration","parameterTypes":["java.lang.String"] }, 
    {"name":"getFilterRegistrations","parameterTypes":[] }, 
    {"name":"getInitParameter","parameterTypes":["java.lang.String"] }, 
    {"name":"getInitParameterNames","parameterTypes":[] }, 
    {"name":"getJspConfigDescriptor","parameterTypes":[] }, 
    {"name":"getMajorVersion","parameterTypes":[] }, 
    {"name":"getMimeType","parameterTypes":["java.lang.String"] }, 
    {"name":"getMinorVersion","parameterTypes":[] }, 
    {"name":"getNamedDispatcher","parameterTypes":["java.lang.String"] }, 
    {"name":"getRealPath","parameterTypes":["java.lang.String"] }, 
    {"name":"getRequestCharacterEncoding","parameterTypes":[] }, 
    {"name":"getRequestDispatcher","parameterTypes":["java.lang.String"] }, 
    {"name":"getResource","parameterTypes":["java.lang.String"] }, 
    {"name":"getResourceAsStream","parameterTypes":["java.lang.String"] }, 
    {"name":"getResourcePaths","parameterTypes":["java.lang.String"] }, 
    {"name":"getResponseCharacterEncoding","parameterTypes":[] }, 
    {"name":"getServerInfo","parameterTypes":[] }, 
    {"name":"getServletContextName","parameterTypes":[] }, 
    {"name":"getServletRegistration","parameterTypes":["java.lang.String"] }, 
    {"name":"getServletRegistrations","parameterTypes":[] }, 
    {"name":"getSessionCookieConfig","parameterTypes":[] }, 
    {"name":"getSessionTimeout","parameterTypes":[] }, 
    {"name":"getVirtualServerName","parameterTypes":[] }, 
    {"name":"log","parameterTypes":["java.lang.String"] }, 
    {"name":"log","parameterTypes":["java.lang.String","java.lang.Throwable"] }, 
    {"name":"removeAttribute","parameterTypes":["java.lang.String"] }, 
    {"name":"setAttribute","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"setInitParameter","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"setRequestCharacterEncoding","parameterTypes":["java.lang.String"] }, 
    {"name":"setResponseCharacterEncoding","parameterTypes":["java.lang.String"] }, 
    {"name":"setSessionTimeout","parameterTypes":["int"] }, 
    {"name":"setSessionTrackingModes","parameterTypes":["java.util.Set"] }
  ]
},
{
  "name":"org.apache.catalina.loader.JdbcLeakPrevention",
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"clearJdbcDriverRegistrations","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.catalina.startup.Tomcat"
},
{
  "name":"org.apache.catalina.util.CharsetMapper",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.commons.pool2.ObjectPool"
},
{
  "name":"org.apache.commons.pool2.impl.DefaultEvictionPolicy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.commons.pool2.impl.DefaultPooledObjectInfo",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.commons.pool2.impl.GenericObjectPool"
},
{
  "name":"org.apache.commons.pool2.impl.GenericObjectPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.coyote.AbstractProtocol",
  "methods":[
    {"name":"getAddress","parameterTypes":[] }, 
    {"name":"getLocalPort","parameterTypes":[] }, 
    {"name":"setPort","parameterTypes":["int"] }, 
    {"name":"setProperty","parameterTypes":["java.lang.String","java.lang.String"] }
  ]
},
{
  "name":"org.apache.coyote.UpgradeProtocol"
},
{
  "name":"org.apache.coyote.http11.AbstractHttp11Protocol",
  "methods":[{"name":"isSSLEnabled","parameterTypes":[] }]
},
{
  "name":"org.apache.coyote.http11.Http11NioProtocol",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.curator.RetryPolicy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"allowRetry","parameterTypes":["java.lang.Throwable"] }]
},
{
  "name":"org.apache.curator.framework.CuratorFramework",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"postSafeNotify","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.apache.curator.framework.imps.CuratorFrameworkImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"blockUntilConnected","parameterTypes":[] }, 
    {"name":"blockUntilConnected","parameterTypes":["int","java.util.concurrent.TimeUnit"] }, 
    {"name":"checkExists","parameterTypes":[] }, 
    {"name":"clearWatcherReferences","parameterTypes":["org.apache.zookeeper.Watcher"] }, 
    {"name":"close","parameterTypes":[] }, 
    {"name":"create","parameterTypes":[] }, 
    {"name":"createContainers","parameterTypes":["java.lang.String"] }, 
    {"name":"delete","parameterTypes":[] }, 
    {"name":"getACL","parameterTypes":[] }, 
    {"name":"getChildren","parameterTypes":[] }, 
    {"name":"getConfig","parameterTypes":[] }, 
    {"name":"getConnectionStateErrorPolicy","parameterTypes":[] }, 
    {"name":"getConnectionStateListenable","parameterTypes":[] }, 
    {"name":"getCuratorListenable","parameterTypes":[] }, 
    {"name":"getCurrentConfig","parameterTypes":[] }, 
    {"name":"getData","parameterTypes":[] }, 
    {"name":"getNamespace","parameterTypes":[] }, 
    {"name":"getSchemaSet","parameterTypes":[] }, 
    {"name":"getState","parameterTypes":[] }, 
    {"name":"getUnhandledErrorListenable","parameterTypes":[] }, 
    {"name":"getZookeeperClient","parameterTypes":[] }, 
    {"name":"inTransaction","parameterTypes":[] }, 
    {"name":"isStarted","parameterTypes":[] }, 
    {"name":"newNamespaceAwareEnsurePath","parameterTypes":["java.lang.String"] }, 
    {"name":"newWatcherRemoveCuratorFramework","parameterTypes":[] }, 
    {"name":"nonNamespaceView","parameterTypes":[] }, 
    {"name":"reconfig","parameterTypes":[] }, 
    {"name":"runSafe","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"setACL","parameterTypes":[] }, 
    {"name":"setData","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"sync","parameterTypes":[] }, 
    {"name":"sync","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"transaction","parameterTypes":[] }, 
    {"name":"transactionOp","parameterTypes":[] }, 
    {"name":"usingNamespace","parameterTypes":["java.lang.String"] }, 
    {"name":"watchers","parameterTypes":[] }, 
    {"name":"watches","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.curator.framework.recipes.cache.TreeCacheListener",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.curator.retry.ExponentialBackoffRetry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"allowRetry","parameterTypes":["int","long","org.apache.curator.RetrySleeper"] }, 
    {"name":"getN","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.curator.retry.SleepingRetry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.curator.shaded.com.google.common.collect.ImmutableCollection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.curator.shaded.com.google.common.collect.ImmutableList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.curator.shaded.com.google.common.collect.RegularImmutableList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.apache.curator.x.discovery.ServiceDiscovery",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.curator.x.discovery.ServiceInstance",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.curator.x.discovery.ServiceType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.curator.x.discovery.UriSpec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getParts","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.curator.x.discovery.UriSpec$Part",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getValue","parameterTypes":[] }, 
    {"name":"isVariable","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.curator.x.discovery.details.InstanceSerializer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.curator.x.discovery.details.JsonInstanceSerializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"deserialize","parameterTypes":["byte[]"] }, 
    {"name":"serialize","parameterTypes":["org.apache.curator.x.discovery.ServiceInstance"] }
  ]
},
{
  "name":"org.apache.curator.x.discovery.details.OldServiceInstance",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getAddress","parameterTypes":[] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getPayload","parameterTypes":[] }, 
    {"name":"getPort","parameterTypes":[] }, 
    {"name":"getRegistrationTimeUTC","parameterTypes":[] }, 
    {"name":"getServiceType","parameterTypes":[] }, 
    {"name":"getSslPort","parameterTypes":[] }, 
    {"name":"getUriSpec","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.curator.x.discovery.details.ServiceDiscoveryImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"queryForInstance","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"queryForInstances","parameterTypes":["java.lang.String"] }, 
    {"name":"queryForNames","parameterTypes":[] }, 
    {"name":"registerService","parameterTypes":["org.apache.curator.x.discovery.ServiceInstance"] }, 
    {"name":"serviceCacheBuilder","parameterTypes":[] }, 
    {"name":"serviceProviderBuilder","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"unregisterService","parameterTypes":["org.apache.curator.x.discovery.ServiceInstance"] }, 
    {"name":"updateService","parameterTypes":["org.apache.curator.x.discovery.ServiceInstance"] }
  ]
},
{
  "name":"org.apache.el.ExpressionFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.hc.client5.http.impl.classic$HttpClients"
},
{
  "name":"org.apache.hc.client5.http.impl.classic.HttpClients"
},
{
  "name":"org.apache.jasper.compiler$JspConfig"
},
{
  "name":"org.apache.jasper.compiler.JspConfig"
},
{
  "name":"org.apache.jasper.servlet$JspServlet"
},
{
  "name":"org.apache.jasper.servlet.JspServlet"
},
{
  "name":"org.apache.logging.log4j.core.LoggerContext"
},
{
  "name":"org.apache.logging.log4j.core.impl$Log4jContextFactory"
},
{
  "name":"org.apache.logging.log4j.core.impl.Log4jContextFactory"
},
{
  "name":"org.apache.logging.log4j.spi.ExtendedLogger"
},
{
  "name":"org.apache.logging.slf4j.SLF4JProvider"
},
{
  "name":"org.apache.tomcat.util.net.AbstractEndpoint",
  "methods":[{"name":"setBindOnInit","parameterTypes":["boolean"] }]
},
{
  "name":"org.apache.tomcat.util.net.NioEndpoint",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.tomcat.websocket.server.WsFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.tomcat.websocket.server.WsSci"
},
{
  "name":"org.apache.zookeeper.ClientCnxnSocketNIO",
  "methods":[{"name":"<init>","parameterTypes":["org.apache.zookeeper.client.ZKClientConfig"] }]
},
{
  "name":"org.aspectj.weaver.Advice"
},
{
  "name":"org.cache2k.Cache2kBuilder"
},
{
  "name":"org.cache2k.extra.micrometer.Cache2kCacheMetrics"
},
{
  "name":"org.cache2k.extra.spring.SpringCache2kCache"
},
{
  "name":"org.eclipse.collections.api.list$ImmutableList"
},
{
  "name":"org.eclipse.collections.api.list.ImmutableList"
},
{
  "name":"org.eclipse.core.runtime$FileLocator"
},
{
  "name":"org.eclipse.core.runtime.FileLocator"
},
{
  "name":"org.eclipse.jetty.server.Server"
},
{
  "name":"org.eclipse.jetty.util.Loader"
},
{
  "name":"org.eclipse.jetty.webapp.WebAppContext"
},
{
  "name":"org.eclipse.jetty.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer"
},
{
  "name":"org.elasticsearch.client.RestClient"
},
{
  "name":"org.elasticsearch.client.RestClientBuilder"
},
{
  "name":"org.flywaydb.core.Flyway"
},
{
  "name":"org.glassfish.jersey.server.ResourceConfig"
},
{
  "name":"org.glassfish.jersey.server.spring.SpringComponentProvider"
},
{
  "name":"org.graalvm.nativeimage.ImageInfo",
  "methods":[{"name":"inImageCode","parameterTypes":[] }]
},
{
  "name":"org.h2.server.web.JakartaWebServlet"
},
{
  "name":"org.hibernate.annotations$Where"
},
{
  "name":"org.hibernate.annotations.Where"
},
{
  "name":"org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
  "methods":[{"name":"externalClassLoader","parameterTypes":["java.lang.ClassLoader"] }]
},
{
  "name":"org.hibernate.validator.internal.engine.ConfigurationImpl"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger_zh"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger_zh_CN"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle",
  "fields":[{"name":"INSTANCE"}]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle_zh"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle_zh_CN"
},
{
  "name":"org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager"
},
{
  "name":"org.influxdb.InfluxDB"
},
{
  "name":"org.jboss.logging.Logger"
},
{
  "name":"org.jmolecules.spring$IdentifierToPrimitivesConverter"
},
{
  "name":"org.jmolecules.spring.IdentifierToPrimitivesConverter"
},
{
  "name":"org.joda.time.ReadableInstant"
},
{
  "name":"org.jooq.DSLContext"
},
{
  "name":"org.neo4j.driver.Driver"
},
{
  "name":"org.quartz.Scheduler"
},
{
  "name":"org.reactivestreams.Publisher"
},
{
  "name":"org.slf4j.Logger"
},
{
  "name":"org.slf4j.LoggerFactory"
},
{
  "name":"org.slf4j.bridge.SLF4JBridgeHandler"
},
{
  "name":"org.slf4j.spi.LocationAwareLogger",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.amqp.rabbit.core.RabbitTemplate"
},
{
  "name":"org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"determineBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"setBeforeExistingAdvisors","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.aop.framework.AopInfrastructureBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.ProxyConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"copyFrom","parameterTypes":["org.springframework.aop.framework.ProxyConfig"] }, 
    {"name":"isExposeProxy","parameterTypes":[] }, 
    {"name":"isFrozen","parameterTypes":[] }, 
    {"name":"isOpaque","parameterTypes":[] }, 
    {"name":"isOptimize","parameterTypes":[] }, 
    {"name":"isProxyTargetClass","parameterTypes":[] }, 
    {"name":"setExposeProxy","parameterTypes":["boolean"] }, 
    {"name":"setFrozen","parameterTypes":["boolean"] }, 
    {"name":"setOpaque","parameterTypes":["boolean"] }, 
    {"name":"setOptimize","parameterTypes":["boolean"] }, 
    {"name":"setProxyTargetClass","parameterTypes":["boolean"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.aop.framework.ProxyProcessorSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"setProxyClassLoader","parameterTypes":["java.lang.ClassLoader"] }
  ]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"determineBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"determineCandidateConstructors","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"getEarlyBeanReference","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"isFrozen","parameterTypes":[] }, 
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInstantiation","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"postProcessProperties","parameterTypes":["org.springframework.beans.PropertyValues","java.lang.Object","java.lang.String"] }, 
    {"name":"predictBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"setAdvisorAdapterRegistry","parameterTypes":["org.springframework.aop.framework.adapter.AdvisorAdapterRegistry"] }, 
    {"name":"setApplyCommonInterceptorsFirst","parameterTypes":["boolean"] }, 
    {"name":"setCustomTargetSourceCreators","parameterTypes":["org.springframework.aop.framework.autoproxy.TargetSourceCreator[]"] }, 
    {"name":"setFrozen","parameterTypes":["boolean"] }, 
    {"name":"setInterceptorNames","parameterTypes":["java.lang.String[]"] }
  ]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.aop.scope.ScopedObject"
},
{
  "name":"org.springframework.aot.hint.annotation.Reflective",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aot.hint.annotation.RegisterReflectionForBinding",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.batch.core.launch.JobLauncher"
},
{
  "name":"org.springframework.beans.factory.Aware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanClassLoaderAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanFactoryAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.beans.factory.BeanNameAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.DisposableBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.FactoryBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.InitializingBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.SmartInitializingSingleton",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Autowired",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.annotation.Qualifier",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.annotation.Value",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.aot.BeanRegistrationAotProcessor",
  "queryAllPublicMethods":true,
  "methods":[{"name":"isBeanExcludedFromAotProcessing","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.aot.BeanRegistrationExcludeFilter",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanFactoryPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"postProcessAfterInstantiation","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInstantiation","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"postProcessProperties","parameterTypes":["org.springframework.beans.PropertyValues","java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"determineCandidateConstructors","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"getEarlyBeanReference","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"predictBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.NullBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
  "allPublicFields":true
},
{
  "name":"org.springframework.boot.ClearCachesApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.SpringApplication",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.SpringBootConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.audit.AuditEventRepository"
},
{
  "name":"org.springframework.boot.actuate.audit.AuditEventsEndpoint"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"beansEndpoint","parameterTypes":["org.springframework.context.ConfigurableApplicationContext"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"cachesEndpoint","parameterTypes":["java.util.Map"] }, 
    {"name":"cachesEndpointWebExtension","parameterTypes":["org.springframework.boot.actuate.cache.CachesEndpoint"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"conditionsReportEndpoint","parameterTypes":["org.springframework.context.ConfigurableApplicationContext"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"configurationPropertiesReportEndpoint","parameterTypes":["org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"configurationPropertiesReportEndpointWebExtension","parameterTypes":["org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint","org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.data.redis.RedisHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"redisHealthContributor","parameterTypes":["java.util.Map"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.data.redis.RedisReactiveHealthContributorAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"endpointCachingOperationInvokerAdvisor","parameterTypes":["org.springframework.core.env.Environment"] }, 
    {"name":"endpointOperationParameterMapper","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"endpointObjectMapper","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"servletExposeExcludePropertyEndpointFilter","parameterTypes":["org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"servletEndpointRegistrar","parameterTypes":["org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties","org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier","org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"] }, 
    {"name":"controllerEndpointDiscoverer","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"controllerExposeExcludePropertyEndpointFilter","parameterTypes":[] }, 
    {"name":"endpointMediaTypes","parameterTypes":[] }, 
    {"name":"pathMappedEndpoints","parameterTypes":["java.util.Collection"] }, 
    {"name":"webEndpointDiscoverer","parameterTypes":["org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper","org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"webEndpointPathMapper","parameterTypes":[] }, 
    {"name":"webExposeExcludePropertyEndpointFilter","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"servletEndpointDiscoverer","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getExposure","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getInclude","parameterTypes":[] }, 
    {"name":"setInclude","parameterTypes":["java.util.Set"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"controllerEndpointHandlerMapping","parameterTypes":["org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier","org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties","org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"] }, 
    {"name":"endpointObjectMapperWebMvcConfigurer","parameterTypes":["org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper"] }, 
    {"name":"webEndpointServletHandlerMapping","parameterTypes":["org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier","org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier","org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier","org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes","org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties","org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties","org.springframework.core.env.Environment"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration$EndpointObjectMapperWebMvcConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"configureMessageConverters","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"environmentEndpoint","parameterTypes":["org.springframework.core.env.Environment","org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"environmentEndpointWebExtension","parameterTypes":["org.springframework.boot.actuate.env.EnvironmentEndpoint","org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AbstractCompositeHealthContributorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredReactiveHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.CompositeHealthContributorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"pingHealthContributor","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"healthContributorRegistry","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.actuate.health.HealthEndpointGroups","java.util.Map","java.util.Map"] }, 
    {"name":"healthEndpoint","parameterTypes":["org.springframework.boot.actuate.health.HealthContributorRegistry","org.springframework.boot.actuate.health.HealthEndpointGroups","org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"] }, 
    {"name":"healthEndpointGroups","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"] }, 
    {"name":"healthEndpointGroupsBeanPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"healthHttpCodeStatusMapper","parameterTypes":["org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"] }, 
    {"name":"healthStatusAggregator","parameterTypes":["org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getShowDetails","parameterTypes":[] }, 
    {"name":"setShowDetails","parameterTypes":["org.springframework.boot.actuate.endpoint.Show"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"healthEndpointWebExtension","parameterTypes":["org.springframework.boot.actuate.health.HealthContributorRegistry","org.springframework.boot.actuate.health.HealthEndpointGroups","org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"healthEndpointWebMvcHandlerMapping","parameterTypes":["org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier","org.springframework.boot.actuate.health.HealthEndpointGroups"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getRoles","parameterTypes":[] }, 
    {"name":"getShowComponents","parameterTypes":[] }, 
    {"name":"getStatus","parameterTypes":[] }, 
    {"name":"setRoles","parameterTypes":["java.util.Set"] }, 
    {"name":"setShowComponents","parameterTypes":["org.springframework.boot.actuate.endpoint.Show"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"reactiveHealthContributorRegistry","parameterTypes":["java.util.Map","java.util.Map","org.springframework.boot.actuate.health.HealthEndpointGroups"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorFallback"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"infoEndpoint","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration$LogFileCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loggersEndpoint","parameterTypes":["org.springframework.boot.logging.LoggingSystem","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration$OnEnabledLoggingSystemCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"heapDumpWebEndpoint","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"dumpEndpoint","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"classLoaderMetrics","parameterTypes":[] }, 
    {"name":"jvmCompilationMetrics","parameterTypes":[] }, 
    {"name":"jvmGcMetrics","parameterTypes":[] }, 
    {"name":"jvmHeapPressureMetrics","parameterTypes":[] }, 
    {"name":"jvmInfoMetrics","parameterTypes":[] }, 
    {"name":"jvmMemoryMetrics","parameterTypes":[] }, 
    {"name":"jvmThreadMetrics","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"logbackMetrics","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"meterRegistryPostProcessor","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"micrometerClock","parameterTypes":[] }, 
    {"name":"propertiesMeterFilter","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"metricsEndpoint","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getDistribution","parameterTypes":[] }, 
    {"name":"getTags","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getPercentilesHistogram","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] }, 
    {"name":"map","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"diskSpaceMetrics","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }, 
    {"name":"fileDescriptorMetrics","parameterTypes":[] }, 
    {"name":"processorMetrics","parameterTypes":[] }, 
    {"name":"uptimeMetrics","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }, 
    {"name":"metricsRepositoryMethodInvocationListener","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider"] }, 
    {"name":"metricsRepositoryMethodInvocationListenerBeanPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"repositoryTagsProvider","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"collectorRegistry","parameterTypes":[] }, 
    {"name":"exemplarSampler","parameterTypes":["io.prometheus.client.exemplars.tracer.common.SpanContextSupplier"] }, 
    {"name":"prometheusConfig","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties"] }, 
    {"name":"prometheusMeterRegistry","parameterTypes":["io.micrometer.prometheus.PrometheusConfig","io.prometheus.client.CollectorRegistry","io.micrometer.core.instrument.Clock","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration$PrometheusScrapeEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"prometheusEndpoint","parameterTypes":["io.prometheus.client.CollectorRegistry"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusPropertiesConfigAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"descriptions","parameterTypes":[] }, 
    {"name":"histogramFlavor","parameterTypes":[] }, 
    {"name":"prefix","parameterTypes":[] }, 
    {"name":"step","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"startupTimeMetrics","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"bindTaskExecutorsToRegistry","parameterTypes":["java.util.Map","io.micrometer.core.instrument.MeterRegistry"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"tomcatMetricsBinder","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"observationRegistry","parameterTypes":[] }, 
    {"name":"observationRegistryPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$TracingAndMetricsObservationHandlerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"tracingAwareMeterObservationHandler","parameterTypes":["io.micrometer.core.instrument.MeterRegistry","io.micrometer.tracing.Tracer"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MetricsWithTracingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"metricsAndTracingObservationHandlerGrouping","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"metricsHttpClientUriTagFilter","parameterTypes":["org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties","org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"observationRestTemplateCustomizer","parameterTypes":["io.micrometer.observation.ObservationRegistry","org.springframework.beans.factory.ObjectProvider","org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties","org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties","org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }, 
    {"name":"webMvcObservationFilter","parameterTypes":["io.micrometer.observation.ObservationRegistry","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"metricsHttpServerUriTagFilter","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties","org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"scheduledTasksEndpoint","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration$MvcRequestMatcherConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"requestMatcherProvider","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.session.SessionsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration$ApplicationStartupCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"diskSpaceHealthIndicator","parameterTypes":["org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.BraveAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"braveCurrentTraceContext","parameterTypes":["java.util.List","java.util.List"] }, 
    {"name":"bravePropagator","parameterTypes":["brave.Tracing"] }, 
    {"name":"braveSampler","parameterTypes":["org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties"] }, 
    {"name":"braveSpanCustomizer","parameterTypes":["brave.SpanCustomizer"] }, 
    {"name":"braveTracer","parameterTypes":["brave.Tracing"] }, 
    {"name":"braveTracerBridge","parameterTypes":["brave.Tracer","brave.propagation.CurrentTraceContext"] }, 
    {"name":"braveTracing","parameterTypes":["org.springframework.core.env.Environment","java.util.List","java.util.List","brave.propagation.CurrentTraceContext","brave.propagation.Propagation$Factory","brave.sampler.Sampler"] }, 
    {"name":"compositeSpanHandler","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"currentSpanCustomizer","parameterTypes":["brave.Tracing"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.BraveAutoConfiguration$BraveBaggageConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties"] }, 
    {"name":"correlationFieldsCorrelationScopeCustomizer","parameterTypes":[] }, 
    {"name":"correlationScopeDecorator","parameterTypes":["brave.baggage.CorrelationScopeDecorator$Builder"] }, 
    {"name":"mdcCorrelationScopeDecoratorBuilder","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"propagationFactory","parameterTypes":["brave.baggage.BaggagePropagation$FactoryBuilder"] }, 
    {"name":"propagationFactoryBuilder","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"remoteFieldsBaggagePropagationCustomizer","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.ConditionalOnEnabledTracing",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultTracingObservationHandler","parameterTypes":["io.micrometer.tracing.Tracer"] }, 
    {"name":"propagatingReceiverTracingObservationHandler","parameterTypes":["io.micrometer.tracing.Tracer","io.micrometer.tracing.propagation.Propagator"] }, 
    {"name":"propagatingSenderTracingObservationHandler","parameterTypes":["io.micrometer.tracing.Tracer","io.micrometer.tracing.propagation.Propagator"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getSampling","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties$Sampling",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setProbability","parameterTypes":["float"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.prometheus.PrometheusExemplarsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"spanContextSupplier","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.prometheus.PrometheusExemplarsAutoConfiguration$LazyTracingSpanContextSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.HttpSender",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"check","parameterTypes":[] }, 
    {"name":"close","parameterTypes":[] }, 
    {"name":"encoding","parameterTypes":[] }, 
    {"name":"messageMaxBytes","parameterTypes":[] }, 
    {"name":"messageSizeInBytes","parameterTypes":["int"] }, 
    {"name":"messageSizeInBytes","parameterTypes":["java.util.List"] }, 
    {"name":"sendSpans","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"spanBytesEncoder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$BraveConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"zipkinSpanHandler","parameterTypes":["zipkin2.reporter.Reporter"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$OpenTelemetryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$ReporterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"spanReporter","parameterTypes":["zipkin2.reporter.Sender","zipkin2.codec.BytesEncoder"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$RestTemplateSenderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"restTemplateSender","parameterTypes":["org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinProperties","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$SenderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$UrlConnectionSenderConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$WebClientSenderConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setEndpoint","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinRestTemplateSender",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinRestTemplateSender$RestTemplateHttpPostCall"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"mappingsEndpoint","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"filterMappingDescriptionProvider","parameterTypes":[] }, 
    {"name":"servletMappingDescriptionProvider","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"dispatcherServletMappingDescriptionProvider","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }, 
    {"name":"afterSingletonsInstantiated","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"managementServletContext","parameterTypes":["org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"] }, 
    {"name":"servletWebChildContextFactory","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.beans.BeansEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.cache.CachesEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.cache.CachesEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.context.ShutdownEndpoint"
},
{
  "name":"org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.data.redis.RedisHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointFilter",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointsSupplier",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.DeleteOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Endpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"createOperationKey","parameterTypes":["org.springframework.boot.actuate.endpoint.Operation"] }, 
    {"name":"getEndpoints","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Selector",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.WriteOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMapper",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getEndpoints","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$LinksHandler",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AdditionalHealthEndpointPathsWebMvcHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.AbstractHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"health","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.CompositeHealthContributor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ContributorRegistry",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.DefaultContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getContributor","parameterTypes":["java.lang.String"] }, 
    {"name":"iterator","parameterTypes":[] }, 
    {"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"unregisterContributor","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.health.DefaultReactiveHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getContributor","parameterTypes":["java.lang.String"] }, 
    {"name":"iterator","parameterTypes":[] }, 
    {"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"unregisterContributor","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.health.Health"
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributorRegistry",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroups",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"get","parameterTypes":["org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"] }, 
    {"name":"getAllWithAdditionalPath","parameterTypes":["org.springframework.boot.actuate.endpoint.web.WebServerNamespace"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getHealth","parameterTypes":["java.lang.Object","boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthIndicator",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getHealth","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.health.HttpCodeStatusMapper",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.NamedContributors",
  "methods":[{"name":"stream","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.PingHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthIndicator"
},
{
  "name":"org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.SimpleStatusAggregator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.StatusAggregator",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getAggregateStatus","parameterTypes":["org.springframework.boot.actuate.health.Status[]"] }]
},
{
  "name":"org.springframework.boot.actuate.info.InfoEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.logging.LogFileWebEndpoint"
},
{
  "name":"org.springframework.boot.actuate.logging.LoggersEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.management.HeapDumpWebEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.management.ThreadDumpEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.MetricsEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider"
},
{
  "name":"org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.export.prometheus.PrometheusScrapeEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.client.ObservationRestTemplateCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.session.SessionsEndpoint"
},
{
  "name":"org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository"
},
{
  "name":"org.springframework.boot.actuate.web.exchanges.HttpExchangesEndpoint"
},
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingDescriptionProvider",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingsEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackage",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureAfter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureBefore",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureOrder",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.BackgroundPreinitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.EnableAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.SpringBootApplication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"applicationAvailability","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnBeanCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnClassCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnResourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.SearchStrategy"
},
{
  "name":"org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultLifecycleProcessor","parameterTypes":["org.springframework.boot.autoconfigure.context.LifecycleProperties"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"propertySourcesPlaceholderConfigurer","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"persistenceExceptionTranslationPostProcessor","parameterTypes":["org.springframework.core.env.Environment"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.data.redis.RedisProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"redisConnectionFactory","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"redisTemplate","parameterTypes":["org.springframework.data.redis.connection.RedisConnectionFactory"] }, 
    {"name":"stringRedisTemplate","parameterTypes":["org.springframework.data.redis.connection.RedisConnectionFactory"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"] }, 
    {"name":"pageableCustomizer","parameterTypes":[] }, 
    {"name":"sortCustomizer","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"gson","parameterTypes":["com.google.gson.GsonBuilder"] }, 
    {"name":"gsonBuilder","parameterTypes":["java.util.List"] }, 
    {"name":"standardGsonBuilderCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.gson.GsonProperties"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConverters",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"messageConverters","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$HttpMessageConvertersAutoConfigurationRuntimeHints"
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"stringHttpMessageConverter","parameterTypes":["org.springframework.core.env.Environment"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"mappingJackson2HttpMessageConverter","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.info.ProjectInfoProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"jsonComponentModule","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"standardJacksonObjectMapperBuilderCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.jackson.JacksonProperties","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"jsonMixinModule","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.jackson.JsonMixinModuleEntries"] }, 
    {"name":"jsonMixinModuleEntries","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"jacksonObjectMapperBuilder","parameterTypes":["org.springframework.context.ApplicationContext","java.util.List"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"jacksonObjectMapper","parameterTypes":["org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"parameterNamesModule","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.netty.NettyProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityDataConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.ClientsConfiguredCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getProvider","parameterTypes":[] }, 
    {"name":"getRegistration","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties$Provider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setAuthorizationUri","parameterTypes":["java.lang.String"] }, 
    {"name":"setJwkSetUri","parameterTypes":["java.lang.String"] }, 
    {"name":"setTokenUri","parameterTypes":["java.lang.String"] }, 
    {"name":"setUserInfoUri","parameterTypes":["java.lang.String"] }, 
    {"name":"setUserNameAttribute","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties$Registration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getScope","parameterTypes":[] }, 
    {"name":"setAuthorizationGrantType","parameterTypes":["java.lang.String"] }, 
    {"name":"setClientId","parameterTypes":["java.lang.String"] }, 
    {"name":"setClientSecret","parameterTypes":["java.lang.String"] }, 
    {"name":"setProvider","parameterTypes":["java.lang.String"] }, 
    {"name":"setRedirectUri","parameterTypes":["java.lang.String"] }, 
    {"name":"setScope","parameterTypes":["java.util.Set"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration$NonServletApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"clientRegistrationRepository","parameterTypes":["org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2WebSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authorizedClientRepository","parameterTypes":["org.springframework.security.oauth2.client.OAuth2AuthorizedClientService"] }, 
    {"name":"authorizedClientService","parameterTypes":["org.springframework.security.oauth2.client.registration.ClientRegistrationRepository"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerJwtConfiguration$JwtDecoderConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerJwtConfiguration$OAuth2SecurityFilterChainConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerOpaqueTokenConfiguration$OAuth2SecurityFilterChainConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerOpaqueTokenConfiguration$OpaqueTokenIntrospectionClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.Oauth2ResourceServerConfiguration$JwtConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.Oauth2ResourceServerConfiguration$OpaqueTokenConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$ReactiveUserDetailsServiceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.AntPathRequestMatcherProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.RequestMatcherProvider",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"securityFilterChainRegistration","parameterTypes":["org.springframework.boot.autoconfigure.security.SecurityProperties"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$WebSecurityEnablerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.session.DefaultCookieSerializerCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.session.SessionAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$DefaultCookieSerializerCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"cookieSerializer","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration$RememberMeServicesConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"rememberMeServicesCookieSerializerCustomizer","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.session.SessionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.session.SessionRepositoryFilterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"sessionRepositoryFilterRegistration","parameterTypes":["org.springframework.boot.autoconfigure.session.SessionProperties","org.springframework.session.web.http.SessionRepositoryFilter"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"applicationTaskExecutor","parameterTypes":["org.springframework.boot.task.TaskExecutorBuilder"] }, 
    {"name":"taskExecutorBuilder","parameterTypes":["org.springframework.boot.autoconfigure.task.TaskExecutionProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"taskSchedulerBuilder","parameterTypes":["org.springframework.boot.autoconfigure.task.TaskSchedulingProperties","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.PlatformTransactionManagerCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"platformTransactionManagerCustomizers","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultValidator","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"methodValidationPostProcessor","parameterTypes":["org.springframework.core.env.Environment","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setPort","parameterTypes":["java.lang.Integer"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints"
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"tomcatWebServerFactoryCustomizer","parameterTypes":["org.springframework.core.env.Environment","org.springframework.boot.autoconfigure.web.ServerProperties"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.format.WebConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"dispatcherServlet","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"dispatcherServletRegistration","parameterTypes":["org.springframework.web.servlet.DispatcherServlet","org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getPrefix","parameterTypes":[] }, 
    {"name":"getRelativePath","parameterTypes":["java.lang.String"] }, 
    {"name":"getServletUrlMapping","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addUrlMappings","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setUrlMappings","parameterTypes":["java.util.Collection"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }, 
    {"name":"characterEncodingFilter","parameterTypes":[] }, 
    {"name":"localeCharsetMappingsCustomizer","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"] }, 
    {"name":"multipartConfigElement","parameterTypes":[] }, 
    {"name":"multipartResolver","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"servletWebServerFactoryCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"tomcatServletWebServerFactoryCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"tomcatServletWebServerFactory","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"formContentFilter","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties","org.springframework.boot.autoconfigure.web.WebProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ListableBeanFactory"] }, 
    {"name":"flashMapManager","parameterTypes":[] }, 
    {"name":"localeResolver","parameterTypes":[] }, 
    {"name":"mvcContentNegotiationManager","parameterTypes":[] }, 
    {"name":"mvcConversionService","parameterTypes":[] }, 
    {"name":"mvcValidator","parameterTypes":[] }, 
    {"name":"requestMappingHandlerAdapter","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.validation.Validator"] }, 
    {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }, 
    {"name":"themeResolver","parameterTypes":[] }, 
    {"name":"welcomePageHandlerMapping","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.WebProperties","org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties","org.springframework.beans.factory.ListableBeanFactory","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, 
    {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"] }, 
    {"name":"configureAsyncSupport","parameterTypes":["org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"] }, 
    {"name":"configureContentNegotiation","parameterTypes":["org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"] }, 
    {"name":"configureMessageConverters","parameterTypes":["java.util.List"] }, 
    {"name":"configurePathMatch","parameterTypes":["org.springframework.web.servlet.config.annotation.PathMatchConfigurer"] }, 
    {"name":"defaultViewResolver","parameterTypes":[] }, 
    {"name":"getMessageCodesResolver","parameterTypes":[] }, 
    {"name":"requestContextFilter","parameterTypes":[] }, 
    {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }, 
    {"name":"viewResolver","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }, 
    {"name":"basicErrorController","parameterTypes":["org.springframework.boot.web.servlet.error.ErrorAttributes","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"errorAttributes","parameterTypes":[] }, 
    {"name":"errorPageCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"] }, 
    {"name":"preserveErrorControllerTargetClassPostProcessor","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.autoconfigure.web.WebProperties"] }, 
    {"name":"conventionErrorViewResolver","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$StaticView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getContentType","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"beanNameViewResolver","parameterTypes":[] }, 
    {"name":"defaultErrorView","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"websocketServletWebServerCustomizer","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailability",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getLivenessState","parameterTypes":[] }, 
    {"name":"getReadinessState","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailabilityBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.builder.ParentContextCloserApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.cloud.CloudPlatform"
},
{
  "name":"org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.ContextIdApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.FileEncodingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.TypeExcludeFilter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.AnsiOutputApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.ConfigurableBootstrapContext"] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataProperties",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.context.properties.bind.Binder","org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.event.EventPublishingRunListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.SpringApplication","java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.context.logging.LoggingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.BoundConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationProperties",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationProperties",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.NestedConfigurationProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.bind.Name",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.bind.Nested",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.convert.DurationUnit",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.PropertiesPropertySourceLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.YamlPropertySourceLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.info.BuildProperties"
},
{
  "name":"org.springframework.boot.info.GitProperties"
},
{
  "name":"org.springframework.boot.jackson.JsonComponentModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModuleEntries",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider"
},
{
  "name":"org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.loader.LaunchedURLClassLoader",
  "methods":[{"name":"clearCache","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.LoggingSystem"
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.logback.ColorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.TaskExecutorBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.task.TaskSchedulerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"byAnnotation","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.boot.web.client.RestTemplateBuilder"
},
{
  "name":"org.springframework.boot.web.client.RestTemplateCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPage[]"] }, 
    {"name":"getAddress","parameterTypes":[] }, 
    {"name":"getCompression","parameterTypes":[] }, 
    {"name":"getErrorPages","parameterTypes":[] }, 
    {"name":"getHttp2","parameterTypes":[] }, 
    {"name":"getOrCreateSslStoreProvider","parameterTypes":[] }, 
    {"name":"getPort","parameterTypes":[] }, 
    {"name":"getServerHeader","parameterTypes":[] }, 
    {"name":"getShutdown","parameterTypes":[] }, 
    {"name":"getSsl","parameterTypes":[] }, 
    {"name":"getSslStoreProvider","parameterTypes":[] }, 
    {"name":"setAddress","parameterTypes":["java.net.InetAddress"] }, 
    {"name":"setCompression","parameterTypes":["org.springframework.boot.web.server.Compression"] }, 
    {"name":"setErrorPages","parameterTypes":["java.util.Set"] }, 
    {"name":"setHttp2","parameterTypes":["org.springframework.boot.web.server.Http2"] }, 
    {"name":"setPort","parameterTypes":["int"] }, 
    {"name":"setServerHeader","parameterTypes":["java.lang.String"] }, 
    {"name":"setShutdown","parameterTypes":["org.springframework.boot.web.server.Shutdown"] }, 
    {"name":"setSsl","parameterTypes":["org.springframework.boot.web.server.Ssl"] }, 
    {"name":"setSslStoreProvider","parameterTypes":["org.springframework.boot.web.server.SslStoreProvider"] }
  ]
},
{
  "name":"org.springframework.boot.web.server.ConfigurableWebServerFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistrar",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addServletNames","parameterTypes":["java.lang.String[]"] }, 
    {"name":"addServletRegistrationBeans","parameterTypes":["org.springframework.boot.web.servlet.ServletRegistrationBean[]"] }, 
    {"name":"addUrlPatterns","parameterTypes":["java.lang.String[]"] }, 
    {"name":"getServletNames","parameterTypes":[] }, 
    {"name":"getServletRegistrationBeans","parameterTypes":[] }, 
    {"name":"getUrlPatterns","parameterTypes":[] }, 
    {"name":"isMatchAfter","parameterTypes":[] }, 
    {"name":"setDispatcherTypes","parameterTypes":["jakarta.servlet.DispatcherType","jakarta.servlet.DispatcherType[]"] }, 
    {"name":"setDispatcherTypes","parameterTypes":["java.util.EnumSet"] }, 
    {"name":"setMatchAfter","parameterTypes":["boolean"] }, 
    {"name":"setServletNames","parameterTypes":["java.util.Collection"] }, 
    {"name":"setServletRegistrationBeans","parameterTypes":["java.util.Collection"] }, 
    {"name":"setUrlPatterns","parameterTypes":["java.util.Collection"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getFilter","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.DynamicRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addInitParameter","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"configure","parameterTypes":["jakarta.servlet.Registration$Dynamic"] }, 
    {"name":"getInitParameters","parameterTypes":[] }, 
    {"name":"isAsyncSupported","parameterTypes":[] }, 
    {"name":"setAsyncSupported","parameterTypes":["boolean"] }, 
    {"name":"setInitParameters","parameterTypes":["java.util.Map"] }, 
    {"name":"setName","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.FilterRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getFilter","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.RegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isEnabled","parameterTypes":[] }, 
    {"name":"onStartup","parameterTypes":["jakarta.servlet.ServletContext"] }, 
    {"name":"setEnabled","parameterTypes":["boolean"] }, 
    {"name":"setOrder","parameterTypes":["int"] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.ServletContextInitializer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.ServletRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getMultipartConfig","parameterTypes":[] }, 
    {"name":"getServlet","parameterTypes":[] }, 
    {"name":"getServletName","parameterTypes":[] }, 
    {"name":"getUrlMappings","parameterTypes":[] }, 
    {"name":"setLoadOnStartup","parameterTypes":["int"] }, 
    {"name":"setMultipartConfig","parameterTypes":["jakarta.servlet.MultipartConfigElement"] }, 
    {"name":"setServlet","parameterTypes":["jakarta.servlet.Servlet"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getErrorAttributes","parameterTypes":["org.springframework.web.context.request.WebRequest","org.springframework.boot.web.error.ErrorAttributeOptions"] }]
},
{
  "name":"org.springframework.boot.web.servlet.error.ErrorAttributes",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.error.ErrorController",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedFilter",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addCookieSameSiteSuppliers","parameterTypes":["org.springframework.boot.web.servlet.server.CookieSameSiteSupplier[]"] }, 
    {"name":"addInitializers","parameterTypes":["org.springframework.boot.web.servlet.ServletContextInitializer[]"] }, 
    {"name":"addWebListeners","parameterTypes":["java.lang.String[]"] }, 
    {"name":"getContextPath","parameterTypes":[] }, 
    {"name":"getCookieSameSiteSuppliers","parameterTypes":[] }, 
    {"name":"getDisplayName","parameterTypes":[] }, 
    {"name":"getDocumentRoot","parameterTypes":[] }, 
    {"name":"getInitParameters","parameterTypes":[] }, 
    {"name":"getJsp","parameterTypes":[] }, 
    {"name":"getLocaleCharsetMappings","parameterTypes":[] }, 
    {"name":"getMimeMappings","parameterTypes":[] }, 
    {"name":"getSession","parameterTypes":[] }, 
    {"name":"isRegisterDefaultServlet","parameterTypes":[] }, 
    {"name":"setContextPath","parameterTypes":["java.lang.String"] }, 
    {"name":"setCookieSameSiteSuppliers","parameterTypes":["java.util.List"] }, 
    {"name":"setDisplayName","parameterTypes":["java.lang.String"] }, 
    {"name":"setDocumentRoot","parameterTypes":["java.io.File"] }, 
    {"name":"setInitParameters","parameterTypes":["java.util.Map"] }, 
    {"name":"setInitializers","parameterTypes":["java.util.List"] }, 
    {"name":"setJsp","parameterTypes":["org.springframework.boot.web.servlet.server.Jsp"] }, 
    {"name":"setLocaleCharsetMappings","parameterTypes":["java.util.Map"] }, 
    {"name":"setMimeMappings","parameterTypes":["org.springframework.boot.web.server.MimeMappings"] }, 
    {"name":"setRegisterDefaultServlet","parameterTypes":["boolean"] }, 
    {"name":"setSession","parameterTypes":["org.springframework.boot.web.servlet.server.Session"] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.server.Encoding",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.server.ServletWebServerFactory"
},
{
  "name":"org.springframework.cache.Cache"
},
{
  "name":"org.springframework.cache.CacheManager"
},
{
  "name":"org.springframework.cache.caffeine.CaffeineCache"
},
{
  "name":"org.springframework.cache.caffeine.CaffeineCacheManager"
},
{
  "name":"org.springframework.cache.interceptor.CacheAspectSupport"
},
{
  "name":"org.springframework.cache.interceptor.CacheInterceptor"
},
{
  "name":"org.springframework.cache.jcache.JCacheCache"
},
{
  "name":"org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"afterSingletonsInstantiated","parameterTypes":[] }, 
    {"name":"configurationPropertiesBeans","parameterTypes":[] }, 
    {"name":"configurationPropertiesRebinder","parameterTypes":["org.springframework.cloud.context.properties.ConfigurationPropertiesBeans"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"environmentManager","parameterTypes":["org.springframework.core.env.ConfigurableEnvironment"] }
  ]
},
{
  "name":"org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.autoconfigure.RefreshAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"configDataContextRefresher","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.springframework.cloud.context.scope.refresh.RefreshScope","org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties"] }, 
    {"name":"loggingRebinder","parameterTypes":[] }, 
    {"name":"refreshEventListener","parameterTypes":["org.springframework.cloud.context.refresh.ContextRefresher"] }, 
    {"name":"refreshScope","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"postProcessBeanDefinitionRegistry","parameterTypes":["org.springframework.beans.factory.support.BeanDefinitionRegistry"] }, 
    {"name":"postProcessBeanFactory","parameterTypes":["org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }, 
    {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }
  ]
},
{
  "name":"org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"refreshScopeHealthIndicator","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder"] }
  ]
},
{
  "name":"org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"refreshEndpoint","parameterTypes":["org.springframework.cloud.context.refresh.ContextRefresher"] }
  ]
},
{
  "name":"org.springframework.cloud.autoconfigure.RestartEndpointWithIntegrationConfiguration"
},
{
  "name":"org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.BootstrapApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.BootstrapConfigFileApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.LoggingSystemShutdownListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.RefreshBootstrapRegistryInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.KeyProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.RsaProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.marker$Marker"
},
{
  "name":"org.springframework.cloud.bootstrap.marker.Marker"
},
{
  "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"featuresEndpoint","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"commonsFeatures","parameterTypes":[] }, 
    {"name":"discoveryClientHealthIndicator","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties"] }, 
    {"name":"discoveryCompositeHealthContributor","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.cloud.client.ConditionalOnBlockingDiscoveryEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.ConditionalOnDiscoveryEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.ConditionalOnDiscoveryHealthIndicatorEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.ConditionalOnReactiveDiscoveryEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.ServiceInstance",
  "methods":[
    {"name":"getInstanceId","parameterTypes":[] }, 
    {"name":"getScheme","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.client.actuator.FeaturesEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.cloud.client.actuator.HasFeatures",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.circuitbreaker.CircuitBreaker"
},
{
  "name":"org.springframework.cloud.client.discovery.DiscoveryClient",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"probe","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"compositeDiscoveryClient","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryHealthIndicator",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"setInet","parameterTypes":["org.springframework.cloud.commons.util.InetUtils"] }, 
    {"name":"setServer","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }, 
    {"name":"simpleDiscoveryClient","parameterTypes":["org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties"] }, 
    {"name":"simpleDiscoveryProperties","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalanced",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancedRetryFactory"
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loadBalancedRestTemplateInitializerDeprecated","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"loadBalancerRequestFactory","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerClient"] }
  ]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loadBalancerInterceptor","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerClient","org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory"] }, 
    {"name":"restTemplateCustomizer","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor"] }
  ]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerClient",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loadBalancerClientsDefaultsMappingsProvider","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getHealthCheck","parameterTypes":[] }, 
    {"name":"getHint","parameterTypes":[] }, 
    {"name":"getHintHeaderName","parameterTypes":[] }, 
    {"name":"getRetry","parameterTypes":[] }, 
    {"name":"getStickySession","parameterTypes":[] }, 
    {"name":"getXForwarded","parameterTypes":[] }, 
    {"name":"setHealthCheck","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"] }, 
    {"name":"setHint","parameterTypes":["java.util.Map"] }, 
    {"name":"setHintHeaderName","parameterTypes":["java.lang.String"] }, 
    {"name":"setRetry","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"] }, 
    {"name":"setStickySession","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$StickySession"] }, 
    {"name":"setxForwarded","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$XForwarded"] }
  ]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerRequestTransformer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.RestTemplateCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration"
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration"
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addRegistrationLifecycle","parameterTypes":["org.springframework.cloud.client.serviceregistry.RegistrationLifecycle"] }, 
    {"name":"addRegistrationManagementLifecycle","parameterTypes":["org.springframework.cloud.client.serviceregistry.RegistrationManagementLifecycle"] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getPhase","parameterTypes":[] }, 
    {"name":"isAutoStartup","parameterTypes":[] }, 
    {"name":"isRunning","parameterTypes":[] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.boot.web.context.WebServerInitializedEvent"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistration",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"afterPropertiesSet","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistry",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration"] }, 
    {"name":"serviceRegistryEndpoint","parameterTypes":["org.springframework.cloud.client.serviceregistry.ServiceRegistry"] }
  ]
},
{
  "name":"org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultsBindHandlerAdvisor","parameterTypes":["org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider[]"] }
  ]
},
{
  "name":"org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$ResourceServerTokenRelayRegistrationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"addInterceptors","parameterTypes":["org.springframework.web.servlet.config.annotation.InterceptorRegistry"] }
  ]
},
{
  "name":"org.springframework.cloud.commons.util.InetUtils",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.commons.util.InetUtilsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.commons.util.UtilAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"inetUtils","parameterTypes":["org.springframework.cloud.commons.util.InetUtilsProperties"] }, 
    {"name":"inetUtilsProperties","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.config.client$ConfigServerInstanceProvider"
},
{
  "name":"org.springframework.cloud.config.client.ConfigServerInstanceProvider"
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifier",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"compositeCompatibilityVerifier","parameterTypes":["java.util.List"] }, 
    {"name":"sleuthPresentVerifier","parameterTypes":[] }, 
    {"name":"springBootVersionVerifier","parameterTypes":["org.springframework.cloud.configuration.CompatibilityVerifierProperties"] }
  ]
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifierProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.configuration.CompositeCompatibilityVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.configuration.SleuthPresentVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.configuration.SpringBootVersionVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.context.environment.EnvironmentManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }]
},
{
  "name":"org.springframework.cloud.context.named.NamedContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"buildContext","parameterTypes":["java.lang.String"] }, 
    {"name":"createContext","parameterTypes":["java.lang.String"] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getConfigurations","parameterTypes":[] }, 
    {"name":"getContextNames","parameterTypes":[] }, 
    {"name":"getInstance","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"getInstance","parameterTypes":["java.lang.String","java.lang.Class","java.lang.Class[]"] }, 
    {"name":"getInstance","parameterTypes":["java.lang.String","org.springframework.core.ResolvableType"] }, 
    {"name":"getInstances","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"getLazyProvider","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"getParent","parameterTypes":[] }, 
    {"name":"getProvider","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"registerBeans","parameterTypes":["java.lang.String","org.springframework.context.support.GenericApplicationContext"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setConfigurations","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.cloud.context.named.NamedContextFactory$Specification",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.cloud.context.refresh.ConfigDataContextRefresher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.context.refresh.ContextRefresher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"refresh","parameterTypes":[] }, 
    {"name":"refreshEnvironment","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.context.restart.RestartEndpoint"
},
{
  "name":"org.springframework.cloud.context.restart.RestartListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.context.scope.refresh.RefreshScope"
},
{
  "name":"org.springframework.cloud.endpoint.RefreshEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.endpoint.event.RefreshEventListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.health.RefreshScopeHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClient",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$AvoidPreviousInstanceEnabledCondition",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$BlockingOnAvoidPreviousInstanceAndRetryEnabledCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$BlockingSupportConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$DefaultConfigurationCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$HealthCheckConfigurationCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$ReactiveOnAvoidPreviousInstanceAndRetryEnabledCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$RequestBasedStickySessionConfigurationCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$SameInstancePreferenceConfigurationCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$WeightedConfigurationCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfiguration$ZonePreferenceConfigurationCondition",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfigurationRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.Class[]"] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClients",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.aot.LoadBalancerChildContextInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.cache.DefaultLoadBalancerCacheManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheManager",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"blockingLoadBalancerClient","parameterTypes":["org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"] }, 
    {"name":"loadBalancerServiceInstanceCookieTransformer","parameterTypes":["org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"] }, 
    {"name":"xForwarderHeadersTransformer","parameterTypes":["org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"] }
  ]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loadBalancerChildContextInitializer","parameterTypes":["org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory","org.springframework.context.ApplicationContext"] }, 
    {"name":"loadBalancerClientFactory","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"loadBalancerEagerContextInitializer","parameterTypes":["org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory","org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties"] }, 
    {"name":"zoneConfig","parameterTypes":["org.springframework.core.env.Environment"] }
  ]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultLoadBalancerCacheManager","parameterTypes":["org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties"] }
  ]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"caffeineWarnLogger","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$OnCaffeineCacheMissingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$OnLoadBalancerCachingEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.core.CachingServiceInstanceListSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.core.DelegatingServiceInstanceListSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getDelegate","parameterTypes":[] }, 
    {"name":"getServiceId","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.core.RandomLoadBalancer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.core.ReactorLoadBalancer",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"choose","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.core.ReactorServiceInstanceLoadBalancer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.core.ServiceInstanceListSupplier",
  "queryAllPublicMethods":true,
  "methods":[{"name":"get","parameterTypes":["org.springframework.cloud.client.loadbalancer.Request"] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getProperties","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.support.LoadBalancerEagerContextInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.logging.LoggingRebinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.DefaultFeignLoggerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.DefaultTargeter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.EnableFeignClients",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.FeignAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"feignChildContextInitializer","parameterTypes":["org.springframework.context.support.GenericApplicationContext","org.springframework.cloud.openfeign.FeignClientFactory"] }, 
    {"name":"feignClientBeanFactoryInitializationCodeGenerator","parameterTypes":["org.springframework.context.support.GenericApplicationContext","org.springframework.cloud.openfeign.FeignClientFactory"] }, 
    {"name":"feignContext","parameterTypes":[] }, 
    {"name":"feignFeature","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.openfeign.FeignAutoConfiguration$DefaultFeignTargeterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"feignTargeter","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.openfeign.FeignAutoConfiguration$FeignJacksonConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"pageJacksonModule","parameterTypes":[] }, 
    {"name":"sortModule","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.openfeign.FeignCircuitBreakerDisabledConditions",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.openfeign.FeignClient",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"isSingleton","parameterTypes":[] }, 
    {"name":"setContextId","parameterTypes":["java.lang.String"] }, 
    {"name":"setDismiss404","parameterTypes":["boolean"] }, 
    {"name":"setFallback","parameterTypes":["java.lang.Class"] }, 
    {"name":"setFallbackFactory","parameterTypes":["java.lang.Class"] }, 
    {"name":"setName","parameterTypes":["java.lang.String"] }, 
    {"name":"setPath","parameterTypes":["java.lang.String"] }, 
    {"name":"setQualifiers","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setRefreshableClient","parameterTypes":["boolean"] }, 
    {"name":"setType","parameterTypes":["java.lang.Class"] }, 
    {"name":"setUrl","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientMicrometerEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientSpecification",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","java.lang.Class[]"] }]
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"feignClientConfigurer","parameterTypes":[] }, 
    {"name":"feignContract","parameterTypes":["org.springframework.core.convert.ConversionService"] }, 
    {"name":"feignConversionService","parameterTypes":[] }, 
    {"name":"feignDecoder","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"feignEncoderPageable","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"feignLoggerFactory","parameterTypes":[] }, 
    {"name":"feignQueryMapEncoderPageable","parameterTypes":[] }, 
    {"name":"feignRetryer","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientsConfiguration$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientsConfiguration$DefaultFeignBuilderConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"feignBuilder","parameterTypes":["feign.Retryer"] }
  ]
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientsConfiguration$MicrometerConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"micrometerObservationCapability","parameterTypes":["io.micrometer.observation.ObservationRegistry"] }
  ]
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientsConfiguration$SpringPojoFormEncoder",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientsRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.openfeign.FeignLoggerFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.Targeter",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.aot.FeignChildContextInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.aot.FeignClientBeanFactoryInitializationAotProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.clientconfig.FeignClientConfigurer",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"inheritParentConfiguration","parameterTypes":[] }, 
    {"name":"primary","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.openfeign.loadbalancer.DefaultFeignLoadBalancerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"feignClient","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerClient","org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory","java.util.List"] }
  ]
},
{
  "name":"org.springframework.cloud.openfeign.loadbalancer.FeignBlockingLoadBalancerClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.loadbalancer.FeignLoadBalancerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"xForwarderHeadersFeignTransformer","parameterTypes":["org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"] }
  ]
},
{
  "name":"org.springframework.cloud.openfeign.loadbalancer.HttpClient5FeignLoadBalancerConfiguration"
},
{
  "name":"org.springframework.cloud.openfeign.loadbalancer.LoadBalancerFeignRequestTransformer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.loadbalancer.OkHttpFeignLoadBalancerConfiguration"
},
{
  "name":"org.springframework.cloud.openfeign.loadbalancer.OnRetryNotEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.openfeign.loadbalancer.XForwardedHeadersTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.support.FeignEncoderProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.openfeign.support.FeignHttpClientProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.openfeign.support.PageJacksonModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getModuleName","parameterTypes":[] }, 
    {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, 
    {"name":"version","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.openfeign.support.PageableSpringEncoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.support.PageableSpringQueryMapEncoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"encode","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.cloud.openfeign.support.SortJacksonModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getModuleName","parameterTypes":[] }, 
    {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, 
    {"name":"version","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.openfeign.support.SpringMvcContract",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.sleuth$Tracer"
},
{
  "name":"org.springframework.cloud.sleuth.Tracer"
},
{
  "name":"org.springframework.cloud.util.ConditionalOnBootstrapDisabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.util.ConditionalOnBootstrapDisabled$OnBootstrapDisabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.util.ConditionalOnBootstrapEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.util.ConditionalOnBootstrapEnabled$OnBootstrapEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.ConditionalOnZookeeperEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.ZookeeperAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"curatorFramework","parameterTypes":["org.springframework.cloud.zookeeper.ZookeeperProperties","org.apache.curator.RetryPolicy","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"exponentialBackoffRetry","parameterTypes":["org.springframework.cloud.zookeeper.ZookeeperProperties"] }, 
    {"name":"zookeeperProperties","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.ZookeeperHealthAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"zookeeperHealthIndicator","parameterTypes":["org.apache.curator.framework.CuratorFramework"] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.ZookeeperHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.ZookeeperProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setConnectString","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ConditionalOnLoadBalancerForZookeeperEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ConditionalOnZookeeperDiscoveryEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.LoadBalancerZookeeperAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"zookeeperServiceWatch","parameterTypes":["org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryProperties"] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryAutoConfiguration$ZookeeperDiscoveryHealthConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"zookeeperDiscoveryHealthIndicator","parameterTypes":["org.apache.curator.framework.CuratorFramework","org.apache.curator.x.discovery.ServiceDiscovery","org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryProperties"] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"zookeeperDiscoveryClient","parameterTypes":["org.apache.curator.x.discovery.ServiceDiscovery","org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryProperties"] }, 
    {"name":"zookeeperDiscoveryClientMarker","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryClientConfiguration$Marker",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"setInstanceId","parameterTypes":["java.lang.String"] }, 
    {"name":"setPreferIpAddress","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperInstance",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"getMetadata","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }, 
    {"name":"setMetadata","parameterTypes":["java.util.Map"] }, 
    {"name":"setName","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperLifecycle"
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperLoadBalancerConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"zookeeperDiscoveryClientServiceInstanceListSupplier","parameterTypes":["org.springframework.cloud.client.discovery.DiscoveryClient","org.springframework.core.env.Environment","org.springframework.context.ApplicationContext","org.springframework.cloud.zookeeper.discovery.dependency.ZookeeperDependencies"] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.ZookeeperServiceWatch",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"stop","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.configclient.ZookeeperConfigServerBootstrapper",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.dependency.ConditionalOnDependenciesPassed",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.dependency.DependenciesPassedCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.dependency.DependencyEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.dependency.ZookeeperDependencies",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"init","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.zookeeper.discovery.dependency.ZookeeperDependenciesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"zookeeperDependencies","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.serviceregistry.ServiceInstanceRegistration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.serviceregistry.ZookeeperAutoServiceRegistration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.serviceregistry.ZookeeperAutoServiceRegistrationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"serviceInstanceRegistration","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryProperties"] }, 
    {"name":"zookeeperAutoServiceRegistration","parameterTypes":["org.springframework.cloud.zookeeper.serviceregistry.ZookeeperServiceRegistry","org.springframework.cloud.zookeeper.serviceregistry.ZookeeperRegistration","org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryProperties"] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.serviceregistry.ZookeeperRegistration",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.serviceregistry.ZookeeperServiceRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.serviceregistry.ZookeeperServiceRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"zookeeperDiscoveryProperties","parameterTypes":["org.springframework.cloud.commons.util.InetUtils"] }, 
    {"name":"zookeeperServiceRegistry","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.support.CuratorServiceDiscoveryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"curatorServiceDiscovery","parameterTypes":["org.springframework.cloud.zookeeper.support.ServiceDiscoveryCustomizer"] }, 
    {"name":"defaultServiceDiscoveryCustomizer","parameterTypes":["org.apache.curator.framework.CuratorFramework","org.springframework.cloud.zookeeper.discovery.ZookeeperDiscoveryProperties","org.apache.curator.x.discovery.details.InstanceSerializer"] }, 
    {"name":"deprecatedInstanceSerializer","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.zookeeper.support.DefaultServiceDiscoveryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.zookeeper.support.ServiceDiscoveryCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationContextAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.context.ApplicationEventPublisherAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationStartupAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.EmbeddedValueResolverAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.EnvironmentAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.LifecycleProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.MessageSourceAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ResourceLoaderAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.AnnotationScopeMetadataResolver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.AspectJAutoProxyRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.AutoProxyRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Bean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ComponentScan",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ComponentScan$Filter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Condition",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.Conditional",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Configuration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassPostProcessor",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setMetadataReaderFactory","parameterTypes":["org.springframework.core.type.classreading.MetadataReaderFactory"] }
  ]
},
{
  "name":"org.springframework.context.annotation.DependsOn",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.EnableAspectJAutoProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Import",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ImportAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.ImportRuntimeHints",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Lazy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Primary",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Role",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Scope",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.event.DefaultEventListenerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.event.EventListenerMethodProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.event.SmartApplicationListener",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getListenerId","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"supportsSourceType","parameterTypes":["java.lang.Class"] }
  ]
},
{
  "name":"org.springframework.context.support.ApplicationObjectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getApplicationContext","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.context.support.DefaultLifecycleProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
},
{
  "name":"org.springframework.core.Ordered",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.PriorityOrdered",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.annotation.AliasFor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.Order",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.convert.support.ConfigurableConversionService",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.convert.support.GenericConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addConverter","parameterTypes":["java.lang.Class","java.lang.Class","org.springframework.core.convert.converter.Converter"] }, 
    {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.Converter"] }, 
    {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.GenericConverter"] }, 
    {"name":"addConverterFactory","parameterTypes":["org.springframework.core.convert.converter.ConverterFactory"] }, 
    {"name":"canBypassConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"canConvert","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"canConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","java.lang.Class"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"removeConvertible","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.core.env.EnvironmentCapable",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.task.AsyncListenableTaskExecutor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.task.AsyncTaskExecutor",
  "methods":[
    {"name":"submitCompletable","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"submitCompletable","parameterTypes":["java.util.concurrent.Callable"] }
  ]
},
{
  "name":"org.springframework.core.type.classreading.MetadataReaderFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.data.cassandra.ReactiveSession"
},
{
  "name":"org.springframework.data.convert.CustomConversions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getCustomWriteTarget","parameterTypes":["java.lang.Class"] }, 
    {"name":"getCustomWriteTarget","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"getPropertyValueConversions","parameterTypes":[] }, 
    {"name":"getSimpleTypeHolder","parameterTypes":[] }, 
    {"name":"hasCustomReadTarget","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"hasCustomWriteTarget","parameterTypes":["java.lang.Class"] }, 
    {"name":"hasCustomWriteTarget","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"hasValueConverter","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, 
    {"name":"isSimpleType","parameterTypes":["java.lang.Class"] }, 
    {"name":"registerConvertersIn","parameterTypes":["org.springframework.core.convert.converter.ConverterRegistry"] }
  ]
},
{
  "name":"org.springframework.data.convert.EntityConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.convert.EntityReader",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.convert.EntityWriter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.convert.ReadingConverter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.convert.WritingConverter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.domain.Page"
},
{
  "name":"org.springframework.data.domain.Pageable"
},
{
  "name":"org.springframework.data.domain.Sort"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient"
},
{
  "name":"org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
},
{
  "name":"org.springframework.data.geo.GeoModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
},
{
  "name":"org.springframework.data.jpa.repository.JpaRepository"
},
{
  "name":"org.springframework.data.keyvalue.core.AbstractKeyValueAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"count","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.String"] }, 
    {"name":"find","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.String"] }, 
    {"name":"find","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.String","java.lang.Class"] }
  ]
},
{
  "name":"org.springframework.data.keyvalue.core.KeyValueAdapter",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"entries","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"exists","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.data.keyvalue.core.KeyValueOperations",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.keyvalue.core.KeyValueTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"count","parameterTypes":["java.lang.Class"] }, 
    {"name":"count","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.Class"] }, 
    {"name":"delete","parameterTypes":["java.lang.Class"] }, 
    {"name":"delete","parameterTypes":["java.lang.Object"] }, 
    {"name":"delete","parameterTypes":["java.lang.Object","java.lang.Class"] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.keyvalue.core.KeyValueCallback"] }, 
    {"name":"exists","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.Class"] }, 
    {"name":"find","parameterTypes":["org.springframework.data.keyvalue.core.query.KeyValueQuery","java.lang.Class"] }, 
    {"name":"findAll","parameterTypes":["java.lang.Class"] }, 
    {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort","java.lang.Class"] }, 
    {"name":"findById","parameterTypes":["java.lang.Object","java.lang.Class"] }, 
    {"name":"findInRange","parameterTypes":["long","int","java.lang.Class"] }, 
    {"name":"findInRange","parameterTypes":["long","int","org.springframework.data.domain.Sort","java.lang.Class"] }, 
    {"name":"insert","parameterTypes":["java.lang.Object"] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, 
    {"name":"setEventTypesToPublish","parameterTypes":["java.util.Set"] }, 
    {"name":"setExceptionTranslator","parameterTypes":["org.springframework.dao.support.PersistenceExceptionTranslator"] }
  ]
},
{
  "name":"org.springframework.data.keyvalue.core.mapping.context.KeyValueMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"createPersistentProperty","parameterTypes":["org.springframework.data.mapping.model.Property","org.springframework.data.keyvalue.core.mapping.KeyValuePersistentEntity","org.springframework.data.mapping.model.SimpleTypeHolder"] }, 
    {"name":"createPersistentProperty","parameterTypes":["org.springframework.data.mapping.model.Property","org.springframework.data.mapping.model.MutablePersistentEntity","org.springframework.data.mapping.model.SimpleTypeHolder"] }
  ]
},
{
  "name":"org.springframework.data.keyvalue.repository.config.QueryCreatorType",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.ldap.repository.LdapRepository"
},
{
  "name":"org.springframework.data.mapping.context.AbstractMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"createPersistentProperty","parameterTypes":["org.springframework.data.mapping.model.Property","org.springframework.data.mapping.model.MutablePersistentEntity","org.springframework.data.mapping.model.SimpleTypeHolder"] }, 
    {"name":"findPersistentPropertyPaths","parameterTypes":["java.lang.Class","java.util.function.Predicate"] }, 
    {"name":"getManagedTypes","parameterTypes":[] }, 
    {"name":"getPersistentEntities","parameterTypes":[] }, 
    {"name":"getPersistentEntity","parameterTypes":["java.lang.Class"] }, 
    {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, 
    {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }, 
    {"name":"getPersistentPropertyPath","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"getPersistentPropertyPath","parameterTypes":["org.springframework.data.mapping.PropertyPath"] }, 
    {"name":"hasPersistentEntityFor","parameterTypes":["java.lang.Class"] }, 
    {"name":"initialize","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, 
    {"name":"setInitialEntitySet","parameterTypes":["java.util.Set"] }, 
    {"name":"setManagedTypes","parameterTypes":["org.springframework.data.domain.ManagedTypes"] }, 
    {"name":"setSimpleTypeHolder","parameterTypes":["org.springframework.data.mapping.model.SimpleTypeHolder"] }, 
    {"name":"setStrict","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.data.mapping.context.MappingContext",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getPersistentEntity","parameterTypes":["java.lang.Class"] }, 
    {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }, 
    {"name":"getRequiredPersistentEntity","parameterTypes":["java.lang.Class"] }, 
    {"name":"getRequiredPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, 
    {"name":"getRequiredPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }
  ]
},
{
  "name":"org.springframework.data.mongodb.core.MongoOperations"
},
{
  "name":"org.springframework.data.mongodb.core.MongoTemplate"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveMongoTemplate"
},
{
  "name":"org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
},
{
  "name":"org.springframework.data.redis.cache.RedisCache"
},
{
  "name":"org.springframework.data.redis.connection.ReactiveRedisConnectionFactory"
},
{
  "name":"org.springframework.data.redis.connection.RedisConnectionFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.connection.jedis.JedisConnection"
},
{
  "name":"org.springframework.data.redis.connection.jedis.JedisConnectionFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.ReactiveRedisTemplate"
},
{
  "name":"org.springframework.data.redis.core.RedisAccessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getConnectionFactory","parameterTypes":[] }, 
    {"name":"getRequiredConnectionFactory","parameterTypes":[] }, 
    {"name":"setConnectionFactory","parameterTypes":["org.springframework.data.redis.connection.RedisConnectionFactory"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.RedisKeyValueAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.data.redis.core.RedisOperations","org.springframework.data.redis.core.convert.RedisConverter"] }, 
    {"name":"delete","parameterTypes":["java.lang.Object","java.lang.String","java.lang.Class"] }, 
    {"name":"get","parameterTypes":["java.lang.Object","java.lang.String","java.lang.Class"] }, 
    {"name":"getAllOf","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"setEnableKeyspaceEvents","parameterTypes":["org.springframework.data.redis.core.RedisKeyValueAdapter$EnableKeyspaceEvents"] }, 
    {"name":"setKeyspaceNotificationsConfigParameter","parameterTypes":["java.lang.String"] }, 
    {"name":"setShadowCopy","parameterTypes":["org.springframework.data.redis.core.RedisKeyValueAdapter$ShadowCopy"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.RedisKeyValueAdapter$EnableKeyspaceEvents",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.RedisKeyValueAdapter$ShadowCopy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.RedisKeyValueTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.data.redis.core.RedisKeyValueAdapter","org.springframework.data.redis.core.mapping.RedisMappingContext"] }, 
    {"name":"getMappingContext","parameterTypes":[] }, 
    {"name":"insert","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"update","parameterTypes":["java.lang.Object"] }, 
    {"name":"update","parameterTypes":["java.lang.Object","java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.RedisOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"expire","parameterTypes":["java.lang.Object","java.time.Duration"] }, 
    {"name":"expireAt","parameterTypes":["java.lang.Object","java.time.Instant"] }, 
    {"name":"restore","parameterTypes":["java.lang.Object","byte[]","long","java.util.concurrent.TimeUnit"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.RedisTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"boundGeoOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundHashOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundListOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundSetOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundStreamOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundValueOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"boundZSetOps","parameterTypes":["java.lang.Object"] }, 
    {"name":"convertAndSend","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"copy","parameterTypes":["java.lang.Object","java.lang.Object","boolean"] }, 
    {"name":"countExistingKeys","parameterTypes":["java.util.Collection"] }, 
    {"name":"delete","parameterTypes":["java.lang.Object"] }, 
    {"name":"delete","parameterTypes":["java.util.Collection"] }, 
    {"name":"discard","parameterTypes":[] }, 
    {"name":"dump","parameterTypes":["java.lang.Object"] }, 
    {"name":"exec","parameterTypes":[] }, 
    {"name":"exec","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.redis.core.RedisCallback"] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.redis.core.RedisCallback","boolean"] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.redis.core.RedisCallback","boolean","boolean"] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.redis.core.SessionCallback"] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","java.util.List","java.lang.Object[]"] }, 
    {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","org.springframework.data.redis.serializer.RedisSerializer","org.springframework.data.redis.serializer.RedisSerializer","java.util.List","java.lang.Object[]"] }, 
    {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.RedisCallback"] }, 
    {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.RedisCallback","org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.SessionCallback"] }, 
    {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.SessionCallback","org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"executeWithStickyConnection","parameterTypes":["org.springframework.data.redis.core.RedisCallback"] }, 
    {"name":"expire","parameterTypes":["java.lang.Object","long","java.util.concurrent.TimeUnit"] }, 
    {"name":"expireAt","parameterTypes":["java.lang.Object","java.util.Date"] }, 
    {"name":"getClientList","parameterTypes":[] }, 
    {"name":"getDefaultSerializer","parameterTypes":[] }, 
    {"name":"getExpire","parameterTypes":["java.lang.Object"] }, 
    {"name":"getExpire","parameterTypes":["java.lang.Object","java.util.concurrent.TimeUnit"] }, 
    {"name":"getHashKeySerializer","parameterTypes":[] }, 
    {"name":"getHashValueSerializer","parameterTypes":[] }, 
    {"name":"getKeySerializer","parameterTypes":[] }, 
    {"name":"getStringSerializer","parameterTypes":[] }, 
    {"name":"getValueSerializer","parameterTypes":[] }, 
    {"name":"hasKey","parameterTypes":["java.lang.Object"] }, 
    {"name":"isEnableDefaultSerializer","parameterTypes":[] }, 
    {"name":"isExposeConnection","parameterTypes":[] }, 
    {"name":"keys","parameterTypes":["java.lang.Object"] }, 
    {"name":"killClient","parameterTypes":["java.lang.String","int"] }, 
    {"name":"move","parameterTypes":["java.lang.Object","int"] }, 
    {"name":"multi","parameterTypes":[] }, 
    {"name":"opsForCluster","parameterTypes":[] }, 
    {"name":"opsForGeo","parameterTypes":[] }, 
    {"name":"opsForHash","parameterTypes":[] }, 
    {"name":"opsForHyperLogLog","parameterTypes":[] }, 
    {"name":"opsForList","parameterTypes":[] }, 
    {"name":"opsForSet","parameterTypes":[] }, 
    {"name":"opsForStream","parameterTypes":[] }, 
    {"name":"opsForStream","parameterTypes":["org.springframework.data.redis.hash.HashMapper"] }, 
    {"name":"opsForValue","parameterTypes":[] }, 
    {"name":"opsForZSet","parameterTypes":[] }, 
    {"name":"persist","parameterTypes":["java.lang.Object"] }, 
    {"name":"randomKey","parameterTypes":[] }, 
    {"name":"rename","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"renameIfAbsent","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"replicaOf","parameterTypes":["java.lang.String","int"] }, 
    {"name":"replicaOfNoOne","parameterTypes":[] }, 
    {"name":"restore","parameterTypes":["java.lang.Object","byte[]","long","java.util.concurrent.TimeUnit","boolean"] }, 
    {"name":"scan","parameterTypes":["org.springframework.data.redis.core.ScanOptions"] }, 
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, 
    {"name":"setDefaultSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"setEnableDefaultSerializer","parameterTypes":["boolean"] }, 
    {"name":"setEnableTransactionSupport","parameterTypes":["boolean"] }, 
    {"name":"setExposeConnection","parameterTypes":["boolean"] }, 
    {"name":"setHashKeySerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"setHashValueSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"setKeySerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"setScriptExecutor","parameterTypes":["org.springframework.data.redis.core.script.ScriptExecutor"] }, 
    {"name":"setStringSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"setValueSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery"] }, 
    {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","java.lang.Object"] }, 
    {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","org.springframework.data.redis.core.BulkMapper"] }, 
    {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","org.springframework.data.redis.core.BulkMapper","org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"type","parameterTypes":["java.lang.Object"] }, 
    {"name":"unlink","parameterTypes":["java.lang.Object"] }, 
    {"name":"unlink","parameterTypes":["java.util.Collection"] }, 
    {"name":"unwatch","parameterTypes":[] }, 
    {"name":"watch","parameterTypes":["java.lang.Object"] }, 
    {"name":"watch","parameterTypes":["java.util.Collection"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.StringRedisTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.convert.KeyspaceConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.redis.core.convert.MappingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.redis.core.index.ConfigurableIndexDefinitionProvider","org.springframework.data.redis.core.convert.KeyspaceConfiguration"] }]
},
{
  "name":"org.springframework.data.redis.core.convert.MappingRedisConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.data.redis.core.mapping.RedisMappingContext"] }, 
    {"name":"setCustomConversions","parameterTypes":["org.springframework.data.convert.CustomConversions"] }, 
    {"name":"setReferenceResolver","parameterTypes":["org.springframework.data.redis.core.convert.ReferenceResolver"] }
  ]
},
{
  "name":"org.springframework.data.redis.core.convert.RedisConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.core.convert.RedisCustomConversions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.redis.core.convert.ReferenceResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.core.convert.ReferenceResolverImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.redis.core.RedisOperations"] }]
},
{
  "name":"org.springframework.data.redis.core.index.ConfigurableIndexDefinitionProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.core.index.IndexConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.redis.core.mapping.RedisMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.data.redis.core.convert.MappingConfiguration"] }, 
    {"name":"setFallbackKeySpaceResolver","parameterTypes":["org.springframework.data.keyvalue.core.mapping.KeySpaceResolver"] }
  ]
},
{
  "name":"org.springframework.data.redis.repository.configuration.EnableRedisRepositories",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean"
},
{
  "name":"org.springframework.data.repository.Repository"
},
{
  "name":"org.springframework.data.repository.config.RepositoryRegistrationAotProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setConfigMap","parameterTypes":["java.util.Map"] }
  ]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryMethodInvocationListener",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter"
},
{
  "name":"org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
},
{
  "name":"org.springframework.data.util.CustomCollections$EclipseCollections",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.CustomCollections$VavrCollections",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.CustomCollections.EclipseCollections"
},
{
  "name":"org.springframework.data.util.CustomCollections.VavrCollections"
},
{
  "name":"org.springframework.data.web.PageableArgumentResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.PageableHandlerMethodArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.web.PageableHandlerMethodArgumentResolverSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"isFallbackPageable","parameterTypes":["org.springframework.data.domain.Pageable"] }, 
    {"name":"setFallbackPageable","parameterTypes":["org.springframework.data.domain.Pageable"] }, 
    {"name":"setMaxPageSize","parameterTypes":["int"] }, 
    {"name":"setOneIndexedParameters","parameterTypes":["boolean"] }, 
    {"name":"setPageParameterName","parameterTypes":["java.lang.String"] }, 
    {"name":"setPrefix","parameterTypes":["java.lang.String"] }, 
    {"name":"setQualifierDelimiter","parameterTypes":["java.lang.String"] }, 
    {"name":"setSizeParameterName","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.data.web.SortArgumentResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.SortHandlerMethodArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.web.SortHandlerMethodArgumentResolverSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getPropertyDelimiter","parameterTypes":[] }, 
    {"name":"setFallbackSort","parameterTypes":["org.springframework.data.domain.Sort"] }, 
    {"name":"setPropertyDelimiter","parameterTypes":["java.lang.String"] }, 
    {"name":"setQualifierDelimiter","parameterTypes":["java.lang.String"] }, 
    {"name":"setSortParameter","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.data.web.config.EnableSpringDataWebSupport",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"projectingArgumentResolverBeanPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectFactory"] }
  ]
},
{
  "name":"org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.config.SpringDataJacksonConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"jacksonGeoModule","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.data.web.config.SpringDataJacksonModules",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.config.SpringDataWebConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectFactory"] }, 
    {"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, 
    {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, 
    {"name":"extendMessageConverters","parameterTypes":["java.util.List"] }, 
    {"name":"pageableResolver","parameterTypes":[] }, 
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, 
    {"name":"sortResolver","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.format.FormatterRegistry",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.format.support.DefaultFormattingConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addDefaultFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }]
},
{
  "name":"org.springframework.format.support.FormattingConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addFormatter","parameterTypes":["org.springframework.format.Formatter"] }, 
    {"name":"addFormatterForFieldAnnotation","parameterTypes":["org.springframework.format.AnnotationFormatterFactory"] }, 
    {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Formatter"] }, 
    {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Printer","org.springframework.format.Parser"] }, 
    {"name":"addParser","parameterTypes":["org.springframework.format.Parser"] }, 
    {"name":"addPrinter","parameterTypes":["org.springframework.format.Printer"] }, 
    {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }
  ]
},
{
  "name":"org.springframework.hateoas$Link"
},
{
  "name":"org.springframework.hateoas.EntityModel"
},
{
  "name":"org.springframework.hateoas.Link"
},
{
  "name":"org.springframework.hateoas.config.WebConverters"
},
{
  "name":"org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
},
{
  "name":"org.springframework.http.ReactiveHttpInputMessage"
},
{
  "name":"org.springframework.http.client.AbstractBufferingClientHttpRequest"
},
{
  "name":"org.springframework.http.client.AbstractClientHttpRequest"
},
{
  "name":"org.springframework.http.client.ClientHttpRequestInterceptor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.client.SimpleBufferingClientHttpRequest"
},
{
  "name":"org.springframework.http.codec.CodecConfigurer"
},
{
  "name":"org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
},
{
  "name":"org.springframework.http.converter.AbstractGenericHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"canWrite","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"write","parameterTypes":["java.lang.Object","java.lang.reflect.Type","org.springframework.http.MediaType","org.springframework.http.HttpOutputMessage"] }
  ]
},
{
  "name":"org.springframework.http.converter.AbstractHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addDefaultHeaders","parameterTypes":["org.springframework.http.HttpHeaders","java.lang.Object","org.springframework.http.MediaType"] }, 
    {"name":"canRead","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"canWrite","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"getContentLength","parameterTypes":["java.lang.Object","org.springframework.http.MediaType"] }, 
    {"name":"getDefaultCharset","parameterTypes":[] }, 
    {"name":"getSupportedMediaTypes","parameterTypes":[] }, 
    {"name":"read","parameterTypes":["java.lang.Class","org.springframework.http.HttpInputMessage"] }, 
    {"name":"setDefaultCharset","parameterTypes":["java.nio.charset.Charset"] }, 
    {"name":"setSupportedMediaTypes","parameterTypes":["java.util.List"] }, 
    {"name":"write","parameterTypes":["java.lang.Object","org.springframework.http.MediaType","org.springframework.http.HttpOutputMessage"] }, 
    {"name":"writeInternal","parameterTypes":["java.lang.Object","org.springframework.http.HttpOutputMessage"] }
  ]
},
{
  "name":"org.springframework.http.converter.GenericHttpMessageConverter",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.converter.HttpMessageConverter",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSupportedMediaTypes","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.http.converter.StringHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"canRead","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"canRead","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"canWrite","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"getObjectMapper","parameterTypes":[] }, 
    {"name":"getObjectMappersForType","parameterTypes":["java.lang.Class"] }, 
    {"name":"getSupportedMediaTypes","parameterTypes":["java.lang.Class"] }, 
    {"name":"read","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.HttpInputMessage"] }, 
    {"name":"registerObjectMappersForType","parameterTypes":["java.lang.Class","java.util.function.Consumer"] }, 
    {"name":"setObjectMapper","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper"] }, 
    {"name":"setPrettyPrint","parameterTypes":["boolean"] }, 
    {"name":"setSupportedMediaTypes","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.http.converter.json.GsonHttpMessageConverter"
},
{
  "name":"org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.http.server.reactive.HttpHandler"
},
{
  "name":"org.springframework.integration.config.EnableIntegration"
},
{
  "name":"org.springframework.integration.graph.IntegrationGraphServer"
},
{
  "name":"org.springframework.integration.monitor.IntegrationMBeanExporter"
},
{
  "name":"org.springframework.jdbc.core.JdbcTemplate"
},
{
  "name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
},
{
  "name":"org.springframework.jdbc.datasource.init.DatabasePopulator"
},
{
  "name":"org.springframework.jms.core.JmsTemplate"
},
{
  "name":"org.springframework.jmx.export.MBeanExporter"
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedAttribute",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedResource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.core.KafkaTemplate"
},
{
  "name":"org.springframework.kafka.core.ProducerFactory"
},
{
  "name":"org.springframework.ldap.core.ContextSource"
},
{
  "name":"org.springframework.ldap.core.LdapOperations"
},
{
  "name":"org.springframework.mail.javamail.JavaMailSenderImpl"
},
{
  "name":"org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler"
},
{
  "name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
},
{
  "name":"org.springframework.oxm.Marshaller"
},
{
  "name":"org.springframework.oxm.Unmarshaller"
},
{
  "name":"org.springframework.r2dbc.connection.R2dbcTransactionManager"
},
{
  "name":"org.springframework.r2dbc.connection.init.DatabasePopulator"
},
{
  "name":"org.springframework.retry.support.RetryTemplate"
},
{
  "name":"org.springframework.scheduling.SchedulingTaskExecutor",
  "queryAllPublicMethods":true,
  "methods":[{"name":"prefersShortLivedTasks","parameterTypes":[] }]
},
{
  "name":"org.springframework.scheduling.concurrent.CustomizableThreadFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newThread","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"initialize","parameterTypes":[] }, 
    {"name":"setAwaitTerminationMillis","parameterTypes":["long"] }, 
    {"name":"setAwaitTerminationSeconds","parameterTypes":["int"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setRejectedExecutionHandler","parameterTypes":["java.util.concurrent.RejectedExecutionHandler"] }, 
    {"name":"setThreadFactory","parameterTypes":["java.util.concurrent.ThreadFactory"] }, 
    {"name":"setThreadNamePrefix","parameterTypes":["java.lang.String"] }, 
    {"name":"setWaitForTasksToCompleteOnShutdown","parameterTypes":["boolean"] }, 
    {"name":"shutdown","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
},
{
  "name":"org.springframework.security.access.expression.AbstractSecurityExpressionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"createEvaluationContext","parameterTypes":["org.springframework.security.core.Authentication","java.lang.Object"] }, 
    {"name":"createSecurityExpressionRoot","parameterTypes":["org.springframework.security.core.Authentication","java.lang.Object"] }, 
    {"name":"getExpressionParser","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setExpressionParser","parameterTypes":["org.springframework.expression.ExpressionParser"] }, 
    {"name":"setPermissionEvaluator","parameterTypes":["org.springframework.security.access.PermissionEvaluator"] }, 
    {"name":"setRoleHierarchy","parameterTypes":["org.springframework.security.access.hierarchicalroles.RoleHierarchy"] }
  ]
},
{
  "name":"org.springframework.security.access.expression.SecurityExpressionHandler",
  "queryAllPublicMethods":true,
  "methods":[{"name":"createEvaluationContext","parameterTypes":["java.util.function.Supplier","java.lang.Object"] }]
},
{
  "name":"org.springframework.security.authentication.AbstractAuthenticationToken"
},
{
  "name":"org.springframework.security.authentication.AnonymousAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.authentication.AuthenticationEventPublisher",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authentication.AuthenticationManager",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authentication.AuthenticationManagerResolver"
},
{
  "name":"org.springframework.security.authentication.AuthenticationProvider",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authentication.BadCredentialsException"
},
{
  "name":"org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.authentication.ProviderManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.authentication.ReactiveAuthenticationManager"
},
{
  "name":"org.springframework.security.authentication.UsernamePasswordAuthenticationToken"
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authorization.AuthorizationManager",
  "queryAllPublicMethods":true,
  "methods":[{"name":"verify","parameterTypes":["java.util.function.Supplier","java.lang.Object"] }]
},
{
  "name":"org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"apply","parameterTypes":["org.springframework.security.config.annotation.SecurityConfigurer"] }, 
    {"name":"apply","parameterTypes":["org.springframework.security.config.annotation.SecurityConfigurerAdapter"] }, 
    {"name":"getConfigurer","parameterTypes":["java.lang.Class"] }, 
    {"name":"getConfigurers","parameterTypes":["java.lang.Class"] }, 
    {"name":"getOrBuild","parameterTypes":[] }, 
    {"name":"getSharedObject","parameterTypes":["java.lang.Class"] }, 
    {"name":"getSharedObjects","parameterTypes":[] }, 
    {"name":"objectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }, 
    {"name":"removeConfigurer","parameterTypes":["java.lang.Class"] }, 
    {"name":"removeConfigurers","parameterTypes":["java.lang.Class"] }, 
    {"name":"setSharedObject","parameterTypes":["java.lang.Class","java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.AbstractSecurityBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"build","parameterTypes":[] }, 
    {"name":"getObject","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.ObjectPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.config.annotation.SecurityBuilder",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.config.annotation.SecurityConfigurer",
  "queryAllPublicMethods":true,
  "methods":[{"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }]
},
{
  "name":"org.springframework.security.config.annotation.SecurityConfigurerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"addObjectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }, 
    {"name":"and","parameterTypes":[] }, 
    {"name":"configure","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, 
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, 
    {"name":"setBuilder","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.ProviderManagerBuilder",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"authenticationEventPublisher","parameterTypes":["org.springframework.security.authentication.AuthenticationEventPublisher"] }, 
    {"name":"authenticationProvider","parameterTypes":["org.springframework.security.authentication.AuthenticationProvider"] }, 
    {"name":"eraseCredentials","parameterTypes":["boolean"] }, 
    {"name":"getDefaultUserDetailsService","parameterTypes":[] }, 
    {"name":"isConfigured","parameterTypes":[] }, 
    {"name":"ldapAuthentication","parameterTypes":[] }, 
    {"name":"parentAuthenticationManager","parameterTypes":["org.springframework.security.authentication.AuthenticationManager"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationManagerBuilder","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor","org.springframework.context.ApplicationContext"] }, 
    {"name":"enableGlobalAuthenticationAutowiredConfigurer","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"initializeAuthenticationProviderBeanManagerConfigurer","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"initializeUserDetailsBeanManagerConfigurer","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setGlobalAuthenticationConfigurers","parameterTypes":["java.util.List"] }, 
    {"name":"setObjectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"inMemoryAuthentication","parameterTypes":[] }, 
    {"name":"jdbcAuthentication","parameterTypes":[] }, 
    {"name":"userDetailsService","parameterTypes":["org.springframework.security.core.userdetails.UserDetailsService"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"init","parameterTypes":["org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"] }]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.EnableGlobalAuthentication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"configure","parameterTypes":["org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"] }, 
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"init","parameterTypes":["org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"] }]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"init","parameterTypes":["org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"] }]
},
{
  "name":"org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"objectPostProcessor","parameterTypes":["org.springframework.beans.factory.config.AutowireCapableBeanFactory"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.HttpSecurityBuilder",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.config.annotation.web.builders.HttpSecurity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setSharedObject","parameterTypes":["java.lang.Class","java.lang.Object"] }]
},
{
  "name":"org.springframework.security.config.annotation.web.builders.WebSecurity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.EnableWebSecurity",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"httpSecurity","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setAuthenticationConfiguration","parameterTypes":["org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"] }, 
    {"name":"setContentNegotiationStrategy","parameterTypes":["org.springframework.web.accept.ContentNegotiationStrategy"] }, 
    {"name":"setObjectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2ClientWebMvcImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2ClientWebMvcSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, 
    {"name":"setAuthorizedClientRepository","parameterTypes":["java.util.List"] }, 
    {"name":"setClientRegistrationRepository","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.OAuth2ImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.SpringWebMvcImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, 
    {"name":"requestDataValueProcessor","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"conversionServicePostProcessor","parameterTypes":[] }, 
    {"name":"delegatingApplicationListener","parameterTypes":[] }, 
    {"name":"privilegeEvaluator","parameterTypes":[] }, 
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, 
    {"name":"setFilterChainProxySecurityConfigurer","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor","org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }, 
    {"name":"setFilterChains","parameterTypes":["java.util.List"] }, 
    {"name":"setImportMetadata","parameterTypes":["org.springframework.core.type.AnnotationMetadata"] }, 
    {"name":"springSecurityFilterChain","parameterTypes":[] }, 
    {"name":"webSecurityExpressionHandler","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"disable","parameterTypes":[] }, 
    {"name":"withObjectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"configure","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, 
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"
},
{
  "name":"org.springframework.security.config.http.SessionCreationPolicy"
},
{
  "name":"org.springframework.security.context.DelegatingApplicationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.core.AuthenticationException"
},
{
  "name":"org.springframework.security.core.authority.SimpleGrantedAuthority"
},
{
  "name":"org.springframework.security.core.context.SecurityContextImpl"
},
{
  "name":"org.springframework.security.core.userdetails.User"
},
{
  "name":"org.springframework.security.core.userdetails.User$AuthorityComparator"
},
{
  "name":"org.springframework.security.core.userdetails.UserDetailsService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.crypto.encrypt.TextEncryptor"
},
{
  "name":"org.springframework.security.data.repository.query.SecurityEvaluationContextExtension"
},
{
  "name":"org.springframework.security.oauth2.client.InMemoryOAuth2AuthorizedClientService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.OAuth2AuthorizedClientManager"
},
{
  "name":"org.springframework.security.oauth2.client.OAuth2AuthorizedClientService",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.authentication.OAuth2AuthenticationToken"
},
{
  "name":"org.springframework.security.oauth2.client.authentication.OAuth2LoginAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.oidc.authentication.OidcAuthorizationCodeAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.registration.ClientRegistration"
},
{
  "name":"org.springframework.security.oauth2.client.registration.ClientRegistrationRepository",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.userinfo.OAuth2UserService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.web.AuthenticatedPrincipalOAuth2AuthorizedClientRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"attemptAuthentication","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse"] }]
},
{
  "name":"org.springframework.security.oauth2.core.AbstractOAuth2Token"
},
{
  "name":"org.springframework.security.oauth2.core.AuthorizationGrantType"
},
{
  "name":"org.springframework.security.oauth2.core.endpoint.OAuth2AuthorizationRequest"
},
{
  "name":"org.springframework.security.oauth2.core.endpoint.OAuth2AuthorizationResponseType"
},
{
  "name":"org.springframework.security.oauth2.core.oidc.OidcIdToken"
},
{
  "name":"org.springframework.security.oauth2.core.oidc.OidcUserInfo"
},
{
  "name":"org.springframework.security.oauth2.core.oidc.user.DefaultOidcUser"
},
{
  "name":"org.springframework.security.oauth2.core.user.DefaultOAuth2User"
},
{
  "name":"org.springframework.security.oauth2.jwt.JwtDecoder",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.oauth2.jwt.NimbusJwtDecoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.authentication.ClientSecretAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.authentication.JwtClientAssertionAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.authentication.OAuth2AuthorizationCodeAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.authentication.OAuth2AuthorizationCodeRequestAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.authentication.OAuth2AuthorizationConsentAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.authentication.OAuth2ClientCredentialsAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.authentication.OAuth2RefreshTokenAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.authentication.OAuth2TokenIntrospectionAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.authentication.OAuth2TokenRevocationAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.authentication.PublicClientAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.client.InMemoryRegisteredClientRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.client.RegisteredClientRepository",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.AuthorizationServerContextFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.oidc.authentication.OidcUserInfoAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.oidc.web.OidcProviderConfigurationEndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.oidc.web.OidcUserInfoEndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.settings.AbstractSettings",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getSetting","parameterTypes":["java.lang.String"] }, 
    {"name":"getSettings","parameterTypes":[] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.security.oauth2.server.authorization.settings.AuthorizationServerSettings",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.token.OAuth2TokenCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.web.NimbusJwkSetEndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.web.OAuth2AuthorizationEndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.web.OAuth2AuthorizationServerMetadataEndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.web.OAuth2ClientAuthenticationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.web.OAuth2TokenEndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.web.OAuth2TokenIntrospectionEndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.authorization.web.OAuth2TokenRevocationEndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.resource.BearerTokenError"
},
{
  "name":"org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
},
{
  "name":"org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector"
},
{
  "name":"org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.rsa.crypto.RsaSecretEncryptor"
},
{
  "name":"org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
},
{
  "name":"org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
},
{
  "name":"org.springframework.security.web.AuthenticationEntryPoint",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.DefaultSecurityFilterChain",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.FilterChainProxy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.web.SecurityFilterChain",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.access.ExceptionTranslationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.web.access.RequestMatcherDelegatingWebInvocationPrivilegeEvaluator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.access.WebInvocationPrivilegeEvaluator",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.access.intercept.AuthorizationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }, 
    {"name":"getRememberMeServices","parameterTypes":[] }, 
    {"name":"setAllowSessionCreation","parameterTypes":["boolean"] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, 
    {"name":"setAuthenticationDetailsSource","parameterTypes":["org.springframework.security.authentication.AuthenticationDetailsSource"] }, 
    {"name":"setAuthenticationFailureHandler","parameterTypes":["org.springframework.security.web.authentication.AuthenticationFailureHandler"] }, 
    {"name":"setAuthenticationManager","parameterTypes":["org.springframework.security.authentication.AuthenticationManager"] }, 
    {"name":"setAuthenticationSuccessHandler","parameterTypes":["org.springframework.security.web.authentication.AuthenticationSuccessHandler"] }, 
    {"name":"setContinueChainBeforeSuccessfulAuthentication","parameterTypes":["boolean"] }, 
    {"name":"setFilterProcessesUrl","parameterTypes":["java.lang.String"] }, 
    {"name":"setMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }, 
    {"name":"setRememberMeServices","parameterTypes":["org.springframework.security.web.authentication.RememberMeServices"] }, 
    {"name":"setRequiresAuthenticationRequestMatcher","parameterTypes":["org.springframework.security.web.util.matcher.RequestMatcher"] }, 
    {"name":"setSecurityContextHolderStrategy","parameterTypes":["org.springframework.security.core.context.SecurityContextHolderStrategy"] }, 
    {"name":"setSecurityContextRepository","parameterTypes":["org.springframework.security.web.context.SecurityContextRepository"] }, 
    {"name":"setSessionAuthenticationStrategy","parameterTypes":["org.springframework.security.web.authentication.session.SessionAuthenticationStrategy"] }
  ]
},
{
  "name":"org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.authentication.RememberMeServices"
},
{
  "name":"org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"attemptAuthentication","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse"] }]
},
{
  "name":"org.springframework.security.web.authentication.WebAuthenticationDetails"
},
{
  "name":"org.springframework.security.web.authentication.logout.LogoutFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.authentication.logout.LogoutHandler",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.authentication.logout.LogoutSuccessEventPublishingLogoutHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"onAuthentication","parameterTypes":["org.springframework.security.core.Authentication","jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse"] }, 
    {"name":"setAlwaysCreateSession","parameterTypes":["boolean"] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }
  ]
},
{
  "name":"org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.authentication.session.SessionAuthenticationStrategy",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer"
},
{
  "name":"org.springframework.security.web.context.SecurityContextHolderFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.csrf.CsrfFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.csrf.DefaultCsrfToken"
},
{
  "name":"org.springframework.security.web.header.HeaderWriterFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.savedrequest.DefaultSavedRequest"
},
{
  "name":"org.springframework.security.web.savedrequest.RequestCacheAwareFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.savedrequest.SavedCookie"
},
{
  "name":"org.springframework.security.web.server.WebFilterChainProxy"
},
{
  "name":"org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.servlet.util.matcher.MvcRequestMatcher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"matcher","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }]
},
{
  "name":"org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.web.util.matcher.RequestMatcher",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.util.matcher.RequestVariablesExtractor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.session.FindByIndexNameSessionRepository"
},
{
  "name":"org.springframework.session.Session"
},
{
  "name":"org.springframework.session.SessionRepository",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.session.config.annotation.web.http.SpringHttpSessionConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"sessionEventHttpSessionListenerAdapter","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setCookieSerializer","parameterTypes":["org.springframework.session.web.http.CookieSerializer"] }, 
    {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }, 
    {"name":"springSessionRepositoryFilter","parameterTypes":["org.springframework.session.SessionRepository"] }
  ]
},
{
  "name":"org.springframework.session.data.mongo.MongoIndexedSessionRepository"
},
{
  "name":"org.springframework.session.data.redis.RedisIndexedSessionRepository"
},
{
  "name":"org.springframework.session.data.redis.RedisSessionRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.session.data.redis.config.annotation.SpringSessionRedisConnectionFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.session.data.redis.config.annotation.web.http.AbstractRedisHttpSessionConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, 
    {"name":"setDefaultRedisSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, 
    {"name":"setFlushMode","parameterTypes":["org.springframework.session.FlushMode"] }, 
    {"name":"setMaxInactiveInterval","parameterTypes":["java.time.Duration"] }, 
    {"name":"setMaxInactiveIntervalInSeconds","parameterTypes":["int"] }, 
    {"name":"setRedisConnectionFactory","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"setRedisNamespace","parameterTypes":["java.lang.String"] }, 
    {"name":"setSaveMode","parameterTypes":["org.springframework.session.SaveMode"] }, 
    {"name":"setSessionRepositoryCustomizer","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"sessionRepository","parameterTypes":[] }, 
    {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }, 
    {"name":"setImportMetadata","parameterTypes":["org.springframework.core.type.AnnotationMetadata"] }
  ]
},
{
  "name":"org.springframework.session.hazelcast.HazelcastIndexedSessionRepository"
},
{
  "name":"org.springframework.session.jdbc.JdbcIndexedSessionRepository"
},
{
  "name":"org.springframework.session.web.http.CookieHttpSessionIdResolver"
},
{
  "name":"org.springframework.session.web.http.CookieSerializer",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.session.web.http.DefaultCookieSerializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.session.web.http.HttpSessionIdResolver"
},
{
  "name":"org.springframework.session.web.http.OncePerRequestFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.session.web.http.SessionEventHttpSessionListenerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.session.web.http.SessionRepositoryFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"init","parameterTypes":["jakarta.servlet.FilterConfig"] }
  ]
},
{
  "name":"org.springframework.stereotype.Component",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Controller",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Indexed",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Service",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.PlatformTransactionManager"
},
{
  "name":"org.springframework.transaction.ReactiveTransactionManager"
},
{
  "name":"org.springframework.transaction.TransactionManager"
},
{
  "name":"org.springframework.transaction.annotation.EnableTransactionManagement",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.util.AntPathMatcher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.util.CustomizableThreadCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"createThread","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"getThreadGroup","parameterTypes":[] }, 
    {"name":"getThreadNamePrefix","parameterTypes":[] }, 
    {"name":"getThreadPriority","parameterTypes":[] }, 
    {"name":"isDaemon","parameterTypes":[] }, 
    {"name":"setDaemon","parameterTypes":["boolean"] }, 
    {"name":"setThreadGroup","parameterTypes":["java.lang.ThreadGroup"] }, 
    {"name":"setThreadGroupName","parameterTypes":["java.lang.String"] }, 
    {"name":"setThreadPriority","parameterTypes":["int"] }
  ]
},
{
  "name":"org.springframework.util.PathMatcher",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.validation.SmartValidator",
  "queryAllPublicMethods":true,
  "methods":[{"name":"validateValue","parameterTypes":["java.lang.Class","java.lang.String","java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }]
},
{
  "name":"org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"unwrap","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"setValidatedAnnotationType","parameterTypes":["java.lang.Class"] }, 
    {"name":"setValidator","parameterTypes":["jakarta.validation.Validator"] }, 
    {"name":"setValidatorFactory","parameterTypes":["jakarta.validation.ValidatorFactory"] }, 
    {"name":"setValidatorProvider","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]
},
{
  "name":"org.springframework.validation.beanvalidation.SpringValidatorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"forExecutables","parameterTypes":[] }, 
    {"name":"getConstraintsForClass","parameterTypes":["java.lang.Class"] }, 
    {"name":"supports","parameterTypes":["java.lang.Class"] }, 
    {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors"] }, 
    {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }, 
    {"name":"validate","parameterTypes":["java.lang.Object","java.lang.Class[]"] }, 
    {"name":"validateProperty","parameterTypes":["java.lang.Object","java.lang.String","java.lang.Class[]"] }, 
    {"name":"validateValue","parameterTypes":["java.lang.Class","java.lang.String","java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }, 
    {"name":"validateValue","parameterTypes":["java.lang.Class","java.lang.String","java.lang.Object","java.lang.Class[]"] }
  ]
},
{
  "name":"org.springframework.web.accept.ContentNegotiationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.accept.ContentNegotiationStrategy",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.accept.MediaTypeFileExtensionResolver",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ExceptionHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.GetMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.Mapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.PathVariable",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.PostMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ResponseBody",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.client.RestTemplate"
},
{
  "name":"org.springframework.web.context.ConfigurableWebApplicationContext"
},
{
  "name":"org.springframework.web.context.ServletContextAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.context.WebApplicationContext"
},
{
  "name":"org.springframework.web.context.request.RequestContextListener"
},
{
  "name":"org.springframework.web.context.support.GenericWebApplicationContext"
},
{
  "name":"org.springframework.web.context.support.WebApplicationObjectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }]
},
{
  "name":"org.springframework.web.cors.CorsConfigurationSource",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.filter.CharacterEncodingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getEncoding","parameterTypes":[] }, 
    {"name":"isForceRequestEncoding","parameterTypes":[] }, 
    {"name":"isForceResponseEncoding","parameterTypes":[] }, 
    {"name":"setEncoding","parameterTypes":["java.lang.String"] }, 
    {"name":"setForceEncoding","parameterTypes":["boolean"] }, 
    {"name":"setForceRequestEncoding","parameterTypes":["boolean"] }, 
    {"name":"setForceResponseEncoding","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.filter.DelegatingFilterProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.filter.FormContentFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"setCharset","parameterTypes":["java.nio.charset.Charset"] }, 
    {"name":"setFormConverter","parameterTypes":["org.springframework.http.converter.FormHttpMessageConverter"] }
  ]
},
{
  "name":"org.springframework.web.filter.GenericFilterBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getEnvironment","parameterTypes":[] }, 
    {"name":"getFilterConfig","parameterTypes":[] }, 
    {"name":"init","parameterTypes":["jakarta.servlet.FilterConfig"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }, 
    {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }
  ]
},
{
  "name":"org.springframework.web.filter.OncePerRequestFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.web.filter.RequestContextFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setThreadContextInheritable","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.web.filter.ServerHttpObservationFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.method.support.CompositeUriComponentsContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.method.support.HandlerMethodArgumentResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.method.support.UriComponentsContributor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.multipart.MultipartResolver",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.multipart.support.StandardServletMultipartResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive$DispatcherHandler"
},
{
  "name":"org.springframework.web.reactive.DispatcherHandler"
},
{
  "name":"org.springframework.web.reactive.HandlerResult"
},
{
  "name":"org.springframework.web.reactive.config$EnableWebFlux"
},
{
  "name":"org.springframework.web.reactive.config.EnableWebFlux"
},
{
  "name":"org.springframework.web.reactive.config.WebFluxConfigurer"
},
{
  "name":"org.springframework.web.reactive.function.client$ExchangeFilterFunction"
},
{
  "name":"org.springframework.web.reactive.function.client.ExchangeFilterFunction"
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient"
},
{
  "name":"org.springframework.web.server.session.WebSessionManager"
},
{
  "name":"org.springframework.web.servlet.DispatcherServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.FlashMapManager",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.FrameworkServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getContextAttribute","parameterTypes":[] }, 
    {"name":"getContextClass","parameterTypes":[] }, 
    {"name":"getContextConfigLocation","parameterTypes":[] }, 
    {"name":"getContextId","parameterTypes":[] }, 
    {"name":"getNamespace","parameterTypes":[] }, 
    {"name":"getServletContextAttributeName","parameterTypes":[] }, 
    {"name":"getWebApplicationContext","parameterTypes":[] }, 
    {"name":"isEnableLoggingRequestDetails","parameterTypes":[] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.event.ContextRefreshedEvent"] }, 
    {"name":"refresh","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setContextAttribute","parameterTypes":["java.lang.String"] }, 
    {"name":"setContextClass","parameterTypes":["java.lang.Class"] }, 
    {"name":"setContextConfigLocation","parameterTypes":["java.lang.String"] }, 
    {"name":"setContextId","parameterTypes":["java.lang.String"] }, 
    {"name":"setContextInitializerClasses","parameterTypes":["java.lang.String"] }, 
    {"name":"setContextInitializers","parameterTypes":["org.springframework.context.ApplicationContextInitializer[]"] }, 
    {"name":"setDispatchOptionsRequest","parameterTypes":["boolean"] }, 
    {"name":"setDispatchTraceRequest","parameterTypes":["boolean"] }, 
    {"name":"setEnableLoggingRequestDetails","parameterTypes":["boolean"] }, 
    {"name":"setNamespace","parameterTypes":["java.lang.String"] }, 
    {"name":"setPublishContext","parameterTypes":["boolean"] }, 
    {"name":"setPublishEvents","parameterTypes":["boolean"] }, 
    {"name":"setThreadContextInheritable","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.servlet.HandlerAdapter",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.HandlerExceptionResolver",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.HandlerMapping",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.HttpServletBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getEnvironment","parameterTypes":[] }, 
    {"name":"getServletName","parameterTypes":[] }, 
    {"name":"init","parameterTypes":[] }, 
    {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }
  ]
},
{
  "name":"org.springframework.web.servlet.LocaleResolver",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.RequestToViewNameTranslator",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.ThemeResolver",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.View",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.ViewResolver",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setConfigurers","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.web.servlet.config.annotation.EnableWebMvc",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"beanNameHandlerMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"defaultServletHandlerMapping","parameterTypes":[] }, 
    {"name":"getApplicationContext","parameterTypes":[] }, 
    {"name":"getServletContext","parameterTypes":[] }, 
    {"name":"handlerExceptionResolver","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, 
    {"name":"handlerFunctionAdapter","parameterTypes":[] }, 
    {"name":"httpRequestHandlerAdapter","parameterTypes":[] }, 
    {"name":"mvcHandlerMappingIntrospector","parameterTypes":[] }, 
    {"name":"mvcPathMatcher","parameterTypes":[] }, 
    {"name":"mvcPatternParser","parameterTypes":[] }, 
    {"name":"mvcResourceUrlProvider","parameterTypes":[] }, 
    {"name":"mvcUriComponentsContributor","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"] }, 
    {"name":"mvcUrlPathHelper","parameterTypes":[] }, 
    {"name":"mvcViewResolver","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, 
    {"name":"requestMappingHandlerMapping","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"resourceHandlerMapping","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"routerFunctionMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }, 
    {"name":"simpleControllerHandlerAdapter","parameterTypes":[] }, 
    {"name":"viewControllerHandlerMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"viewNameTranslator","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, 
    {"name":"addCorsMappings","parameterTypes":["org.springframework.web.servlet.config.annotation.CorsRegistry"] }, 
    {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, 
    {"name":"addInterceptors","parameterTypes":["org.springframework.web.servlet.config.annotation.InterceptorRegistry"] }, 
    {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"] }, 
    {"name":"addReturnValueHandlers","parameterTypes":["java.util.List"] }, 
    {"name":"addViewControllers","parameterTypes":["org.springframework.web.servlet.config.annotation.ViewControllerRegistry"] }, 
    {"name":"configureAsyncSupport","parameterTypes":["org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"] }, 
    {"name":"configureContentNegotiation","parameterTypes":["org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"] }, 
    {"name":"configureDefaultServletHandling","parameterTypes":["org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"] }, 
    {"name":"configureHandlerExceptionResolvers","parameterTypes":["java.util.List"] }, 
    {"name":"configureMessageConverters","parameterTypes":["java.util.List"] }, 
    {"name":"configurePathMatch","parameterTypes":["org.springframework.web.servlet.config.annotation.PathMatchConfigurer"] }, 
    {"name":"configureViewResolvers","parameterTypes":["org.springframework.web.servlet.config.annotation.ViewResolverRegistry"] }, 
    {"name":"extendHandlerExceptionResolvers","parameterTypes":["java.util.List"] }, 
    {"name":"extendMessageConverters","parameterTypes":["java.util.List"] }, 
    {"name":"getMessageCodesResolver","parameterTypes":[] }, 
    {"name":"getValidator","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.function.support.RouterFunctionMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"initApplicationContext","parameterTypes":[] }, 
    {"name":"setDetectHandlersInAncestorContexts","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getCorsConfigurationSource","parameterTypes":[] }, 
    {"name":"getCorsProcessor","parameterTypes":[] }, 
    {"name":"getDefaultHandler","parameterTypes":[] }, 
    {"name":"getHandler","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getPathMatcher","parameterTypes":[] }, 
    {"name":"getPatternParser","parameterTypes":[] }, 
    {"name":"getUrlPathHelper","parameterTypes":[] }, 
    {"name":"setAlwaysUseFullPath","parameterTypes":["boolean"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setCorsConfigurationSource","parameterTypes":["org.springframework.web.cors.CorsConfigurationSource"] }, 
    {"name":"setCorsConfigurations","parameterTypes":["java.util.Map"] }, 
    {"name":"setCorsProcessor","parameterTypes":["org.springframework.web.cors.CorsProcessor"] }, 
    {"name":"setDefaultHandler","parameterTypes":["java.lang.Object"] }, 
    {"name":"setInterceptors","parameterTypes":["java.lang.Object[]"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"setPathMatcher","parameterTypes":["org.springframework.util.PathMatcher"] }, 
    {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, 
    {"name":"setRemoveSemicolonContent","parameterTypes":["boolean"] }, 
    {"name":"setUrlDecode","parameterTypes":["boolean"] }, 
    {"name":"setUrlPathHelper","parameterTypes":["org.springframework.web.util.UrlPathHelper"] }, 
    {"name":"usesPathPatterns","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getDirectPaths","parameterTypes":["java.lang.Object"] }, 
    {"name":"getHandlerMethods","parameterTypes":[] }, 
    {"name":"getHandlerMethodsForMappingName","parameterTypes":["java.lang.String"] }, 
    {"name":"getMappingPathPatterns","parameterTypes":["java.lang.Object"] }, 
    {"name":"getMatchingMapping","parameterTypes":["java.lang.Object","jakarta.servlet.http.HttpServletRequest"] }, 
    {"name":"getNamingStrategy","parameterTypes":[] }, 
    {"name":"handleMatch","parameterTypes":["java.lang.Object","java.lang.String","jakarta.servlet.http.HttpServletRequest"] }, 
    {"name":"initCorsConfiguration","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, 
    {"name":"registerHandlerMethod","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, 
    {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }, 
    {"name":"setDetectHandlerMethodsInAncestorContexts","parameterTypes":["boolean"] }, 
    {"name":"setHandlerMethodMappingNamingStrategy","parameterTypes":["org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"] }, 
    {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, 
    {"name":"unregisterMapping","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getHandlerMap","parameterTypes":[] }, 
    {"name":"getPathPatternHandlerMap","parameterTypes":[] }, 
    {"name":"getRootHandler","parameterTypes":[] }, 
    {"name":"match","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String"] }, 
    {"name":"setLazyInitHandlers","parameterTypes":["boolean"] }, 
    {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, 
    {"name":"setRootHandler","parameterTypes":["java.lang.Object"] }, 
    {"name":"setUseTrailingSlashMatch","parameterTypes":["boolean"] }, 
    {"name":"useTrailingSlashMatch","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.handler.HandlerMappingIntrospector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.handler.MatchableHandlerMapping",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.i18n.AbstractLocaleResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setDefaultLocale","parameterTypes":["java.util.Locale"] }]
},
{
  "name":"org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getLastModified","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.Object"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"handle","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.Object"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"supports","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getBuilderConfiguration","parameterTypes":[] }, 
    {"name":"getContentNegotiationManager","parameterTypes":[] }, 
    {"name":"getFileExtensions","parameterTypes":[] }, 
    {"name":"getPathPrefixes","parameterTypes":[] }, 
    {"name":"initCorsConfiguration","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, 
    {"name":"match","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String"] }, 
    {"name":"registerHandlerMethod","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, 
    {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }, 
    {"name":"registerMapping","parameterTypes":["org.springframework.web.servlet.mvc.method.RequestMappingInfo","java.lang.Object","java.lang.reflect.Method"] }, 
    {"name":"setContentNegotiationManager","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, 
    {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }, 
    {"name":"setPathPrefixes","parameterTypes":["java.util.Map"] }, 
    {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, 
    {"name":"setUseRegisteredSuffixPatternMatch","parameterTypes":["boolean"] }, 
    {"name":"setUseSuffixPatternMatch","parameterTypes":["boolean"] }, 
    {"name":"setUseTrailingSlashMatch","parameterTypes":["boolean"] }, 
    {"name":"useRegisteredSuffixPatternMatch","parameterTypes":[] }, 
    {"name":"useSuffixPatternMatch","parameterTypes":[] }, 
    {"name":"useTrailingSlashMatch","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.servlet.resource.ResourceUrlProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.support.AbstractFlashMapManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getFlashMapTimeout","parameterTypes":[] }, 
    {"name":"getUrlPathHelper","parameterTypes":[] }, 
    {"name":"retrieveAndUpdate","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse"] }, 
    {"name":"saveOutputFlashMap","parameterTypes":["org.springframework.web.servlet.FlashMap","jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse"] }, 
    {"name":"setFlashMapTimeout","parameterTypes":["int"] }, 
    {"name":"setUrlPathHelper","parameterTypes":["org.springframework.web.util.UrlPathHelper"] }
  ]
},
{
  "name":"org.springframework.web.servlet.support.RequestDataValueProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.support.SessionFlashMapManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.support.WebContentGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getCacheControl","parameterTypes":[] }, 
    {"name":"getCacheSeconds","parameterTypes":[] }, 
    {"name":"getSupportedMethods","parameterTypes":[] }, 
    {"name":"getVaryByRequestHeaders","parameterTypes":[] }, 
    {"name":"isAlwaysMustRevalidate","parameterTypes":[] }, 
    {"name":"isRequireSession","parameterTypes":[] }, 
    {"name":"isUseCacheControlHeader","parameterTypes":[] }, 
    {"name":"isUseCacheControlNoStore","parameterTypes":[] }, 
    {"name":"isUseExpiresHeader","parameterTypes":[] }, 
    {"name":"setAlwaysMustRevalidate","parameterTypes":["boolean"] }, 
    {"name":"setCacheControl","parameterTypes":["org.springframework.http.CacheControl"] }, 
    {"name":"setCacheSeconds","parameterTypes":["int"] }, 
    {"name":"setRequireSession","parameterTypes":["boolean"] }, 
    {"name":"setSupportedMethods","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setUseCacheControlHeader","parameterTypes":["boolean"] }, 
    {"name":"setUseCacheControlNoStore","parameterTypes":["boolean"] }, 
    {"name":"setUseExpiresHeader","parameterTypes":["boolean"] }, 
    {"name":"setVaryByRequestHeaders","parameterTypes":["java.lang.String[]"] }
  ]
},
{
  "name":"org.springframework.web.servlet.theme.AbstractThemeResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getDefaultThemeName","parameterTypes":[] }, 
    {"name":"setDefaultThemeName","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.web.servlet.theme.FixedThemeResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.view.AbstractCachingViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"clearCache","parameterTypes":[] }, 
    {"name":"getCacheFilter","parameterTypes":[] }, 
    {"name":"getCacheLimit","parameterTypes":[] }, 
    {"name":"isCache","parameterTypes":[] }, 
    {"name":"isCacheUnresolved","parameterTypes":[] }, 
    {"name":"removeFromCache","parameterTypes":["java.lang.String","java.util.Locale"] }, 
    {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }, 
    {"name":"setCache","parameterTypes":["boolean"] }, 
    {"name":"setCacheFilter","parameterTypes":["org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"] }, 
    {"name":"setCacheLimit","parameterTypes":["int"] }, 
    {"name":"setCacheUnresolved","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.servlet.view.BeanNameViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.view.InternalResourceViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.view.UrlBasedViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getAttributesMap","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getRedirectHosts","parameterTypes":[] }, 
    {"name":"setAttributes","parameterTypes":["java.util.Properties"] }, 
    {"name":"setAttributesMap","parameterTypes":["java.util.Map"] }, 
    {"name":"setContentType","parameterTypes":["java.lang.String"] }, 
    {"name":"setExposeContextBeansAsAttributes","parameterTypes":["boolean"] }, 
    {"name":"setExposePathVariables","parameterTypes":["java.lang.Boolean"] }, 
    {"name":"setExposedContextBeanNames","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"setPrefix","parameterTypes":["java.lang.String"] }, 
    {"name":"setRedirectContextRelative","parameterTypes":["boolean"] }, 
    {"name":"setRedirectHosts","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setRedirectHttp10Compatible","parameterTypes":["boolean"] }, 
    {"name":"setRequestContextAttribute","parameterTypes":["java.lang.String"] }, 
    {"name":"setSuffix","parameterTypes":["java.lang.String"] }, 
    {"name":"setViewClass","parameterTypes":["java.lang.Class"] }, 
    {"name":"setViewNames","parameterTypes":["java.lang.String[]"] }
  ]
},
{
  "name":"org.springframework.web.servlet.view.ViewResolverComposite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer"
},
{
  "name":"org.springframework.web.util.UrlPathHelper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.util.pattern.PathPatternParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ws.client.core.WebServiceTemplate"
},
{
  "name":"org.springframework.ws.transport.http.MessageDispatcherServlet"
},
{
  "name":"org.thymeleaf.spring6$SpringTemplateEngine"
},
{
  "name":"org.thymeleaf.spring6.SpringTemplateEngine"
},
{
  "name":"org.webjars$WebJarAssetLocator"
},
{
  "name":"org.webjars.WebJarAssetLocator"
},
{
  "name":"org.xmlbeam$XBProjector"
},
{
  "name":"org.xmlbeam.XBProjector"
},
{
  "name":"org.xnio.SslClientAuthMode"
},
{
  "name":"org.yaml.snakeyaml.Yaml"
},
{
  "name":"reactor.core.publisher.Flux"
},
{
  "name":"reactor.core.publisher.Mono"
},
{
  "name":"reactor.netty.http.server.HttpServer"
},
{
  "name":"reactor.tools.agent$ReactorDebugAgent"
},
{
  "name":"reactor.tools.agent.ReactorDebugAgent"
},
{
  "name":"reactor.util.retry.RetrySpec"
},
{
  "name":"redis.clients.jedis.Jedis"
},
{
  "name":"redis.clients.jedis.JedisPool",
  "queryAllPublicConstructors":true
},
{
  "name":"scala$Option"
},
{
  "name":"scala.Option"
},
{
  "name":"sun.management.ClassLoadingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.CompilationImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$1",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryManagerImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryPoolImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.RuntimeImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.net.NetworkClient"
},
{
  "name":"sun.net.www.http.HttpClient"
},
{
  "name":"sun.net.www.protocol.http.HttpURLConnection"
},
{
  "name":"sun.nio.ch.Net"
},
{
  "name":"sun.nio.ch.NioSocketImpl"
},
{
  "name":"sun.security.provider.ConfigFile",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DRBG",
  "methods":[{"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyPairGenerator$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA256withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"zipkin2.Call$Base"
},
{
  "name":"zipkin2.Component",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"zipkin2.codec.BytesEncoder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"zipkin2.codec.SpanBytesEncoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"valueOf","parameterTypes":["java.lang.String"] }, 
    {"name":"values","parameterTypes":[] }
  ]
},
{
  "name":"zipkin2.codec.SpanBytesEncoder$3",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"encode","parameterTypes":["java.lang.Object"] }, 
    {"name":"encodeList","parameterTypes":["java.util.List"] }, 
    {"name":"encodeList","parameterTypes":["java.util.List","byte[]","int"] }, 
    {"name":"encoding","parameterTypes":[] }, 
    {"name":"sizeInBytes","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"zipkin2.reporter.AsyncReporter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"builder","parameterTypes":["zipkin2.reporter.Sender"] }, 
    {"name":"create","parameterTypes":["zipkin2.reporter.Sender"] }
  ]
},
{
  "name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"check","parameterTypes":[] }, 
    {"name":"close","parameterTypes":[] }, 
    {"name":"flush","parameterTypes":[] }, 
    {"name":"report","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"zipkin2.reporter.AsyncReporter$Flusher"
},
{
  "name":"zipkin2.reporter.Reporter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"zipkin2.reporter.Sender",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"zipkin2.reporter.brave.ConvertingZipkinSpanHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"toBuilder","parameterTypes":[] }]
},
{
  "name":"zipkin2.reporter.brave.ZipkinSpanHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"create","parameterTypes":["zipkin2.reporter.Reporter"] }, 
    {"name":"end","parameterTypes":["brave.propagation.TraceContext","brave.handler.MutableSpan","brave.handler.SpanHandler$Cause"] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"newBuilder","parameterTypes":["zipkin2.reporter.Reporter"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"zipkin2.reporter.urlconnection.URLConnectionSender"
}
]
