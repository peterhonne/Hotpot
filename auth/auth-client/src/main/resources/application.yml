server:
  port: 9081

spring:
  application:
    name: '@pom.artifactId@'
  cloud:
    zookeeper:
      discovery:
        instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${server.port}}}
        healthCheckTlsSkipVerify: true
        preferIpAddress: true
      connectString: localhost:2181
      healthCheckInterval: 15s

  thymeleaf:
    cache: false
  security:
    oauth2:
      client:
        registration:
          messaging-client-oidc:
            provider: keycloak
            client-id: messaging-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope: openid
          messaging-client-oauth2:
            provider: keycloak
            client-id: messaging-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope: profile
          messaging-client-client-creds:
            provider: keycloak
            client-id: messaging-client
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: message.read,message.write
          messaging-client-password:
            provider: keycloak
            client-id: messaging-client
            client-secret: secret
            authorization-grant-type: password
            scope: message.read,message.write
        provider:
          keycloak:
            authorization-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/auth
            token-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/token
            user-info-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/userinfo
            jwk-set-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/certs
            user-name-attribute: preferred_username

keycloak:
  realm: oauth2-sample
  auth-server-url: http://127.0.0.1:8080/

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"


management:
  zipkin:
    tracing:
      endpoint: http://127.0.0.1:9411/api/v2/spans
  tracing:
    sampling:
      probability: 0.5
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true



